<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><script type="text/javascript" async="" src="onet_pliki/analytics.js"></script><script src="onet_pliki/1023614747809903" async=""></script><script src="onet_pliki/1511413572442101" async=""></script><script async="" src="onet_pliki/fbevents.js"></script><script async="" src="onet_pliki/gtm.js"></script><script async="async" defer="defer" src="onet_pliki/xgemius.js"></script><script type="text/javascript">/* <![CDATA[ */
accConf = {"events":{"endpointPaths":["/a8f4d8cd95e164917035b64b867a45dd"]}};
/* ]]> */</script>

        <meta name="msapplication-starturl" content="https://www.onet.pl/">
        <meta name="msapplication-task" content="name=Wiadomości;action-uri=http://wiadomosci.onet.pl/;icon-uri=https://ocdn.eu/paas-static/template-engine/761c2299f84c68fd0c0f2cf89381abaf/faviconn2.ico">
        <meta name="msapplication-task" content="name=Biznes;action-uri=http://biznes.onet.pl/;icon-uri=https://ocdn.eu/paas-static/template-engine/761c2299f84c68fd0c0f2cf89381abaf/faviconn.ico">
        <meta name="msapplication-task" content="name=Sport;action-uri=http://sport.onet.pl/;icon-uri=https://ocdn.eu/paas-static/template-engine/761c2299f84c68fd0c0f2cf89381abaf/faviconn.ico">
        <meta name="msapplication-task" content="name=Film;action-uri=http://film.onet.pl/;icon-uri=https://ocdn.eu/paas-static/template-engine/761c2299f84c68fd0c0f2cf89381abaf/faviconn.ico">
        <meta name="msapplication-task" content="name=Muzyka;action-uri=http://muzyka.onet.pl/;icon-uri=https://ocdn.eu/paas-static/template-engine/761c2299f84c68fd0c0f2cf89381abaf/faviconn.ico">
        <meta name="msapplication-task" content="name=VOD;action-uri=https://vod.pl/;icon-uri=https://ocdn.eu/paas-static/template-engine/761c2299f84c68fd0c0f2cf89381abaf/faviconn.ico">
        <meta name="description" content="Onet: codzienne źródło informacji milionów Polaków - wiadomości z kraju i ze świata 24/7, pogoda, sport, biznes, moto, rozrywka. Bądź na bieżąco z Onet!">
        <meta property="og:image" content="https://ocdn.eu/images/pulscms/OWU7MDA_/20ec3038d7c7d1637e04da3395de954d.png">
        
        <meta name="referrer" content="origin">
        <!--
        <meta name="staticr-list" content="https://www.onet.pl/staticurls.txt">
        -->
		<meta name="viewport" content="width=1024">
        <title>Onet – Jesteś na bieżąco</title>
        
        <link rel="manifest" href="https://www.onet.pl/manifest.json">
        <link rel="canonical" href="onet_pliki/a_002.html">
		<link rel="alternate" media="only screen and (max-width: 768px)" href="https://m.onet.pl/">
    	<link rel="dns-prefetch" href="https://ocdn.eu/">
        <link rel="dns-prefetch" href="https://lib.onet.pl/">
        <link rel="dns-prefetch" href="https://csr.onet.pl/">
        <link rel="dns-prefetch" href="https://kropka.onet.pl/">
        <link rel="dns-prefetch" href="https://google-analytics.com/">
        <link rel="dns-prefetch" href="https://securepubads.g.doubleclick.net/">
        <link rel="dns-prefetch" href="https://fonts.googleapis.com/">
        <link rel="dns-prefetch" href="https://fonts.gstatic.com/">
        <link rel="shortcut icon" href="https://ocdn.eu/paas-static/template-engine/761c2299f84c68fd0c0f2cf89381abaf/faviconn.ico" type="image/x-icon">
        <meta name="onet-push" data-percentvalue="100">
        <style type="text/css" data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">
            .pageHeader,.pageHeader *{transition-duration:170ms;transition-timing-function:cubic-bezier(.55,.06,.68,.19)}*,.dn-tab-jakdojade form.scheduleForm .tripPoint input,.popup form.searchCity input{font-family:'Fira Sans',Arial,sans-serif}*,.dn-tab-jakdojade form.scheduleForm .tripPoint input:focus,.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker .dp-label input:focus,.popup form.searchCity input:focus{outline:0}@font-face{font-family:'Fira Sans';font-style:normal;font-weight:400;src:local('Fira Sans Regular'),local('FiraSans-Regular'),url(https://ocdn.eu/onetmobilemainpage/firafonts/p05/FiraSans-Regular.woff) format('woff')}@font-face{font-family:'Fira Sans';font-style:normal;font-weight:500;src:local('Fira Sans Medium'),local('FiraSans-Medium'),url(https://ocdn.eu/onetmobilemainpage/firafonts/p05/FiraSans-Medium.woff) format('woff')}@font-face{font-family:'Fira Sans';font-style:normal;font-weight:700;src:local('Fira Sans Bold'),local('FiraSans-Bold'),url(https://ocdn.eu/onetmobilemainpage/firafonts/p05/FiraSans-Bold.woff) format('woff')}.overAllHover{background:#fff;background:linear-gradient(to right,#fff 0,#efefef 23%,#fff 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#ffffff', GradientType=1)}.s4Hover{background:#081015;background:linear-gradient(to right,#081015 0,#132733 23%,#081015 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#081015', endColorstr='#081015', GradientType=1)}.s2Hover{background:#190524;background:linear-gradient(to right,#190524 0,#320a49 23%,#190524 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#190524', endColorstr='#190524', GradientType=1)}.newsBox .boxContent .bigItem:hover,.newsBox .boxContent li a:hover,.newsBox .moreNews a:hover{filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#ffffff', GradientType=1)}.visitedAllOver{color:#798f9f}*{margin:0;padding:0;text-decoration:none;border:none;list-style-type:none;image-rendering:optimizeQuality}html{font-size:40px}@media only screen and (max-width:1024px){html,html.bigMargin{font-size:30.68px}}@media only screen and (min-width:1025px){html{font-size:30.71px}html.bigMargin{font-size:28.5px}}@media only screen and (min-width:1056px){html{font-size:31.69px}html.bigMargin{font-size:29.48px}}@media only screen and (min-width:1088px){html{font-size:32.69px}html.bigMargin{font-size:30.49px}}@media only screen and (min-width:1120px){html{font-size:33.7px}html.bigMargin{font-size:31.5px}}@media only screen and (min-width:1152px){html{font-size:34.71px}html.bigMargin{font-size:32.5px}}@media only screen and (min-width:1184px){html{font-size:35.72px}html.bigMargin{font-size:33.51px}}@media only screen and (min-width:1216px){html{font-size:36.72px}html.bigMargin{font-size:34.52px}}@media only screen and (min-width:1248px){html{font-size:37.73px}html.bigMargin{font-size:35.53px}}@media only screen and (min-width:1280px){html{font-size:38.74px}html.bigMargin{font-size:36.54px}}@media only screen and (min-width:1312px){html{font-size:40px}}@media only screen and (min-width:1392px){html.bigMargin{font-size:40px}}*:first-child+html{font-size:62.5%}.mainIconPack{display:none}.sideBar{float:right;width:286.6px;width:9.25rem}.mainPageContent{width:673.9px;width:21.75rem;float:left}#mainPageBody{padding-top:7px}#mainPageBody .mainPageContent{padding-top:.175rem;width:673.9px;width:21.75rem}#mainPageBody .mainPageContent h3{text-transform:uppercase;margin:20px 0;font-size:11.62px;font-size:.375rem;color:#102633}#mainPageBody .mainPageContent .vod{background:#081015}#mainPageBody .mainPageContent .vod h3{color:#2FD6FF}#mainPageBody .mainPageContent .stars{background:#190524}#mainPageBody .mainPageContent .stars h3{color:#fff}#mainPageBody2 .mainPageContent,#mainPageBody3 .mainPageContent{width:673.9px;width:21.75rem}#mainPageBody2 .mainPageContent h3,#mainPageBody3 .mainPageContent h3{text-transform:uppercase;margin:20px 0;font-size:11.62px;font-size:.375rem;color:#102633}#mainPageBody2 .mainPageContent .vod,#mainPageBody3 .mainPageContent .vod{background:#081015}#mainPageBody2 .mainPageContent .vod h3,#mainPageBody3 .mainPageContent .vod h3{color:#2FD6FF}#mainPageBody2 .mainPageContent .stars,#mainPageBody3 .mainPageContent .stars{background:#190524}#mainPageBody2 .mainPageContent .stars h3,#mainPageBody3 .mainPageContent .stars h3{color:#fff}#mainPageBody0{z-index:1;overflow:hidden;text-align:center}#mainPageBody0 .e404SmallLogo{width:716.51px;width:23.125rem;text-align:center;font-size:24px;margin:30px auto 60px}#mainPageBody0 .e404SmallLogo img,#mainPageBody0 .e404SmallLogo span,#mainPageBody0 .e404SmallLogo strong{display:block;text-align:center;margin:auto}#mainPageBody0 .e404SmallLogo img{margin-bottom:60px}#mainPageBody0 .e404SmallLogo a{color:#000;border-bottom:solid 2px #ffd200}.mainCnt a,.mainCnt h3,.mainCnt h3 a{color:#1e1e1e}#mainPageBody0.e404,#mainPageBody0.logoutTop{padding:11px 0 24px}#apBlock{overflow:auto;text-align:left}#apBlock .apIntext{background-color:#fff;border:1px solid #dededf;font-size:8.52px;font-size:.275rem;text-align:justify;margin:.25rem auto;padding:.375rem .35rem}.e404Box,.pageHeader .servicesSubmenu .userLogin .userNotLogged{text-align:center}#apBlock .apIntext span{display:block}#apBlock .apIntext span.apHead{margin-bottom:.125rem}#apBlock .apIntext span.apFoot{float:right;margin-top:.3rem}#apBlock .apIntext:after{content:'';display:table;clear:both}body{min-width:980px;min-height:3000px;padding-top:100px;margin:auto;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;text-size-adjust:100%}.hidden{visibility:hidden}.hide{display:none}.mainCnt{overflow:hidden;position:relative;font-weight:400}.mainCnt a{font-size:10.07px;font-size:.325rem}.mainCnt h3{position:absolute;font-size:10.07px;font-size:.325rem;top:3.87px;top:.125rem}.mainCnt .servicelist{overflow:hidden}#catalogueWWW{float:left;position:relative;margin-top:.225rem;padding-bottom:10px}#catalogueWWW>ul{overflow:hidden;margin-left:2.625rem}#catalogueWWW>ul>li{float:left;margin-left:.775rem}#catalogueWWW>ul>li:first-child{margin-left:.5rem}#catalogueWWW>ul>li.more,#catalogueWWW>ul>li>ul>li{line-height:13.94px;line-height:.45rem}#catalogueWWW>ul>li>ul>li a{display:block;line-height:13.94px;line-height:.45rem}#catalogueWWW>ul>li.more a{display:block;line-height:13.94px;line-height:.45rem}#mainPageFooter{border-top:solid 1px #dcdcdc;overflow:hidden;padding:10px 7px}#mainPageFooter ul{overflow:hidden;margin-top:.125rem}#mainPageFooter ul li{float:left;font-size:10.84px;font-size:.35rem;line-height:15.49px;line-height:.5rem}#mainPageFooter ul li a{margin-left:.075rem}#mainPageFooter ul li a:after{content:" | "}#mainPageFooter ul li .copyrights a{font-size:10.84px;font-size:.35rem}#mainPageFooter ul li:last-child a:after{content:""}#mainPageFooter .colLeft,#mainPageFooter .portalLogo{float:left}#mainPageFooter .portalLogo svg{margin-right:.3rem;width:64.39px;width:2.07825rem;height:25.8px;height:.83275rem}#mainPageFooter .colRight{float:right}.itemMedia{background:#dcdcdc}.newsSpec{color:#000;background:#ffd200;font-size:7.75px;font-size:.25rem;font-weight:600;text-transform:uppercase;padding:.075rem .1rem .05rem}.newsSpec2{color:#fff;background:red}.newsSpec3{color:#fff;background:#000}.sgPlayerGls{display:block;cursor:pointer;position:absolute;top:0;background:url(https://ocdn.eu/static/mvpplayer/images/silentButton2.png) center center no-repeat rgba(200,200,200,.4);background-size:50% auto}.lv1c,.pageHeader{background:#fff}.lv1w{width:976px;width:31.5rem;margin:0 auto;padding:0 7px;position:relative}.lv1w .lv1w{padding:0;width:auto}.e404Box{margin:11px 0 0 24px}.itemMediaGallery use,.itemShortVideo use{fill:#fff;fill-rule:evenodd}.title .itemMediaGallery use,.title .itemShortVideo use{fill:#c8c8c8}svg .logoOnet1{fill:#1e1e1e}svg .logoOnet1,svg .logoOnet2{fill-rule:evenodd}svg .arrowUp1,svg .logoOnet2{fill:#ffd200}svg .arrowUp1,svg .arrowUp2{fill-rule:evenodd}svg .bellIcon1{fill:#fff}svg .bellIcon1,svg .bellIcon2,svg .bellIcon3{fill-rule:evenodd}svg .bellIcon2,svg .tick1{fill:#ffd200}svg .tick1,svg .tick2,svg .tick3{fill-rule:evenodd}svg .tick3{fill:#fff}svg .google1{fill:#ea4335;fill-opacity:.8}svg .google2{fill:#fbbc05;fill-opacity:.8}svg .google3{fill:#4285f4;fill-opacity:.8}svg .google4{fill:#34a853;fill-opacity:.8}svg .google5{fill:#c8c8c8;fill-opacity:.8}.pageHeader{height:101px;width:100%;position:fixed;top:0;z-index:5000001;box-sizing:border-box;transition-property:height;border-bottom:solid 1px #e4e4e4}.pageHeader *{transition-property:height,max-height,width,max-width,padding,margin,opacity,top}.pageHeader .pageAligment{height:100%;margin:0 auto;width:976px;width:31.5rem}.pageHeader>.pageAligment>*{float:left;height:101px}.pageHeader .onetLogo svg{display:block;margin-top:23px;width:187px;height:57px}.pageHeader .searchBar{width:247.87px;width:8rem;float:left}.pageHeader .searchBar .searchForm{margin-top:31px;position:relative}.pageHeader .searchBar .searchForm .searchQueryHolder{float:left;width:calc(100% - 99px);position:relative}.pageHeader .searchBar .searchForm .searchQueryHolder svg{position:absolute;top:10px;right:9px;width:100px;height:18px;pointer-events:none}.pageHeader .searchBar .searchForm .searchQueryInput{border:1px solid #dcdcdc;border-right:none;height:35px;width:100%;display:block;-webkit-appearance:none;border-radius:0}.pageHeader .searchBar .searchForm .searchQueryInput:focus+svg{display:none}.pageHeader .searchBar .searchForm .searchSubmit{width:99px;background:#ffd200;height:35px;text-transform:uppercase;display:block;-webkit-appearance:none;border-radius:0;font-size:12px;font-weight:700;padding-left:18px;letter-spacing:0}.pageHeader .searchBar .searchForm svg{position:absolute;width:16px;right:68px;top:10px;height:16px}.pageHeader .servicesMenu{float:right;height:101px}.pageHeader .serviceIcon{width:17px;height:22px;float:left;margin-right:4px}.pageHeader .serviceIcon.itemSympatia{width:18px;height:17px}.pageHeader .serviceIcon.itemShopping{width:21px;height:17px}.pageHeader .serviceIcon.itemZumi{width:12px;height:17px}.pageHeader .serviceIcon.itemGames{width:25px;height:24px;margin-top:-5px}.pageHeader .serviceIcon.itemVod{width:18px;height:17px}.pageHeader .serviceName{display:inline-block;overflow:hidden;opacity:1;height:22px;line-height:22px;max-width:100px;text-transform:uppercase}.pageHeader .menuIconClose,.pageHeader .menuIconOpen{float:right;width:22px;height:22px;margin:0 0 0 16px;cursor:pointer}.pageHeader .menuIconClose,.pageHeader.show .menuIconOpen{display:none}.pageHeader.show .menuIconClose{display:block}.pageHeader .headerNav{font-size:13px;float:left}.pageHeader .headerNav svg{-moz-transform:rotate(.00000001rad)}.pageHeader .headerNav>ul{padding-top:40px;float:left;height:30px;overflow:hidden}.pageHeader .headerNav .headerNavItem{float:left;position:relative}.pageHeader .headerNav .headerNavItem a{color:#000;margin-left:16px;display:block}.pageHeader .headerNav .headerNavItem.mail{margin-left:10px}.pageHeader .headerNav .headerNavItem.mail:before{content:'';display:block;position:absolute;left:5px;top:-8px;z-index:-1;width:38px;height:38px;background:#ffd200;border-radius:100%}.pageHeader .headerNav .headerNavItem .emailCount{background:#e00000;width:18px;height:18px;position:absolute;text-align:center;font-size:8px;line-height:19px;color:#fff;border-radius:100%;box-sizing:border-box;left:0;top:-10px}.pageHeader .servicesSubmenuPopup{height:0;overflow:hidden;position:absolute;background:#fff;right:0;top:151px;opacity:0;width:364.06px;width:11.75rem}.pageHeader .servicesSubmenu{float:right;padding-top:40px;position:relative}.pageHeader .servicesSubmenu .userLogin{background:#f8f8f8;float:left;width:364.06px;width:11.75rem;height:100%;box-sizing:border-box;border:1px solid #dcdcdc;border-top:0;border-bottom:0;font-weight:100}.pageHeader .servicesSubmenu .userLogin .userLogged,.pageHeader .servicesSubmenu .userLogin .userNotLogged{width:334.63px;width:10.8rem;margin:36px auto}.pageHeader .servicesSubmenu .userLogin img{border-radius:100%;float:left;margin-right:20px;width:82.88px;width:2.675rem;height:82.88px;height:2.675rem}.pageHeader .servicesSubmenu .userLogin .userData{float:left;width:216.89px;width:7rem;margin-top:17px}.pageHeader .servicesSubmenu .userLogin a{color:#000}.pageHeader .servicesSubmenu .userLogin .userEmail{font-size:17px;display:block;font-weight:700;margin:10px 0;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.pageHeader .servicesSubmenu .userLogin .userOption{display:inline-block;border-right:solid 1px #FFD200;padding-right:8px;margin-right:8px;font-size:10.07px;font-size:.325rem}.pageHeader .servicesSubmenu .userLogin .userOption:last-of-type{border:none}.pageHeader .servicesSubmenu .userLogin .userNotLogged span{font-size:10px;display:block}.pageHeader .servicesSubmenu .userLogin .loginButton{color:#fff;background:#000;padding:14px 30px;display:inline-block;margin:10px auto;text-transform:uppercase}.pageHeader.nojs .servicesSubmenu:hover .servicesSubmenuPopup,.pageHeader.show .servicesSubmenuPopup{opacity:1;height:180px}.pageHeader.switch,.pageHeader.switch>.pageAligment>*{height:45px}.pageHeader.switch .onetLogo svg{margin-top:5px;width:112px;height:36px}.pageHeader.switch .searchBar .searchForm{margin-top:5px}.pageHeader.switch .headerNav>ul,.pageHeader.switch .menuIconClose,.pageHeader.switch .menuIconOpen{padding-top:12px}.pageHeader.switch .headerNav>ul{padding-right:6px}.pageHeader.switch .servicesSubmenu{padding-top:0}.pageHeader.switch .serviceName{opacity:0;max-width:0}.pageHeader.switch .servicesSubmenuPopup{top:95px}@media only screen and (max-width:1088px){.pageHeader .searchBar{width:195.2px;width:6.3rem}.pageHeader .searchBar .searchForm .searchSubmit{width:43px;font-size:0}.pageHeader .searchBar .searchForm .searchQueryHolder{width:calc(100% - 43px)}.pageHeader .searchBar .searchForm svg{right:12px}}.pageHeader.show .servicesSubmenuPopup,.pageHeader.switch{box-shadow:0 2px 6px 2px rgba(0,0,0,.2)}.siteNavigation{background:#fff;width:100%;line-height:1;position:relative;z-index:4}.siteNavigation:after{position:absolute;border-bottom:1px solid #dbdbdd;top:47px;width:100%;content:""}.siteNavigation .highlight{background:#ffd200}nav.siteNavigation{border-top:1px solid #dcdcdc;z-index:10}#tabMenu{margin:0 auto;position:relative;width:976px;width:31.5rem}#tabMenu a,#tabMenu a:hover{color:#000}#tabMenu .mainMenu{height:47px;z-index:3;font-size:0;position:relative;overflow:hidden;white-space:normal}#tabMenu .mainMenu div:hover,#tabMenu .mainMenu li:hover div.bubbleGroup,#tabMenu .mainMenu li:hover div.bubbleMenu,#tabMenu .mainMenu li:hover ul,#tabMenu .mainMenu ul:hover{display:block}#tabMenu .mainMenu .bubbleGroup,#tabMenu .mainMenu .bubbleMenu{right:0;position:absolute;z-index:5;display:none}#tabMenu .mainMenu li{display:inline-block;vertical-align:top}#tabMenu .mainMenu li>a{overflow:hidden;display:block}#tabMenu .firstLevel{text-transform:uppercase}#tabMenu .firstLevel .mainMenu li{border-right:1px solid #dbdbdd;height:100%}#tabMenu .firstLevel .mainMenu li a{font-size:14px;font-weight:700;padding:16px 25px}#tabMenu .firstLevel .mainMenu li a:hover{color:#a5a5a7}#tabMenu .firstLevel .mainMenu .bubbleGroup li:hover a,#tabMenu .firstLevel .mainMenu .bubbleMenu li:hover a,#tabMenu .firstLevel .mainMenu li:hover a{color:#1e1e1e}#tabMenu .firstLevel .mainMenu li:last-child{border-right:none}#tabMenu .firstLevel .mainMenu li:first-child{border-left:1px solid #dbdbdd}#tabMenu .firstLevel .mainMenu li.pinned{position:relative}#tabMenu .firstLevel .mainMenu li.pinned .moreArrow{width:0;height:0;border-left:5.5px solid transparent;border-right:5.5px solid transparent;border-top:5px solid #000;margin-left:7px;display:inline-block}#tabMenu .firstLevel .mainMenu li.pinned:hover{background:#d9d9d9}#tabMenu .firstLevel .mainMenu li:hover{background:#e9e9e9}#tabMenu .firstLevel .mainMenu li.more.touch,#tabMenu .firstLevel .mainMenu li.more.touch:hover{background:0 0}#tabMenu .firstLevel .mainMenu li.more:hover>a.bubbleMenuHamburger.open,#tabMenu .firstLevel .mainMenu li.more>a.bubbleMenuHamburger.open{background:#d9d9d9}#tabMenu .firstLevel .mainMenu li.more:hover>a.bubbleMenuHamburger.closed,#tabMenu .firstLevel .mainMenu li.more>a.bubbleMenuHamburger.closed{background:0 0}#tabMenu .firstLevel .mainMenu .more{border-right:none}#tabMenu .firstLevel .mainMenu .more .bubbleMenuHamburger{font-size:37px;line-height:21px;font-weight:400;padding:0 16px 25px}#tabMenu .firstLevel .mainMenu .more:hover{background:#d9d9d9}#tabMenu .firstLevel .mainMenu .bubbleGroup,#tabMenu .firstLevel .mainMenu .bubbleMenu{width:auto;text-align:left;background:#fff;border:1px solid #dcdcdc;margin-top:1px}#tabMenu .firstLevel .mainMenu .bubbleGroup a,#tabMenu .firstLevel .mainMenu .bubbleMenu a{border:none;line-height:18px;font-weight:400}#tabMenu .firstLevel .mainMenu .bubbleGroup ul,#tabMenu .firstLevel .mainMenu .bubbleMenu ul{float:left;box-sizing:border-box}#tabMenu .firstLevel .mainMenu .bubbleGroup ul.subli,#tabMenu .firstLevel .mainMenu .bubbleMenu ul.subli{border-right:solid 1px #dcdcdc}#tabMenu .firstLevel .mainMenu .bubbleGroup ul.subli:last-child,#tabMenu .firstLevel .mainMenu .bubbleMenu ul.subli:last-child{border-right:none}#tabMenu .firstLevel .mainMenu .bubbleGroup li,#tabMenu .firstLevel .mainMenu .bubbleMenu li{border:none}#tabMenu .firstLevel .mainMenu .bubbleGroup li{width:100%}#tabMenu .firstLevel .mainMenu .bubbleGroup ul.subli{min-width:100px}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup{text-transform:none;border-bottom:5px solid #ffd200;width:495px}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup a{padding:0;font-weight:500;font-size:16px}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup li a>span{margin:0 12px;padding:12px 0;display:block;height:45px;position:relative}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup li+li a>span{border-top:1px dotted #ccc}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup span img{width:95px;height:53.5px}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup span.img{width:95px;float:left;display:block;height:55px;margin:0 12px 12px 0;overflow:hidden}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup .info{display:block;font-size:12px;font-weight:300;color:#ffd200;position:absolute;bottom:1px;left:107px}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup .info span{color:#1e1e1e}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup .tabMore{font-weight:400;font-size:13px;box-sizing:border-box;text-align:right}#tabMenu .firstLevel .mainMenu .imgs .bubbleGroup .tabMore:after{content:"";width:0;height:0;border-top:4px solid transparent;border-left:5px solid #000;border-bottom:4px solid transparent;margin-left:7px;display:inline-block}#eventBox.hpLiveNew{border:none;background:#fff;margin-top:.5rem}#eventBox.hpLiveNew .boxHeader h1,#eventBox.hpLiveNew .subsectionTitle{color:#1e1e1e;font-size:11.62px;font-size:.375rem;line-height:24.01px;line-height:.775rem;letter-spacing:.78px;letter-spacing:.025rem;font-weight:700;text-transform:uppercase;position:relative;z-index:2;padding-bottom:.2rem;white-space:nowrap}#eventBox.hpLiveNew .boxHeader h1 a,#eventBox.hpLiveNew .boxHeader h1 span,#eventBox.hpLiveNew .subsectionTitle a,#eventBox.hpLiveNew .subsectionTitle span{font-size:11.62px;font-size:.375rem;line-height:24.01px;line-height:.775rem;color:#1e1e1e;padding-left:.35rem}#eventBox.hpLiveNew .boxHeader h1 a,#eventBox.hpLiveNew .subsectionTitle a{padding-top:.15rem;padding-bottom:.28rem}#eventBox.hpLiveNew .boxHeader h1:before,#eventBox.hpLiveNew .subsectionTitle:before{content:'';display:block;position:absolute;left:0;z-index:-1;width:23.24px;width:.75rem;height:23.24px;height:.75rem;background:#ffd200;border-radius:100%}.hpLiveHeaderelectoral_red h1:before,.hpLiveHeadermilka h1:before{content:" " attr(title) " "!important;padding-left:14px;z-index:2!important;overflow:hidden;box-sizing:border-box}.hpLiveHeaderelectoral_red h1:before{background-color:#e10000!important;color:#fff}.hpLiveHeadermilka h1:before{background-color:#c5bcd9!important;color:#000}.hpLive{border:1px solid #dededf;overflow:hidden;position:relative;background:#f8f8f8;padding:.375rem .35rem}.hpLive .imageContainer{display:-ms-flexbox;display:flex;-ms-flex-preferred-size:100%;flex-basis:100%}.hpLive .imageGradient{display:none}.hpLive .collageImage{display:-ms-flexbox;display:flex;-ms-flex-preferred-size:100%;flex-basis:100%;float:left}.hpLive img{width:100%}.hpLive a{color:#000;position:relative}.hpLive iframe{display:block}.hpLive.hpLivegreen{background:linear-gradient(0deg,#005826 0,#1a7532 100%);border:0}.hpLive.hpLivegreen a{color:#fff}.hpLive.hpLivegreen .bookmarksWidget .bookmarksWidgetNav .bookmark{background-color:rgba(0,88,38,.5);color:#fff}.hpLive.hpLivegreen .bookmarksWidget .bookmarksWidgetNav .bookmark[data-active=true]{background-color:#005826}.hpLive.hpLivegreen .bookmarksWidgetContent .news,.hpLive.hpLivegreen .bookmarksWidgetContent .newsItem{border-bottom:1px dotted rgba(250,250,250,.7)}.hpLive.hpLivegreen .hpLiveColumnLeft .mundialWidget{background-color:rgba(22,140,53,.5)}.hpLive.hpLivegreen .hpLiveColumnLeft .widgetLinks a{background-color:rgba(26,117,50,.5);color:#fff}.hpLive.hpLiveyellow{background:#ffd200}.hpLive.hpLiveyellow .bookmarksWidget .bookmarksWidgetNav .bookmark{background-color:#1e1e1e;color:#fff}.hpLive.hpLiveyellow .bookmarksWidget .bookmarksWidgetNav .bookmark[data-active=true]{background-color:#fff;color:#000}.hpLive.hpLiveyellow .hpLiveColumnLeft .widgetLinks a{background-color:#1e1e1e;color:#fff}.hpLive.hpLiveyellow .hpLiveColumnLeft .layerTextBottom{border-left-color:#fff}.hpLive.hpLiveelectoral_red,.hpLive.hpLivered{background:linear-gradient(0deg,#e00000 0,#d43232 100%)}.hpLive.hpLiveelectoral_red .bookmarksWidget .bookmarksWidgetNav .bookmark,.hpLive.hpLivered .bookmarksWidget .bookmarksWidgetNav .bookmark{background-color:#1e1e1e;color:#fff}.hpLive.hpLiveelectoral_red .bookmarksWidget .bookmarksWidgetNav .bookmark[data-active=true],.hpLive.hpLivered .bookmarksWidget .bookmarksWidgetNav .bookmark[data-active=true]{background-color:#fff;color:#1e1e1e}.hpLive.hpLiveelectoral_red .hpLiveColumnLeft .widgetLinks a,.hpLive.hpLivered .hpLiveColumnLeft .widgetLinks a{background-color:#1e1e1e;color:#fff}.hpLive.hpLiveelectoral_red .hpLiveColumnLeft .itemBox.mainPlayer .layerTextBottom,.hpLive.hpLivered .hpLiveColumnLeft .itemBox.mainPlayer .layerTextBottom{background:#003663;color:#fff;border-left-color:#fff;padding-right:.25rem}.hpLive.hpLiveelectoral_red .hpLiveColumnLeft .itemBox.mainPlayer .layerTextBottom .info,.hpLive.hpLivered .hpLiveColumnLeft .itemBox.mainPlayer .layerTextBottom .info{background:#e00000;font-weight:500}.hpLive.hpLiveelectoral_red .hpLiveColumnLeft .mundialWidget .match__name,.hpLive.hpLiveelectoral_red .hpLiveColumnLeft .mundialWidget .score,.hpLive.hpLiveelectoral_red .hpLiveColumnLeft .mundialWidget .scoreboard__title,.hpLive.hpLiveelectoral_red .hpLiveColumnMiddle,.hpLive.hpLiveelectoral_red .hpLiveColumnMiddle a,.hpLive.hpLiveelectoral_red .hpLiveColumnRight .bookmarksWidgetContent,.hpLive.hpLiveelectoral_red .hpLiveColumnRight .bookmarksWidgetContent a,.hpLive.hpLiveelectoral_red .hpLiveColumnRight .widgetLinks a,.hpLive.hpLiveelectoral_red .hpLiveColumnRight .widgetLinks a a,.hpLive.hpLivered .hpLiveColumnLeft .mundialWidget .match__name,.hpLive.hpLivered .hpLiveColumnLeft .mundialWidget .score,.hpLive.hpLivered .hpLiveColumnLeft .mundialWidget .scoreboard__title,.hpLive.hpLivered .hpLiveColumnMiddle,.hpLive.hpLivered .hpLiveColumnMiddle a,.hpLive.hpLivered .hpLiveColumnRight .bookmarksWidgetContent,.hpLive.hpLivered .hpLiveColumnRight .bookmarksWidgetContent a,.hpLive.hpLivered .hpLiveColumnRight .widgetLinks a,.hpLive.hpLivered .hpLiveColumnRight .widgetLinks a a{color:#fff}.hpLive.hpLiveelectoral_red .hpLiveColumnMiddle .layerTextBottom,.hpLive.hpLiveelectoral_red .hpLiveColumnRight .bookmarksWidgetContent .layerTextBottom,.hpLive.hpLiveelectoral_red .hpLiveColumnRight .widgetLinks a .layerTextBottom,.hpLive.hpLivered .hpLiveColumnMiddle .layerTextBottom,.hpLive.hpLivered .hpLiveColumnRight .bookmarksWidgetContent .layerTextBottom,.hpLive.hpLivered .hpLiveColumnRight .widgetLinks a .layerTextBottom{border-left-color:#fff}.hpLive.hpLiveelectoral_red .hpLiveColumnRight .widgetLinks a,.hpLive.hpLivered .hpLiveColumnRight .widgetLinks a{border-right:none}.hpLive.hpLiveelectoral_red .bookmarksWidget .bookmarksWidgetContent .news .newsItemWithImage,.hpLive.hpLivered .bookmarksWidget .bookmarksWidgetContent .news .newsItemWithImage{border-bottom:1px dotted #fff}.hpLive.hpLiveelectoral_red{background:#e10000}.hpLive.hpLiveelectoral_red .bookmarksWidget .bookmarksWidgetNav .bookmark,.hpLive.hpLiveelectoral_red .hpLiveColumnLeft .widgetLinks a{background-color:#003663;color:#fff}.hpLive.hpLiveelectoral_red .hpLiveColumnLeft .layerTextBottom{border-left-color:#fff;border-left-style:solid;border-left-width:.25rem}.hpLive.hpLiveelectoral_red .hpLiveColumnRight .widgetLinks a{border-right:1px solid #fff}.hpLive.hpLivemilka{background:#7b69a8;color:#fff}.hpLive.hpLivemilka a{color:#fff}.hpLive.hpLivemilka .bookmarksWidget .bookmarksWidgetNav .bookmark{background-color:#c5bcd9;color:#000}.hpLive.hpLivemilka .bookmarksWidget .bookmarksWidgetNav .bookmark[data-active=true]{background-color:#fed766;color:#000}.hpLive.hpLivemilka .hpLiveColumnLeft .widgetLinks a{background-color:#1e1e1e;color:#fff}.hpLive.hpLivemilka .hpLiveColumnLeft .layerTextBottom{border-left-color:#fed766}.hpLive.hpLivemilka .itemBox.mainPlayer .layerTextBottom{background:#fed766}.hpLiveColumnLeft,.hpLiveColumnMiddle,.hpLiveColumnRight{float:left}.hpLiveColumnLeft{width:432.23px;width:13.95rem}.hpLiveColumnLeft .itemBox{position:relative;display:block;height:196.75px;height:6.35rem}.hpLiveColumnLeft .itemBox.mainPlayer .imageContainer{width:349.21px;width:11.2705rem;height:196.75px;height:6.35rem;display:block}.hpLiveColumnLeft .itemBox.mainPlayer .imageContainer img{height:100%;width:auto}.hpLiveColumnLeft .itemBox.mainPlayer .layerTextBottom{border:none;color:#000;width:83.66px;width:2.7rem;right:0;top:0;background:#ffd200;height:100%;padding-left:.25rem}.hpLiveColumnLeft .itemBox.mainPlayer .layerTextBottom .title{font-size:9.3px;font-size:.3rem;line-height:1.3;font-weight:500;display:block;margin-top:.225rem;padding-top:.2rem;position:relative;top:23.24px;top:.75rem}.hpLiveColumnLeft .itemBox.mainPlayer .layerTextBottom .info{position:absolute;top:7.75px;top:.25rem;color:#fff;background:#000;left:50%;transform:translate(-50%);padding:.125rem .25rem}.hpLiveColumnLeft .itemBox.mainPlayer .newsSpec{top:auto;right:-51.12px;right:-1.65rem;z-index:4;bottom:6.2px;bottom:.2rem}.hpLiveColumnLeft .itemBox.playerIsReady{width:340.82px;width:11rem}.hpLiveColumnLeft .itemBox.playerIsReady .layerTextBottom{right:-91.54px;right:-2.9545rem}.hpLiveColumnLeft .itemBox.playerIsReady .imageContainer{display:block}.hpLiveColumnLeft .newsSpec{position:absolute;top:10px;right:10px}.hpLiveColumnLeft .layerTextBottom{position:absolute;color:#fff;bottom:20px;font-weight:700;width:432.23px;width:13.95rem;font-size:21.69px;font-size:.7rem;padding-left:.45rem;box-sizing:border-box;border-left-color:#ffd200;border-left-style:solid;border-left-width:.25rem}.hpLiveColumnLeft .layerTextBottom .info{position:absolute;top:-15.49px;top:-.5rem;left:14.72px;left:.475rem;font-size:9.3px;font-size:.3rem;font-weight:400}.hpLiveColumnLeft .itemCollage{width:100%}.hpLiveColumnMiddle{width:213.79px;width:6.9rem;margin-left:.5rem;margin-right:.5rem;font-size:15.49px;font-size:.5rem;font-weight:500}.hpLiveColumnMiddle .itemBox{display:block}.hpLiveColumnMiddle .itemBox.showAuthorOrSourceImage .tWrp{height:37.18px;height:1.2rem;margin-bottom:.225rem;overflow:hidden;display:block}.hpLiveColumnMiddle .itemBox .layerTextBottom{margin-top:.225rem;margin-bottom:.1rem;height:74.36px;height:2.4rem;font-size:15.49px;font-size:.5rem;line-height:18.59px;line-height:.6rem;display:block;overflow:hidden}.hpLiveColumnMiddle .itemBox .info{display:block;font-size:12px;font-weight:400}.hpLivestandard .hpLiveColumnMiddle .itemBox.showAuthorOrSourceImage .tWrp{height:auto;max-height:93.73px;max-height:3.025rem;overflow:hidden;display:block}.hpLivestandard .hpLiveColumnMiddle .itemBox .layerTextBottom{height:auto}.hpLive .bookmarksWidget{width:100%}.hpLive .bookmarksWidget .bookmarksWidgetNav{overflow:hidden;box-sizing:border-box;color:#fff}.hpLive .bookmarksWidget .bookmarksWidgetNav.numberOfBookmarks_1 .bookmark{width:274.98px;width:8.875rem}.hpLive .bookmarksWidget .bookmarksWidgetNav.numberOfBookmarks_2 .bookmark{width:135.56px;width:4.375rem}.hpLive .bookmarksWidget .bookmarksWidgetNav.numberOfBookmarks_2 .bookmark:first-child{margin-right:.1rem}.hpLive .bookmarksWidget .bookmarksWidgetNav.numberOfBookmarks_3 .bookmark{width:89.08px;width:2.875rem;margin-right:.1rem}.hpLive .bookmarksWidget .bookmarksWidgetNav.numberOfBookmarks_3 .bookmark:last-child{margin:0}.hpLive .bookmarksWidget .bookmarksWidgetNav .bookmark{font-size:10.07px;font-size:.325rem;line-height:13.44px;line-height:.43375rem;overflow:hidden;display:inline;background-color:#eaeaea;cursor:pointer;font-weight:700;color:#000;text-align:center;height:27.11px;height:.875rem;padding-top:.2rem;box-sizing:border-box;float:left;margin:0 auto}.hpLive .bookmarksWidget .bookmarksWidgetNav .bookmark[data-active=true]{background-color:#ffd200}@keyframes fadeIn{from{opacity:0}to{opacity:1}}.hpLive .bookmarksWidget .bookmarksWidgetContent div[data-active=false],.hpLive .bookmarksWidget .bookmarksWidgetContent span[data-active=false]{display:none}.hpLive .bookmarksWidget .bookmarksWidgetContent div[data-active=true],.hpLive .bookmarksWidget .bookmarksWidgetContent span[data-active=true]{display:block;animation:fadeIn 1s}.hpLive .bookmarksWidget .bookmarksWidgetContent .liveblog,.hpLive .bookmarksWidget .bookmarksWidgetContent .twitter{background-color:#fff;margin-top:12px;position:absolute;height:161.12px;height:5.2rem;width:272.66px;width:8.8rem;overflow:hidden;z-index:3}.hpLive .bookmarksWidget .bookmarksWidgetContent .liveblog iframe,.hpLive .bookmarksWidget .bookmarksWidgetContent .twitter iframe{width:100%;height:161.12px;height:5.2rem}.hpLive .bookmarksWidget .news{width:274.98px;width:8.875rem;overflow:hidden;margin-top:.125rem}.hpLive .bookmarksWidget .news .newsItemWithImage{width:274.98px;width:8.875rem;position:relative;box-sizing:border-box;padding-bottom:.27rem;padding-top:.28rem;border-bottom:1px dotted #a9a9a9;float:left;display:block}.hpLive .bookmarksWidget .news .newsItemWithImage:last-child{border-bottom:none!important;padding-bottom:0}.hpLive .bookmarksWidget .news .newsItemWithImage .newsTitle{width:178.16px;width:5.75rem;font-size:11.62px;font-size:.375rem;font-weight:400;line-height:15.49px;line-height:.5rem;max-height:48.03px;max-height:1.55rem;display:block;overflow:hidden;padding-left:10px}.hpLive .bookmarksWidget .news .newsItemWithImage img{float:left}.hpLive .bookmarksWidget .news .newsItemWithImage>img{width:28%;height:100%;max-height:56.25vw}.hpLive .bookmarksWidget .news .newsItemWithImage .collageImage{width:28%}.hpLive .bookmarksWidget .news .newsItemWithImage.showAuthorOrSourceImage .title{max-height:32.53px;max-height:1.05rem;display:block;overflow:hidden}.hpLive .bookmarksWidget .news .newsItem{width:274.98px;width:8.875rem;position:relative;box-sizing:border-box;border-bottom:1px dotted #a9a9a9;display:block;padding-bottom:.075rem;padding-top:.075rem}.hpLive .bookmarksWidget .news .newsItem .newsTitle{font-size:11.62px;font-size:.375rem;font-weight:400;line-height:15.49px;line-height:.5rem;display:block;overflow:hidden;max-height:33.31px;max-height:1.075rem}.hpLive .bookmarksWidget .news .newsItem.showAuthorOrSourceImage .title{max-height:16.27px;max-height:.525rem;display:block;overflow:hidden}.hpLive .bookmarksWidget .news .newsItem:last-child{border-bottom:none!important;padding-bottom:0}.hpLive .bookmarksWidget .news .source{height:15.49px;height:.5rem}.hpLive .bookmarksWidget .news .source img{height:100%;width:auto}.hpLiveColumnLeft .mundialWidget{width:432.23px;width:13.95rem;margin-top:1.05rem;margin-bottom:1.05rem;min-height:118.51px;min-height:3.825rem;font-size:0;text-align:center}.hpLiveColumnLeft .mundialWidget a{display:block}.hpLiveColumnLeft .mundialWidget .scoreboard{width:184.36px;width:5.95rem;display:inline-block;font-weight:400;margin-top:.25rem;padding-right:.5rem;margin-bottom:.25rem;padding-left:.5rem}.hpLiveColumnLeft .mundialWidget .scoreboard.scoreboard--disabled{display:none}.hpLiveColumnLeft .mundialWidget .scoreboard .scoreboard__title{font-size:11.62px;font-size:.375rem;margin-bottom:.25rem}.hpLiveColumnLeft .mundialWidget .scoreboard .score{display:inline-block;width:40%;font-size:30.98px;font-size:1rem;letter-spacing:-3px;margin-top:.3rem}.hpLiveColumnLeft .mundialWidget .scoreboard .match{width:30%;display:inline-block;vertical-align:top}.hpLiveColumnLeft .mundialWidget .scoreboard .match span{display:block;font-size:11.62px;font-size:.375rem}.hpLiveColumnLeft .mundialWidget .scoreboard .match img{display:block}.hpLiveColumnLeft .mundialWidget>div.scoreboard:not(:first-child){border-left:1px solid rgba(17,17,17,.25)}.hpLiveColumnLeft .wdgImage{width:432.23px;width:13.95rem;margin-top:1.05rem;margin-bottom:1.05rem;height:118.51px;height:3.825rem;overflow:hidden}.hpLiveColumnLeft .widgetLinks{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;margin-right:-.12rem;overflow:hidden}.hpLiveColumnLeft .widgetLinks a{display:block;background-color:#eaeaea;min-width:.78px;min-width:.025rem;font-weight:700;line-height:18px;font-size:10.07px;font-size:.325rem;text-align:center;margin-right:.12rem;margin-bottom:.12rem;white-space:nowrap;-ms-flex-positive:1;flex-grow:1;padding:.225rem .15rem}.hpLiveColumnRight{width:274.98px;width:8.875rem}.hpLiveColumnRight .widgetLinks{font-size:9.3px;font-size:.3rem;padding-top:.325rem;float:right;font-weight:400;position:absolute;bottom:15px;right:15px}.hpLiveColumnRight .widgetLinks a{border-right:1px solid #ffd200;padding-left:.125rem;padding-right:.125rem}.hpLiveColumnRight .widgetLinks a:last-child{border:none;padding-bottom:0}.hpLiveextended .bookmarksWidget .bookmarksWidgetContent .liveblog,.hpLiveextended .bookmarksWidget .bookmarksWidgetContent .twitter{height:376.46px;height:12.15rem}.hpLiveextended .bookmarksWidget .bookmarksWidgetContent .liveblog iframe,.hpLiveextended .bookmarksWidget .bookmarksWidgetContent .twitter iframe{height:376.46px!important;height:12.15rem!important}.hpLiveelectoral{background:#fff;height:501.94px;height:16.2rem}.hpLiveelectoral .hpLiveColumnLeft{width:677px;width:21.85rem}.hpLiveelectoral .hpLiveColumnLeft .itemBox{width:214.56px;width:6.925rem;height:191.33px;height:6.175rem;margin-right:.35rem;float:left;overflow:hidden}.hpLiveelectoral .hpLiveColumnRight .layerTextBottom{display:none}.hpLiveelectoral .hpLiveColumnRight .itemBox_hp_1{margin-bottom:.375rem}.hpLiveelectoral .bottomNews{overflow:hidden;clear:both}.hpLiveelectoral .layerTextBottom{position:static;border:none;font-size:15.49px;font-size:.5rem;line-height:17.82px;line-height:.575rem;font-weight:500;width:auto;padding:11px 0 0;display:block;border-left-width:0!important;color:#FFF}.dailyNeeds,.sideBarItem{padding-bottom:.25rem}.hpLiveelectoral .layerTextBottom .title{max-height:55px;max-height:1.775rem}.hpLiveelectoral .layerTextBottom img{width:auto}.hpLiveelectoral .showAuthorOrSourceImage .layerTextBottom .title{max-height:37.18px;max-height:1.2rem}.hpLiveelectoral .showAuthorOrSourceImage .layerTextBottom .info{position:static;display:block}.newsBox,.newsBox .localNews.changeCity{position:relative}.hpLiveelectoral .bookmarksWidget .bookmarksWidgetContent .liveblog,.hpLiveelectoral .bookmarksWidget .bookmarksWidgetContent .twitter{height:464.76px;height:15rem}.hpLiveelectoral .bookmarksWidget .bookmarksWidgetContent .liveblog iframe,.hpLiveelectoral .bookmarksWidget .bookmarksWidgetContent .twitter iframe{height:464.76px!important;height:15rem!important}.hpLiveelectoral .bookmarksWidget .bookmarksWidgetNav .bookmark[data-active=true]{background-color:#000;color:#fff}.hpLiveelectoral .hpliveTop{height:315.26px;height:10.175rem;width:307.52px;width:9.925rem}.hpLiveelectoral .hpliveTop .layerTextBottom{display:none}.hpLiveelectoral .mainPlayer+.bookmarksWidget .bookmarksWidgetNav{margin-top:.3rem}.hpLiveelectoral .mainPlayer+.bookmarksWidget .bookmarksWidgetContent .liveblog,.hpLiveelectoral .mainPlayer+.bookmarksWidget .bookmarksWidgetContent .twitter{height:296.67px;height:9.575rem}.hpLiveelectoral .mainPlayer+.bookmarksWidget .bookmarksWidgetContent .liveblog iframe,.hpLiveelectoral .mainPlayer+.bookmarksWidget .bookmarksWidgetContent .twitter iframe{height:296.67px!important;height:9.575rem!important}.sideBar .sideBarItem:first-of-type{padding-top:.425rem}.sideBarItem,.sideBarItem+.dailyNeeds{padding-top:.25rem}.sideBarItem .newsAdd{text-transform:uppercase;color:#787878;font-size:7.75px;font-size:.25rem;font-weight:400;padding-left:.1rem}.newsBox,.newsBox a{color:#1e1e1e}.sideBarItem .imageContainer svg{left:55.77px;left:1.8rem;top:30.98px;top:1rem;width:12.39px;width:.4rem;height:12.39px;height:.4rem;margin-left:0}.sideBarItem svg{vertical-align:text-top;margin-left:.075rem;width:12.39px;width:.4rem;height:12.39px;height:.4rem}.newsBox{clear:both}.newsBox .itemMedia{float:left;width:73.59px;width:2.375rem;height:45.7px;height:1.475rem;margin-top:.025rem;margin-right:.25rem;margin-bottom:.225rem}.newsBox .itemMedia img{display:block;width:73.59px;width:2.375rem;height:45.7px;height:1.475rem}.newsBox .boxContent .bigItem svg:after,.newsBox .localNews.changeCity .selectedCity{display:none}.newsBox .boxContent .bigItem:hover{background:#fff;background:linear-gradient(to right,#fff 0,#efefef 23%,#fff 100%)}.newsBox .boxContent .bigItem a{padding:.2rem 0 0;min-height:53.45px;min-height:1.725rem}.newsBox .boxContent .bigItem a .title{font-size:12.39px;font-size:.4rem;line-height:16.27px;line-height:.525rem;font-weight:500}.newsBox .boxContent .bigItem svg{padding-right:0}.newsBox .boxContent li{overflow:hidden;position:relative;border-bottom:1px dotted #dcdcdc}.newsBox .boxContent li a{display:block;font-size:11.62px;font-size:.375rem;line-height:16.27px;line-height:.525rem;letter-spacing:.06px;letter-spacing:.001875rem;font-weight:400;padding-top:.075rem;padding-bottom:.075rem;padding-left:.3rem}.newsBox .boxContent li a:hover{background:#fff;background:linear-gradient(to right,#fff 0,#efefef 23%,#fff 100%)}.newsBox .boxContent li a:visited{color:#989898}.newsBox .boxContent li a .authorImg{display:block;float:left;width:30.98px;width:1rem;height:30.98px;height:1rem;margin-left:-1.25rem}.newsBox .boxContent li a .authorImg img{border-radius:1rem;width:30.98px;width:1rem}.newsBox .boxContent li a .sourceImg img{border-radius:0}.newsBox .boxContent li a.authorImgParent{padding-left:1.25rem;padding-top:.125rem;padding-bottom:.125rem}.newsBox .boxContent li a.authorImgParent:before{content:""}.newsBox .boxContent li a.authorImgParent .specialTitle{display:block;max-height:15.49px;max-height:.5rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;line-height:15.49px;line-height:.5rem}.newsBox .boxContent li a .authorName{color:#969696;font-weight:400}.newsBox .boxContent li a .authorName::before{content:"\2014";width:13.94px;width:.45rem;display:inline-block}.newsBox .boxContent li a::before{content:"\2024";position:absolute;left:0;top:0}.newsBox .boxContent .bigItem a::before{content:""}.newsBox .boxContent .bigItem a:hover{background:0 0}.newsBox .boxContent .bigItemNoImage{padding-bottom:.25rem}.newsBox .boxContent .bigItemNoImage a{min-height:auto}.newsBox .boxPopularContent .bigItem{border-top:1px dotted #dcdcdc;border-bottom:0}.newsBox .boxPopularContent .bigItem a .title{height:47.25px;height:1.525rem;overflow:hidden;font-weight:400;font-size:11.62px;font-size:.375rem}.newsBox .boxPopularContent li.item-1{border-top:0}.newsBox .moreNews{margin-top:.125rem;overflow:hidden}.newsBox .moreNews a:hover{background:#fff;background:linear-gradient(to right,#fff 0,#efefef 23%,#fff 100%)}.newsBox .moreNews>li{line-height:10.07px;line-height:.325rem;padding-top:.125rem;width:255.62px;width:8.25rem}.newsBox .moreNews li{float:left}.newsBox .moreNews li a{font-size:9.3px;font-size:.3rem;font-weight:400}.newsBox .moreNews li span{display:block;float:left;margin-right:5px;width:30.98px;width:1rem;height:11.62px;height:.375rem;font-size:9.3px;font-size:.3rem;font-weight:500;text-transform:capitalize}.newsBox .boxRatings .name,.newsBox .boxRatings_v2 .name{text-transform:uppercase}.newsBox .moreNews li ul li{float:left;padding-left:.125rem;padding-right:.125rem;border-right:solid #ffd200;border-right-width:.025rem;font-size:8.52px;font-size:.275rem}.newsBox .boxRatings,.newsBox .boxRatings_v2{padding-top:.125rem;padding-bottom:.125rem;font-size:9.3px;font-weight:400;overflow:hidden}.newsBox .moreNews li ul li.item-last{border:none}.newsBox .moreNews li ul li a{white-space:nowrap}.newsBox .boxRatings{padding-right:.05rem;font-size:.3rem;border-top:1px dotted #dcdcdc;border-bottom:1px dotted #dcdcdc}.newsBox .boxRatings tr{line-height:13.94px;line-height:.45rem}.newsBox .boxRatings th{padding-right:8px;text-align:left}.newsBox .boxRatings td{text-align:right}.newsBox .boxRatings table.item-1{float:left}.newsBox .boxRatings table.item-2{float:right}.newsBox .boxRatings .change{width:39.51px;width:1.275rem;padding-left:.25rem}.newsBox .boxRatings .change span{width:0;height:0;margin-top:.2rem;margin-right:.05rem;float:left;overflow:hidden;text-indent:-9999px}.newsBox .boxRatings .down{color:#c00}.newsBox .boxRatings .down span{border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid #c00;border-left-width:.125rem;border-right-width:.125rem;border-top-width:.125rem}.newsBox .boxRatings .up span,.newsBox .boxRatings_v2 .down span{border-left:5px solid transparent;border-right:5px solid transparent}.newsBox .boxRatings .up{color:#390}.newsBox .boxRatings .up span{border-bottom:5px solid #390;border-left-width:.125rem;border-right-width:.125rem;border-bottom-width:.125rem}.newsBox .boxRatings .empty{min-width:34.86px;min-width:1.125rem}.newsBox .boxRatings .item-1 .change,.newsBox .boxRatings .item-2 .change{white-space:nowrap}.newsBox .boxRatings .item-1 .name{width:30.98px;width:1rem}.newsBox .boxRatings .item-2 .name{width:38.73px;width:1.25rem}.newsBox .boxRatings_v2{padding-right:.05rem;font-size:.3rem}.newsBox .boxRatings_v2 .names{border-bottom:1px dotted #dcdcdc;color:#1e1e1e;overflow:hidden}.newsBox .boxRatings_v2 .names .namesFirst{float:left}.newsBox .boxRatings_v2 .names .namesFirst .buyTitle{font-weight:500;padding-left:.125rem;padding-right:.125rem}.newsBox .boxRatings_v2 .names .namesFirst .sellTitle{font-weight:500}.newsBox .boxRatings_v2 .names .namesSecond{float:right;width:53%}.newsBox .boxRatings_v2 .names .namesSecond .change{font-weight:500;padding-left:.125rem;padding-right:.5rem}.newsBox .boxRatings_v2 .names .namesSecond .sellTitle{font-weight:500}.newsBox .boxRatings_v2 tr{line-height:13.94px;line-height:.45rem}.newsBox .boxRatings_v2 th{text-align:left}.newsBox .boxRatings_v2 td{text-align:right;padding-left:.25rem;padding-right:.125rem}.newsBox .boxRatings_v2 table.item-1{float:left;text-align:left;width:42%}.newsBox .boxRatings_v2 table.item-2{float:right;text-align:right;width:53%}.newsBox .boxRatings_v2 .name a{color:#1e1e1e}.newsBox .boxRatings_v2 .change{width:39.51px;width:1.275rem;padding-left:.25rem}.newsBox .boxRatings_v2 .change span{width:0;height:0;margin-top:.2rem;margin-left:.05rem;float:right;overflow:hidden;text-indent:-9999px}.newsBox .boxRatings_v2 .down{color:#c00}.newsBox .boxRatings_v2 .down span{border-top:5px solid #c00;border-left-width:.125rem;border-right-width:.125rem;border-top-width:.125rem}.newsBox .boxRatings_v2 .up{color:#390}.newsBox .boxRatings_v2 .up span{border-left:5px solid transparent;border-right:5px solid transparent;border-bottom:5px solid #390;border-left-width:.125rem;border-right-width:.125rem;border-bottom-width:.125rem}.newsBox .boxRatings_v2 .empty{min-width:34.86px;min-width:1.125rem}.newsBox .boxRatings_v2 .item-1 .name{width:30.98px;width:1rem}.newsBox .boxRatings_v2 .item-2 .name{padding-right:0;width:42.6px;width:1.375rem}.newsBox .boxRatings_v2 .link{border-top:1px dotted #dcdcdc;width:100%;display:block;overflow:hidden;padding-top:.5}.newsBox .boxRatings_v2 .link td{padding-left:0}.newsBox .boxRatings_v2 .link td span{font-weight:500}.newsBox .boxRatings_v2 .link td a{padding-left:.25rem}.newsBox .boxRatings_v2 .link td a:hover{background:linear-gradient(to right,#fff 0,#efefef 23%,#fff 100%)}.subsectionTitle{margin-top:.425rem}.newsBox[data-section=popular] .boxHeader h1:before{background:#0bf0a4}[data-scroll=biznes]{position:relative}[data-scroll=biznes] .boxHeader a:after{content:'wspierany przez';font-weight:400;font-size:9.3px;font-size:.3rem;color:#6bc3e4;margin-left:2.6rem;text-transform:lowercase;letter-spacing:0;background:url(https://ocdn.eu/onetmobilemainpage/mainpage_desktop/icons/businessRightLogo.svg) right center no-repeat;background-size:4rem;width:196.44px;width:6.34rem;position:absolute;top:0;right:0}[data-scroll=biznes] .businessRightLogo{z-index:3;position:absolute;top:0;right:0}.arrowDown:after,.imageContainer,.imageContainer span{position:relative}[data-scroll=biznes] .businessRightLogo svg{width:112.32px;width:3.625rem;height:39.89px;height:1.2875rem}.popularinbusinessColumn .boxHeader{display:none}.popularinbusinessColumn .boxHeader h1:before{background:#116c92;content:"Bu";color:#fff;padding-left:.352rem;z-index:1;box-sizing:border-box;overflow:hidden}.popularinbusinessColumn .boxHeader a{color:#136c92}.arrowDown{font-size:9.3px;font-size:.3rem;font-weight:400;text-transform:lowercase;cursor:pointer;padding-right:.5rem}.arrowDown:after{content:"";top:8.52px;top:.275rem;border-left-width:.075rem;border-right-width:.075rem;border-top-width:.125rem;border-left-color:transparent;border-right-color:transparent;border-top-color:#1e1e1e;border-left-style:solid;border-right-style:solid;border-top-style:solid;left:6.2px;left:.2rem}.localNews .showList{text-transform:lowercase;cursor:pointer}.localNews .clCloseButton{top:7.75px;top:.25rem}.localNews .boxHeader .arrowDown{position:relative;top:-1.55px;top:-.05rem;font-weight:400}.localNews .boxHeader .arrowDown:before{content:"zmień"}.imageContainer{display:block}.imageContainer .itemCollage{display:block;height:100%}.imageContainer .itemCollage img{display:block}.imageContainer .clear{display:block;clear:both}.imageContainer svg{position:absolute;right:7.75px;right:.25rem;bottom:7.75px;bottom:.25rem;width:26.85px;width:.67125rem;height:25.82px;height:.6455rem;display:block}.onetUpToDate{padding-bottom:0}.onetUpToDate .slider{margin-bottom:.25rem;position:relative;width:286.6px;width:9.25rem;height:161.89px;height:5.225rem;background:#dcdcdc;overflow:hidden}.onetUpToDate .slider .pulsembed_embed a{display:none}.onetUpToDate .slider a{display:block;width:286.6px;width:9.25rem;height:161.89px;height:5.225rem}.onetUpToDate .slider .itemCollage,.onetUpToDate .slider img{overflow:hidden;width:286.6px;width:9.25rem;height:161.12px;height:5.2rem}.onetUpToDate .slider .boxPhoto,.onetUpToDate .slider .itemCollage img,.onetUpToDate .slider .label,.onetUpToDate .slider .title{position:absolute}.onetUpToDate .slider svg{width:38.73px;width:1.25rem;height:38.73px;height:1.25rem;left:50%;top:50%;margin-left:-.625rem;margin-top:-.625rem}.onetUpToDate .slider .label{bottom:26.34px;bottom:.85rem;background:#001D3D;color:#fff;text-transform:uppercase;left:9.3px;left:.3rem;font-size:9.3px;font-size:.3rem;z-index:3;padding:.05rem .1rem}.onetUpToDate .slider .title{font-size:12.39px;font-size:.4rem;color:#fff;bottom:0;font-weight:600;background:#000;background:linear-gradient(to bottom,rgba(0,0,0,0) 0,rgba(0,0,0,.85) 90%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#a6000000', GradientType=0)}.onetUpToDate .slider .title span{box-sizing:border-box;display:block;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;width:286.6px;width:9.25rem;padding:.45rem 1.125rem .2rem .3rem}.onetUpToDate .slider .titleHideAndShow{animation:slideHideShow .5s cubic-bezier(.3,.1,0,1.01)}.onetUpToDate .slider .imageSlideShow{left:286.6px;left:9.25rem;animation:slideShow .5s cubic-bezier(.3,.1,0,1.01)}.onetUpToDate .slider .sgPlayerGls{width:286.6px;width:9.25rem;height:161.12px;height:5.2rem}@keyframes slideHideShow{0%,1%,100%{opacity:1}50%{opacity:0}}@keyframes slideShow{0%,1%{left:286.6px;left:9.25rem}100%{left:0}}.nitro404{position:relative;height:309.84px;height:10rem;padding-top:2.5rem;box-sizing:border-box;text-align:center}.nitro404 h2{text-align:center}.nitro404 p{font-size:13.17px;font-size:.425rem}.boxHeader h1,.subsectionTitle{color:#1e1e1e;font-size:11.62px;font-size:.375rem;line-height:24.01px;line-height:.775rem;letter-spacing:.78px;letter-spacing:.025rem;font-weight:700;text-transform:uppercase;position:relative;z-index:2;padding-bottom:.2rem;border-bottom:1px solid #dcdcdc;white-space:nowrap}.boxHeader h1 a,.boxHeader h1 span,.subsectionTitle a,.subsectionTitle span{font-size:11.62px;font-size:.375rem;line-height:24.01px;line-height:.775rem;color:#1e1e1e;padding-left:.35rem}.boxHeader h1 a,.subsectionTitle a{padding-top:.15rem;padding-bottom:.28rem}.boxHeader h1:before,.subsectionTitle:before{content:'';display:block;position:absolute;left:0;z-index:-1;width:23.24px;width:.75rem;height:23.24px;height:.75rem;background:#ffd200;border-radius:100%}.pictorialFeed.sideBarItem:last-of-type{height:1px;overflow:hidden;visibility:hidden}.pictorialFeed.sideBarItem.alignColumnReady{height:auto;visibility:visible}.mosaic{position:relative;clear:both;padding-top:.25rem}.mosaic .secLinkWrp{position:absolute;right:0;top:7.13px;top:.23rem;padding-left:.25rem;z-index:4}.mosaic .itemBox,.mosaic .sectionLine,.mosaic .sectionLineMaxBig{position:relative;overflow:hidden}.mosaic .secLinkWrp span{float:left;display:block;font-size:10.07px;font-size:.325rem;line-height:15.49px;line-height:.5rem;font-weight:400}.mosaic .secLinkWrp span a{color:#6a6a6a;display:inline-block;line-height:16.11px;line-height:.52rem;padding:.125rem .025rem .25rem}.mosaic .secLinkWrp span a:hover{border-bottom-width:.125rem;border-bottom-color:#ffd200;border-bottom-style:solid}.dailyNeeds ul.dn-menu li a,.dailyNeeds ul.dn-menu li a:hover{border-bottom-color:#dcdcdc}.mosaic .secLinkWrp span:before{color:#dcdcdc;content:"|";margin-left:.175rem;margin-right:.175rem}.dailyNeeds h1.locationName:after,.mosaic .secLinkWrp span:first-child:before{content:""}.mosaic .items{clear:both;overflow:hidden}.mosaic .sectionLine{clear:both;padding-top:.25rem;margin-bottom:.25rem;margin-right:-1px;z-index:1}.mosaic .sectionLineEventBoxMax{height:421.38px;height:13.6rem}.mosaic .itemBox{display:block;float:left}.mosaic .itemBox .pipVideo{display:block;position:absolute;top:0}.mosaic .itemBox .newsSpec{position:absolute;right:7.75px;right:.25rem;top:7.75px;top:.25rem}.mosaic .itemBox .layerTextBottom{display:block;color:#1e1e1e;position:relative;line-height:10px;margin-top:.225rem}.mosaic .itemBox .layerTextBottom .info{display:block;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mosaic .itemBox .layerTextBottom .title{display:inline;letter-spacing:-.31px;letter-spacing:-.01rem}.mosaic .itemBox .layerTextBottom .lead{display:none}.mosaic .itemBox .itemCollage{float:left;height:100%}.mosaic .itemBox:first-child{margin-left:0}.mosaic .itemBox:hover .imageContainer img{opacity:.9}.mosaic .itemBox_3_1{width:213.79px;width:6.9rem;margin-left:.525rem}.mosaic .itemBox_3_1 .itemMedia,.mosaic .itemBox_3_1 .itemMedia .cl-1.itemCollage,.mosaic .itemBox_3_1 .itemMedia .cl-1.itemCollage img,.mosaic .itemBox_3_1 .pipVideo,.mosaic .itemBox_3_1 .pipVideo .sgPlayerGls,.mosaic .itemBox_3_1 .pipVideo .smallVideo{width:213.79px;width:6.9rem}.mosaic .itemBox_3_1 .itemMedia .cl-2.itemCollage,.mosaic .itemBox_3_1 .itemMedia .cl-2.itemCollage img{width:106.9px;width:3.45rem}.mosaic .itemBox_3_1 .itemMedia .cl-2.lastCorrect{width:100.7px;width:3.25rem}.mosaic .itemBox_3_1 .itemMedia .cl-3.itemCollage,.mosaic .itemBox_3_1 .itemMedia .cl-3.itemCollage img{width:71.26px;width:2.3000000000000003rem}.mosaic .itemBox_3_1 .itemMedia .cl-3.lastCorrect{width:69.71px;width:2.25rem}.mosaic .itemBox_3_1 .itemMedia .cl-4.itemCollage,.mosaic .itemBox_3_1 .itemMedia .cl-4.itemCollage img{width:53.45px;width:1.725rem}.mosaic .itemBox_3_1 .itemMedia .cl-4.lastCorrect{width:46.48px;width:1.5rem}.mosaic .itemBox_3_1 .itemMedia .cl-5.itemCollage,.mosaic .itemBox_3_1 .itemMedia .cl-5.itemCollage img{width:42.76px;width:1.3800000000000001rem}.mosaic .itemBox_3_1 .itemMedia .cl-5.lastCorrect{width:38.73px;width:1.25rem}.mosaic .itemBox_3_1 .sourceImg{margin-top:.25rem;height:23.24px;height:.75rem}.mosaic .itemBox_3_1 .sourceImg img{max-width:170.41px;max-width:5.5rem;max-height:23.24px;max-height:.75rem}.mosaic .itemBox_3_1 .newsSpec.newsSpec--ad-info{background:#ccc}.mosaic .itemBox_3_2{width:443.85px;width:14.325rem;margin-left:.525rem}.mosaic .itemBox_3_2 .itemMedia,.mosaic .itemBox_3_2 .itemMedia .cl-1.itemCollage,.mosaic .itemBox_3_2 .itemMedia .cl-1.itemCollage img{width:443.85px;width:14.325rem}.mosaic .itemBox_3_2 .itemMedia .cl-2.itemCollage,.mosaic .itemBox_3_2 .itemMedia .cl-2.itemCollage img{width:221.92px;width:7.1625rem}.mosaic .itemBox_3_2 .itemMedia .cl-2.lastCorrect{width:216.89px;width:7rem}.mosaic .itemBox_3_2 .itemMedia .cl-3.itemCollage,.mosaic .itemBox_3_2 .itemMedia .cl-3.itemCollage img{width:147.95px;width:4.7749999999999995rem}.mosaic .itemBox_3_2 .itemMedia .cl-3.lastCorrect{width:147.17px;width:4.75rem}.mosaic .itemBox_3_2 .itemMedia .cl-4.itemCollage,.mosaic .itemBox_3_2 .itemMedia .cl-4.itemCollage img{width:110.96px;width:3.58125rem}.mosaic .itemBox_3_2 .itemMedia .cl-4.lastCorrect{width:108.44px;width:3.5rem}.mosaic .itemBox_3_2 .itemMedia .cl-5.itemCollage,.mosaic .itemBox_3_2 .itemMedia .cl-5.itemCollage img{width:88.77px;width:2.8649999999999998rem}.mosaic .itemBox_3_2 .itemMedia .cl-5.lastCorrect{width:85.21px;width:2.75rem}.mosaic #onet-ad-flat-player-branding-sg-3{width:443.85px;width:14.325rem;margin-left:0}.mosaic .itemBox_3_3,.mosaic .itemBox_3_3 .itemMedia,.mosaic .itemBox_3_3 .itemMedia .cl-1.itemCollage,.mosaic .itemBox_3_3 .itemMedia .cl-1.itemCollage img{width:673.9px;width:21.75rem}.mosaic .itemBox_3_3 .itemMedia .cl-2.itemCollage,.mosaic .itemBox_3_3 .itemMedia .cl-2.itemCollage img{width:336.95px;width:10.875rem}.mosaic .itemBox_3_3 .itemMedia .cl-2.lastCorrect{width:333.08px;width:10.75rem}.mosaic .itemBox_3_3 .itemMedia .cl-3.itemCollage,.mosaic .itemBox_3_3 .itemMedia .cl-3.itemCollage img,.mosaic .itemBox_3_3 .itemMedia .cl-3.lastCorrect{width:224.63px;width:7.25rem}.mosaic .itemBox_3_3 .itemMedia .cl-4.itemCollage,.mosaic .itemBox_3_3 .itemMedia .cl-4.itemCollage img{width:168.48px;width:5.4375rem}.mosaic .itemBox_3_3 .itemMedia .cl-4.lastCorrect{width:162.67px;width:5.25rem}.mosaic .itemBox_3_3 .itemMedia .cl-5.itemCollage,.mosaic .itemBox_3_3 .itemMedia .cl-5.itemCollage img{width:134.78px;width:4.35rem}.mosaic .itemBox_3_3 .itemMedia .cl-5.lastCorrect{width:131.68px;width:4.25rem}.mosaic .itemBox_eb_4_1{width:224.63px;width:7.25rem;margin-left:.5rem}.mosaic .itemBox_eb_4_1 .itemMedia,.mosaic .itemBox_eb_4_1 .itemMedia .cl-1.itemCollage,.mosaic .itemBox_eb_4_1 .itemMedia .cl-1.itemCollage img{width:224.63px;width:7.25rem}.mosaic .itemBox_eb_4_1 .itemMedia .cl-2.itemCollage,.mosaic .itemBox_eb_4_1 .itemMedia .cl-2.itemCollage img{width:112.32px;width:3.625rem}.mosaic .itemBox_eb_4_1 .itemMedia .cl-2.lastCorrect{width:108.44px;width:3.5rem}.mosaic .itemBox_eb_4_1 .itemMedia .cl-3.itemCollage,.mosaic .itemBox_eb_4_1 .itemMedia .cl-3.itemCollage img{width:74.88px;width:2.4166666666666665rem}.mosaic .itemBox_eb_4_1 .itemMedia .cl-3.lastCorrect{width:69.71px;width:2.25rem}.mosaic .itemBox_eb_4_1 .itemMedia .cl-4.itemCollage,.mosaic .itemBox_eb_4_1 .itemMedia .cl-4.itemCollage img{width:56.16px;width:1.8125rem}.mosaic .itemBox_eb_4_1 .itemMedia .cl-4.lastCorrect{width:54.22px;width:1.75rem}.mosaic .itemBox_eb_4_1 .itemMedia .cl-5.itemCollage,.mosaic .itemBox_eb_4_1 .itemMedia .cl-5.itemCollage img{width:44.93px;width:1.45rem}.mosaic .itemBox_eb_4_1 .itemMedia .cl-5.lastCorrect{width:38.73px;width:1.25rem}.mosaic .itemBox_eb_4_1 .sourceImg{margin-top:.25rem;height:23.24px;height:.75rem}.mosaic .itemBox_eb_4_1 .sourceImg img{max-width:178.16px;max-width:5.75rem;max-height:23.24px;max-height:.75rem}.mosaic .itemBox_eb_4_2,.mosaic .itemBox_eb_4_2 .itemMedia,.mosaic .itemBox_eb_4_2 .itemMedia .cl-1.itemCollage,.mosaic .itemBox_eb_4_2 .itemMedia .cl-1.itemCollage img,.mosaic .itemBox_eb_4_2 .itemMedia .sgPlayerGls{width:464.76px;width:15rem}.mosaic .itemBox_eb_4_2 .itemMedia .cl-2.itemCollage,.mosaic .itemBox_eb_4_2 .itemMedia .cl-2.itemCollage img,.mosaic .itemBox_eb_4_2 .itemMedia .cl-2.lastCorrect{width:232.38px;width:7.5rem}.mosaic .itemBox_eb_4_2 .itemMedia .cl-3.itemCollage,.mosaic .itemBox_eb_4_2 .itemMedia .cl-3.itemCollage img,.mosaic .itemBox_eb_4_2 .itemMedia .cl-3.lastCorrect{width:154.92px;width:5rem}.mosaic .itemBox_eb_4_2 .itemMedia .cl-4.itemCollage,.mosaic .itemBox_eb_4_2 .itemMedia .cl-4.itemCollage img,.mosaic .itemBox_eb_4_2 .itemMedia .cl-4.lastCorrect{width:116.19px;width:3.75rem}.mosaic .itemBox_eb_4_2 .itemMedia .cl-5.itemCollage,.mosaic .itemBox_eb_4_2 .itemMedia .cl-5.itemCollage img,.mosaic .itemBox_eb_4_2 .itemMedia .cl-5.lastCorrect{width:92.95px;width:3rem}.mosaic .itemBox_eb_4_2 .sourceImg{margin-top:.25rem;height:23.24px;height:.75rem}.mosaic .itemBox_eb_4_2 .sourceImg img{max-width:371.81px;max-width:12rem;max-height:23.24px;max-height:.75rem}.mosaic .itemBox_eb_4_1:first-child,.mosaic .itemBox_eb_4_2:first-child{margin-left:.5rem}.mosaic .itemBox_eb_1_1{width:976px;width:31.5rem}.mosaic .itemBox_eb_1_1 .itemMedia{position:absolute;right:0;top:0;width:515.11px;width:16.625rem}.mosaic .itemBox_eb_1_1 .itemMedia .cl-1.itemCollage,.mosaic .itemBox_eb_1_1 .itemMedia .cl-1.itemCollage img{width:515.11px;width:16.625rem}.mosaic .itemBox_eb_1_1 .itemMedia .cl-2.itemCollage,.mosaic .itemBox_eb_1_1 .itemMedia .cl-2.itemCollage img{width:257.56px;width:8.3125rem}.mosaic .itemBox_eb_1_1 .itemMedia .cl-2.lastCorrect{width:255.62px;width:8.25rem}.mosaic .itemBox_eb_1_1 .itemMedia .cl-3.itemCollage,.mosaic .itemBox_eb_1_1 .itemMedia .cl-3.itemCollage img{width:171.7px;width:5.541666666666667rem}.mosaic .itemBox_eb_1_1 .itemMedia .cl-3.lastCorrect{width:170.41px;width:5.5rem}.mosaic .itemBox_eb_1_1 .itemMedia .cl-4.itemCollage,.mosaic .itemBox_eb_1_1 .itemMedia .cl-4.itemCollage img{width:128.78px;width:4.15625rem}.mosaic .itemBox_eb_1_1 .itemMedia .cl-4.lastCorrect{width:123.94px;width:4rem}.mosaic .itemBox_eb_1_1 .itemMedia .cl-5.itemCollage,.mosaic .itemBox_eb_1_1 .itemMedia .cl-5.itemCollage img{width:103.02px;width:3.325rem}.mosaic .itemBox_eb_1_1 .itemMedia .cl-5.lastCorrect{width:100.7px;width:3.25rem}.mosaic .itemBox_lr_4_1{width:232.38px;width:7.5rem;margin-left:.5rem}.mosaic .itemBox_lr_4_1 .itemMedia,.mosaic .itemBox_lr_4_1 .itemMedia .cl-1.itemCollage,.mosaic .itemBox_lr_4_1 .itemMedia .cl-1.itemCollage img{width:232.38px;width:7.5rem}.mosaic .itemBox_lr_4_1 .sourceImg{margin-top:.25rem;height:23.24px;height:.75rem}.mosaic .itemBox_lr_4_1 .sourceImg img{max-width:185.9px;max-width:6rem;max-height:23.24px;max-height:.75rem}.mosaic .s1_155 .itemMedia,.mosaic .s1_155 .itemMedia .itemCollage,.mosaic .s1_155 .itemMedia .itemCollage img,.mosaic .s1_155 .pipVideo,.mosaic .s1_155 .pipVideo .sgPlayerGls,.mosaic .s1_155 .pipVideo .smallVideo{height:120.06px;height:3.875rem}.mosaic .s1_165 .itemMedia,.mosaic .s1_165 .itemMedia .itemCollage,.mosaic .s1_165 .itemMedia .itemCollage img{height:127.81px;height:4.125rem}.mosaic .s1_168 .itemMedia,.mosaic .s1_168 .itemMedia .itemCollage,.mosaic .s1_168 .itemMedia .itemCollage img{height:130.13px;height:4.2rem}.mosaic .s1_260 .itemMedia,.mosaic .s1_260 .itemMedia .itemCollage,.mosaic .s1_260 .itemMedia .itemCollage img,.mosaic .s1_260 .itemMedia .sgPlayerGls{height:201.4px;height:6.5rem}.mosaic .s1_365 .itemMedia,.mosaic .s1_365 .itemMedia .itemCollage,.mosaic .s1_365 .itemMedia .itemCollage img,.mosaic .s1_365 .itemMedia .sgPlayerGls{height:282.73px;height:9.125rem}.mosaic .s1_490 .itemMedia,.mosaic .s1_490 .itemMedia .itemCollage,.mosaic .s1_490 .itemMedia .itemCollage img{height:379.55px;height:12.25rem}.mosaic .s1_374,.mosaic .s1_374 .itemMedia,.mosaic .s1_374 .itemMedia .itemCollage,.mosaic .s1_374 .itemMedia .itemCollage img{height:289.7px;height:9.35rem}.mosaic .itemBox_eb_4_1 .layerTextBottom{max-height:75.91px;max-height:2.45rem;overflow:hidden}.mosaic .itemBox_eb_4_1 .layerTextBottom .info{font-weight:400;font-size:9.3px;font-size:.3rem;line-height:17.04px;line-height:.55rem}.mosaic .itemBox_eb_4_1 .layerTextBottom .title{font-weight:500;font-size:15.49px;font-size:.5rem;line-height:18.59px;line-height:.6rem}.mosaic .itemBox_3_1 .layerTextBottom,.mosaic .itemBox_lr_4_1 .layerTextBottom{overflow:hidden}.mosaic .itemBox_3_1 .layerTextBottom .tWrp,.mosaic .itemBox_lr_4_1 .layerTextBottom .tWrp{overflow:hidden;display:block;max-height:75.29px;max-height:2.43rem}.mosaic .itemBox_3_1 .layerTextBottom .info,.mosaic .itemBox_lr_4_1 .layerTextBottom .info{font-weight:400;font-size:9.3px;font-size:.3rem;line-height:18.59px;line-height:.6rem}.mosaic .itemBox_3_1 .layerTextBottom .title,.mosaic .itemBox_lr_4_1 .layerTextBottom .title{font-weight:500;font-size:15.49px;font-size:.5rem;line-height:18.59px;line-height:.6rem}.mosaic .itemBox_3_1.showAuthorOrSourceImage .layerTextBottom .tWrp{max-height:56.7px;max-height:1.83rem;display:block;overflow:hidden}.mosaic .itemBox_eb_4_1.showAuthorOrSourceImage .layerTextBottom .tWrp{max-height:38.11px;max-height:1.23rem;display:block;overflow:hidden}.mosaic .itemBox_eb_4_2 .layerTextBottom{margin-top:.25rem;max-height:120.84px;max-height:3.9rem}.mosaic .itemBox_eb_4_2 .layerTextBottom .info{font-weight:400;font-size:10.84px;font-size:.35rem;line-height:23.24px;line-height:.75rem}.mosaic .itemBox_eb_4_2 .layerTextBottom .title{font-weight:700;font-size:24.79px;font-size:.8rem;line-height:29.44px;line-height:.95rem}.mosaic .itemBox_eb_1_1 .newsSpec{margin-left:1rem;margin-top:1rem;position:relative;right:auto;top:auto;padding-left:.25rem;padding-right:.25rem;display:inline-block;font-weight:700;font-size:11.62px;font-size:.375rem;line-height:15.49px;line-height:.5rem}.mosaic .itemBox_eb_1_1 .layerTextBottom{width:398.92px;width:12.875rem;margin-left:1rem;margin-top:.25rem;max-height:289.7px;max-height:9.35rem}.mosaic .itemBox_eb_1_1 .layerTextBottom .info{font-weight:400;font-size:10.84px;font-size:.35rem;line-height:23.24px;line-height:.75rem;margin-top:1rem}.mosaic .itemBox_eb_1_1 .layerTextBottom .title{font-weight:700;font-size:24.79px;font-size:.8rem;line-height:29.44px;line-height:.95rem;max-height:89.85px;max-height:2.9rem;overflow:hidden;display:block}.mosaic .itemBox_eb_1_1 .layerTextBottom .lead{margin-top:.625rem;font-size:12.39px;font-size:.4rem;line-height:18.59px;line-height:.6rem;font-weight:400;max-height:92.95px;max-height:3rem;overflow:hidden;display:block}.mosaic .itemBox_eb_1_1 .layerTextBottom .authorImg,.mosaic .itemBox_eb_1_1 .layerTextBottom .sourceImg{margin-top:.625rem}.mosaic .itemBox_eb_1_1 .layerTextBottom .authorImg img{border-radius:.5rem;margin-right:.25rem;width:30.98px;width:1rem;height:30.98px;height:1rem}.mosaic .itemBox_eb_1_1 .imageContainer+.layerTextBottom{margin-top:1rem}.mosaic .itemBox_eb_1_1 .imageContainer+.info{margin-top:.75rem}.mosaic .itemBox_3_2:visited .layerTextBottom,.mosaic .itemBox_3_3:visited .layerTextBottom{color:#cacaca}.mosaic .itemBox_3_2:visited .layerTextBottomRed .title,.mosaic .itemBox_3_3:visited .layerTextBottomRed .title{color:#f7b9ba}.mosaic .itemBox_3_2:visited .layerTextBottomYellow .title,.mosaic .itemBox_3_3:visited .layerTextBottomYellow .title{color:#7c6816}.mosaic .itemBox_3_2:visited .layerTextBottomMono,.mosaic .itemBox_3_2:visited .layerTextBottomMono .title,.mosaic .itemBox_3_3:visited .layerTextBottomMono,.mosaic .itemBox_3_3:visited .layerTextBottomMono .title{color:#c3c3c3}.mosaic .itemBox_3_1:visited .layerTextBottom,.mosaic .itemBox_eb_4_1:visited .layerTextBottom,.mosaic .itemBox_eb_4_2:visited .layerTextBottom,.mosaic .itemBox_lr_4_1:visited .layerTextBottom{color:#989898}.mosaic .itemBox_3_1:hover .layerTextBottom .title,.mosaic .itemBox_eb_4_1:hover .layerTextBottom .title,.mosaic .itemBox_eb_4_2:hover .layerTextBottom .title,.mosaic .itemBox_lr_4_1:hover .layerTextBottom .title{background:#fff;background:linear-gradient(to right,#ffd200,#ffd200);background-position:0 .55rem;background-repeat:repeat-x;background-size:1px 2px}.mosaic .itemBox_eb_4_2:hover .layerTextBottom .title{background-position:0 .86rem}.mosaic .itemBox_lr_4_1 .newsSpec{background:#ccc}.mosaic .itemBox_3_3 .newsSpec{font-size:12.39px;font-size:.4rem;padding:.15rem .2rem .1rem}.mosaic .itemBox_3_2 .layerTextBottom,.mosaic .itemBox_3_3 .layerTextBottom{position:absolute;bottom:15.49px;bottom:.5rem;color:#fff;text-shadow:0 .85px 1.55px #333;text-shadow:0 .0275rem .05rem #333}.mosaic .itemBox_3_2 .layerTextBottom .info,.mosaic .itemBox_3_3 .layerTextBottom .info{font-weight:400;position:absolute;top:-21.69px;top:-.7rem}.mosaic .itemBox_3_2 .layerTextBottom .tWrp,.mosaic .itemBox_3_3 .layerTextBottom .tWrp{position:relative}.mosaic .itemBox_3_2 .layerTextBottom .title,.mosaic .itemBox_3_3 .layerTextBottom .title{display:block;font-weight:700;border-left-style:solid;border-left-color:#ffd200}.mosaic .itemBox_3_2 .layerTextBottom .sourceImg,.mosaic .itemBox_3_2.mainPlayer img,.mosaic .itemBox_3_3 .layerTextBottom .sourceImg{display:none}.mosaic .itemBox_3_2 .layerTextBottom{left:19.36px;left:.625rem}.mosaic .itemBox_3_2 .layerTextBottom .info{font-size:9.3px;font-size:.3rem;line-height:18.59px;line-height:.6rem;width:389.62px;width:12.575rem}.mosaic .itemBox_3_2 .layerTextBottom .title{font-size:21.69px;font-size:.7rem;line-height:24.01px;line-height:.775rem;min-width:389.62px;min-width:12.575rem;max-width:397.37px;max-width:12.825rem;padding-left:.45rem;margin-left:-.625rem;border-left-width:.15rem}.mosaic .itemBox_3_2 .layerTextBottomMono .title,.mosaic .itemBox_3_2 .layerTextBottomRed .title,.mosaic .itemBox_3_2 .layerTextBottomYellow .title{min-width:281.18px;min-width:9.075rem;max-width:366.39px;max-width:11.825rem;text-shadow:none;margin-left:0;margin-top:.25rem;border-left-width:0;padding:.2rem .35rem}.mosaic .itemBox_3_2 .layerTextBottomRed .title{background:red}.mosaic .itemBox_3_2 .layerTextBottomYellow .title{background:#ffd200;color:#000}.mosaic .itemBox_3_2 .layerTextBottomMono .title{background:#000;color:#fff}.mosaic .itemBox_3_2.mainPlayer{background:#ffd200;cursor:default}.mosaic .itemBox_3_2.mainPlayer .itemMedia,.mosaic .itemBox_3_2.mainPlayer .sgPlayerGls{width:358.02px;width:11.555rem}.mosaic .itemBox_3_2.mainPlayer .newsSpec{position:absolute;bottom:7.75px;bottom:.25rem;top:auto;right:auto;left:365.77px;left:11.805rem;font-size:9.3px;font-size:.3rem;background:0 0;color:#1e1e1e;padding:0}.mosaic .itemBox_3_2.mainPlayer .layerTextBottom{text-shadow:none;bottom:auto;left:auto;right:0;top:23.24px;top:.75rem;width:85.98px;width:2.775rem;color:#1e1e1e}.mosaic .itemBox_3_2.mainPlayer .layerTextBottom .info{margin-left:.25rem;padding-left:.125rem;padding-right:.125rem;margin-bottom:.25rem;background:#1e1e1e;color:#fff;font-size:9.3px;font-size:.3rem;line-height:13.94px;line-height:.45rem;font-weight:500;width:auto}.mosaic .itemBox_3_2.mainPlayer .layerTextBottom .title{padding-left:.25rem;padding-right:.25rem;font-size:9.3px;font-size:.3rem;line-height:13.17px;line-height:.425rem;font-weight:500;min-width:auto;max-width:auto;margin-left:0;border-left:0;color:inherit;background:inherit}.mosaic .itemBox_3_2.mainPlayer .layerTextBottom .lead{display:block;font-size:7.75px;font-size:.25rem;line-height:12.39px;line-height:.4rem;font-weight:400;padding-top:.25rem;padding-left:.25rem;padding-right:.25rem;max-height:74.36px;max-height:2.4rem;overflow:hidden}.mosaic .itemBox_3_1.mainPlayer .itemMedia svg,.mosaic .itemBox_3_1.playerIsReady .itemMedia span,.mosaic .itemBox_3_3.mainPlayer .imageContainer,.mosaic .itemBox_3_3.mainPlayer .layerTextBottom,.mosaic .itemBox_3_3.mainPlayer .newsSpec,.mosaic .itemBox_eb_4_2.mainPlayer .newsSpec{display:none}.mosaic .itemBox_3_3 .sgPlayerGls{width:100%;height:100%}.mosaic .itemBox_3_3 .newsSpec{right:15.49px;right:.5rem;top:15.49px;top:.5rem}.mosaic .itemBox_3_3 .imageContainer svg{right:13.94px;right:.45rem;bottom:12.39px;bottom:.4rem}.mosaic .itemBox_3_3 .layerTextBottom{left:27.11px;left:.875rem}.mosaic .itemBox_3_3 .layerTextBottom .info{font-size:10.84px;font-size:.35rem;line-height:18.59px;line-height:.6rem;width:619.68px;width:20rem}.mosaic .itemBox_3_3 .layerTextBottom .title{font-size:26.34px;font-size:.85rem;line-height:29.44px;line-height:.95rem;min-width:604.19px;min-width:19.5rem;max-width:611.93px;max-width:19.75rem;padding-left:.65rem;margin-left:-.875rem;border-left-width:.25rem}.mosaic .itemBox_3_3 .layerTextBottomMono .title,.mosaic .itemBox_3_3 .layerTextBottomRed .title,.mosaic .itemBox_3_3 .layerTextBottomYellow .title{min-width:356.32px;min-width:11.5rem;max-width:410.54px;max-width:13.25rem;text-shadow:none;margin-left:-.4rem;margin-top:.25rem;border-left-width:0;padding:.2rem .35rem}.mosaic .itemBox_3_3 .layerTextBottomRed .title{background:red}.mosaic .itemBox_3_3 .layerTextBottomYellow .title{background:#ffd200;color:#000}.mosaic .itemBox_3_3 .layerTextBottomMono .title{background:#000;color:#fff}.mosaic .itemBox_3_3.mainPlayer{min-height:441.52px;min-height:14.25rem;background:#dcdcdc}.mosaic .itemBox_3_3.mainPlayerYoutube{min-height:379.55px;min-height:12.25rem}.mosaic .imageGradient,.mosaic .imageGradient img{display:block;position:absolute;top:0;left:0;width:100%;height:100%}.nativeText{margin-top:.2rem;display:table-caption;padding-bottom:6px;white-space:nowrap;color:#9b9b9b;font-size:7.75px;font-size:.25rem;text-transform:uppercase}.dailyNeeds,.dailyNeeds a{color:#1E1E1E}.nativeTextNoLabel{margin-top:0;padding-bottom:1px}.dailyNeeds{height:162.67px;height:5.25rem;max-height:162.67px;max-height:5.25rem;width:100%;font-size:11.62px;font-size:.375rem}.dailyNeeds h1.locationName{float:left;cursor:pointer;max-width:177.38px;max-width:5.725rem}.dailyNeeds h1.locationName svg{float:left;height:15px;width:15px;padding-right:5px;margin-right:5px;border-right:1px solid #969696}.dailyNeeds h1.locationName:after,.popup h1:after{border-right-width:.075rem;border-right-style:solid;border-right-color:transparent;border-left-style:solid;vertical-align:middle}.dailyNeeds h1.locationName:after{width:0;height:0;border-top-width:.15rem;border-top-style:solid;border-top-color:#000;border-left-width:.075rem;border-left-color:transparent;margin-left:.1rem;display:inline-block}.dailyNeeds .dn-tab-air h1.locationName{max-width:185.9px;max-width:6rem}.dailyNeeds ul.dn-menu{height:43.38px;height:1.4rem;width:100%;display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:justify;justify-content:space-between;margin:0;padding:0}.dailyNeeds ul.dn-menu li{display:block;-ms-flex:1 1 auto;flex:1 1 auto;list-style-type:none;text-align:center}.dailyNeeds ul.dn-menu li span.new{position:absolute;background:#ffd200}.dailyNeeds ul.dn-menu li a{color:#1e1e1e;display:block;padding-bottom:.125rem;font-size:7.75px;font-size:.25rem;height:43.38px;height:1.4rem;box-sizing:border-box;font-weight:500;text-align:center;border-bottom-width:.025rem;border-bottom-style:solid;transition:.3s}.dailyNeeds ul.dn-menu li a.active,.dailyNeeds ul.dn-menu li a:hover{border-bottom-width:.125rem;border-bottom-style:solid}.dailyNeeds ul.dn-menu li a.active,.dailyNeeds ul.dn-menu li a.active:hover{border-bottom-color:#ffd200}.dailyNeeds ul.dn-menu li a span{display:block;margin-top:-.075rem}.dailyNeeds ul.dn-menu li a svg{height:29.44px;height:.95rem}.dailyNeeds ul.dn-menu li a.weather svg{width:29.44px;width:.95rem;fill:#1E1E1E}.dailyNeeds ul.dn-menu li a.tv svg{width:23.24px;width:.75rem;fill:#231F20}.dailyNeeds ul.dn-menu li a.horoscope svg{width:21.69px;width:.7rem;fill:#1E1E1E}.dailyNeeds ul.dn-menu li a.air{position:relative}.dailyNeeds ul.dn-menu li a.air span.new{position:absolute;right:0;top:2.32px;top:.075rem;background:#ffd200;padding:2px;text-transform:uppercase;font-size:6.2px;font-size:.2rem}.dailyNeeds ul.dn-menu li a.air span.new:before{content:"";width:0;height:0;border-bottom-style:solid;border-bottom-color:transparent;border-bottom-width:.1rem;border-top-style:solid;border-top-color:transparent;border-top-width:.1rem;border-left-style:solid;border-left-color:#ffd200;border-left-width:.1rem;position:absolute;z-index:1;top:7.75px;top:.25rem;left:1.55px;left:.05rem}.dailyNeeds ul.dn-menu li a.air svg{fill:#1e1e1e;width:20.14px;width:.65rem;height:29.44px;height:.95rem;margin-bottom:-3px}.dailyNeeds ul.dn-menu li a.jakdojade svg{width:24.79px;width:.8rem;fill:#231F20}.dailyNeeds ul.dn-menu li a.lotto span{margin-top:-.15rem}.dailyNeeds ul.dn-menu li a.lotto svg{padding-top:.075rem;width:20.91px;width:.675rem;fill-rule:evenodd;clip-rule:evenodd;fill:#231F20}.dailyNeeds .dn-tabs .dn-tab{position:relative;height:116.19px;height:3.75rem;box-sizing:border-box;display:none;animation:fadeEffect 1s}.dailyNeeds .dn-tabs .dn-tab.active{display:block}.dailyNeeds .dn-tabs .dn-tab h1{margin-top:.375rem;margin-bottom:.25rem;line-height:11.62px;line-height:.375rem;font-size:11.62px;font-size:.375rem}@keyframes fadeEffect{from{opacity:0}to{opacity:1}}.dailyNeeds svg{margin:auto;display:block;width:31.76px;width:1.025rem;height:31.76px;height:1.025rem}.dn-tab-weather .fullWeatherLink:after,.popup h1:after{margin-left:.1rem;content:""}.dailyNeeds svg.jakDojadeIconPack,.dailyNeeds svg.mainIconPack{display:none}.dailyNeeds .dn-button{text-transform:uppercase;color:#1E1E1E;font-size:9.3px;font-size:.3rem;font-weight:500;background-color:#FFD200;display:inline-block;padding:.125rem .5rem}.popup,.popup ul{padding-left:.25rem}.dailyNeeds.widget.weatherWidget{max-height:none;height:auto;min-height:162.67px;min-height:5.25rem}@keyframes ball-scale-ripple{0%{opacity:1;transform:scale(.5)}70%{opacity:.65;transform:scale(1)}100%{opacity:.1}}@keyframes rotating{from{transform:rotate(0)}to{transform:rotate(360deg)}}@keyframes ball-fall{0%{opacity:0;transform:translateY(-145%)}10%,90%{opacity:.5}20%,80%{opacity:1;transform:translateY(0)}100%{opacity:0;transform:translateY(145%)}}@keyframes fade{0%,100%{opacity:1}50%{opacity:.5}}.popup{position:absolute;border-bottom-width:.125rem;border-bottom-style:solid;border-bottom-color:#FFD200;left:-7.75px;left:-.25rem;right:-7.75px;right:-.25rem;top:-7.75px;top:-.25rem;padding-right:.25rem;padding-top:.25rem;box-shadow:0 0 28px 2px rgba(0,0,0,.5);background:#fff;z-index:5;display:none}.popup.visible{display:block}.popup h1{margin-right:1rem}.popup h1:after{width:0;height:0;border-bottom-width:.15rem;border-bottom-style:solid;border-bottom-color:#000;border-left-width:.075rem;border-left-color:transparent;display:inline-block}.popup .popupFooter,.popup ul.ajaxItems{margin-left:-.25rem;margin-right:-.25rem}.popup .popupClose{position:absolute;top:13.17px;top:.425rem;right:7.75px;right:.25rem;width:19.36px;width:.625rem;height:19.36px;height:.625rem;cursor:pointer}.popup form.searchCity{border-width:.025rem;border-style:solid;border-color:#DCDCDC;-ms-flex-align:stretch;align-items:stretch;-ms-flex-direction:row;flex-direction:row;display:-ms-flexbox;display:flex}.popup form.searchCity input{border:0;background:#fff;font-weight:300;box-sizing:border-box;color:#969696;padding:.25rem;font-size:10.84px;font-size:.35rem}.dn-tab-air .popup ul.predefinedCities,.popup .popupFooter{padding-bottom:.375rem}.popup form.searchCity input[type=text]{-ms-flex:1 1 auto;flex:1 1 auto}.popup form.searchCity input[type=submit]{font-weight:700;cursor:pointer}.popup ul{padding-top:.35rem}.popup ul li{font-weight:300;font-size:10.84px;font-size:.35rem;cursor:pointer}.popup ul li>span{line-height:18.59px;line-height:.6rem}.popup ul li>span .province{display:block;color:#6B6B6B;font-size:7.75px;font-size:.25rem;line-height:9.3px;line-height:.3rem}.popup ul li.active,.popup ul li:hover{background:#f4f4f4}.popup ul.predefinedCities{columns:2;min-height:185.9px;min-height:6rem}.popup ul.ajaxItems{display:none;height:185.9px;height:6rem;overflow:hidden;padding-left:0}.popup ul.ajaxItems li{padding-right:.5rem;padding-left:.5rem;cursor:pointer}.popup .popupFooter{font-size:10.84px;font-size:.35rem;margin-top:.375rem;padding-left:.5rem;padding-top:.375rem;border-top-width:.025rem;font-weight:300;border-top-style:solid;border-top-color:#DCDCDC}.popup .popupFooter span.detectLocation{cursor:pointer}.popup .popupFooter span.detectLocation svg{display:inline-block;width:10.84px;width:.35rem;height:10.84px;height:.35rem;margin-right:.25rem}.popup .popupFooter span.errorMessage{display:none}.popup .popupFooter.loading span.detectLocation{pointer-events:none;opacity:.5}.popup .popupFooter.loading span.detectLocation svg{animation:rotating 3s linear infinite}.dn-tab-lotto .lotteryResults{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;margin:.5rem 0}.dn-tab-lotto .lotteryResults li{border:2px solid #DCDCDC;border-radius:100%;color:#1E1E1E;width:33.31px;width:1.075rem;height:33.31px;height:1.075rem;line-height:33.31px;line-height:1.075rem;font-size:15.49px;font-size:.5rem;text-align:center}.dn-tab-lotto .lotteryResults li a{color:#000}.dn-tab-lotto .moreResults{text-transform:uppercase;border-width:.025rem;border-color:#1E1E1E;border-style:solid;color:#1E1E1E;display:block;width:100%;height:20.14px;height:.65rem;line-height:20.14px;line-height:.65rem;text-align:center;font-size:9.3px;font-size:.3rem;font-weight:700;box-sizing:border-box}.zodiacIconPack{position:absolute;width:0;height:0;overflow:hidden}.zodiacSigns{width:100%;margin-top:.25rem;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-line-pack:justify;align-content:space-between}.zodiacSigns .zodiacSingle{display:block;position:relative;-ms-flex:1 1 16%;flex:1 1 16%;margin-top:.15rem;margin-bottom:.2rem}.zodiacSigns .zodiacSingle .zodiacLink{color:#1e1e1e;display:block;font-size:9.3px;font-size:.3rem;text-align:center}.zodiacSigns .zodiacSingle .zodiacLink .zodiacIcon{font-size:27.11px;font-size:.875rem;width:21.69px;width:.7rem;height:21.69px;height:.7rem}.zodiacSigns .zodiacSingle .zodiacLink .zodiacName{margin-top:.25rem;display:block;font-weight:300}.dn-tab-weather .fullWeatherLink{position:relative;padding-right:.25rem;margin-bottom:.25rem;margin-top:.375rem;font-size:9.3px;font-size:.3rem;font-weight:300;color:#969696;line-height:11.62px;line-height:.375rem;float:right;max-width:123.94px;max-width:4rem}.dn-tab-weather .fullWeatherLink:after{position:absolute;top:3.1px;top:.1rem;right:0;border-top-width:.075rem;border-bottom-width:.075rem;border-left-width:.125rem;border-top-color:transparent;border-bottom-color:transparent;border-left-color:#969696;border-top-style:solid;border-bottom-style:solid;border-left-style:solid}.dn-tab-weather .weatherBox{clear:both;position:relative;height:77.46px;height:2.5rem}.dn-tab-weather .weatherBox .weatherNavi{position:relative;height:27.11px;height:.875rem}.dn-tab-weather .weatherBox .weatherNavi .fullWeatherLink,.dn-tab-weather .weatherBox .weatherNavi .selectedCity{margin-top:.25rem;margin-bottom:.1rem}.dn-tab-weather .weatherBox .weatherNavi .selectedCity{font-size:11.62px;font-size:.375rem;line-height:15.49px;line-height:.5rem;font-weight:500;float:left;padding-right:.25rem;max-width:170.41px;max-width:5.5rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.dn-tab-weather .weatherBox .weatherNavi .selectedCity:after{top:13.94px;top:.45rem;border-left-width:.075rem;border-right-width:.075rem;border-top-width:.125rem;border-left-color:transparent;border-right-color:transparent;border-top-color:#1e1e1e;border-left-style:solid;border-right-style:solid;border-top-style:solid}.dn-tab-weather .weatherBox .weatherNavi .selectedCityOn:after{border-top:0;border-bottom-width:.125rem;border-bottom-color:#1e1e1e;border-bottom-style:solid}.dn-tab-weather .weatherBox .weatherNavi .fullWeatherLink:after,.dn-tab-weather .weatherBox .weatherNavi .selectedCity:after{content:"";position:absolute;margin-left:.1rem}.dn-tab-weather .weatherBox .weatherNavi .fullWeatherLink{position:relative;padding-right:.25rem;font-size:9.3px;font-size:.3rem;font-weight:300;color:#969696;line-height:15.49px;line-height:.5rem;float:right}.dn-tab-weather .weatherBox .weatherNavi .fullWeatherLink:after{top:5.42px;top:.175rem;right:0;border-top-width:.075rem;border-bottom-width:.075rem;border-left-width:.125rem;border-top-color:transparent;border-bottom-color:transparent;border-left-color:#969696;border-top-style:solid;border-bottom-style:solid;border-left-style:solid}.dn-tab-weather .weatherBox .weatherNavi .cityList{display:none}.dn-tab-weather .weatherBox .weatherLink{position:relative;height:72.04px;height:2.325rem;display:block}.dn-tab-weather .weatherBox .weatherToday,.dn-tab-weather .weatherBox .weatherTomorrow{display:block;width:143.3px;width:4.625rem;height:72.04px;height:2.325rem;position:absolute}.dn-tab-weather .air-state,.dn-tab-weather.dn-tab-weatherWithAir .fullWeatherLink:after,.dn-tab-weather.dn-tab-weatherWithAir .weatherTomorrow{display:none}.dn-tab-weather .weatherBox .weatherToday img,.dn-tab-weather .weatherBox .weatherTomorrow img{width:48.03px;width:1.55rem;height:48.03px;height:1.55rem;position:absolute;bottom:20.14px;bottom:.65rem;left:81.33px;left:2.625rem}.dn-tab-weather .weatherBox .weatherToday .temp,.dn-tab-weather .weatherBox .weatherTomorrow .temp{position:absolute;bottom:21.69px;bottom:.7rem;right:69.71px;right:2.25rem;font-size:30.98px;font-size:1rem;line-height:38.73px;line-height:1.25rem;font-weight:300}.dn-tab-weather .weatherBox .weatherToday .when,.dn-tab-weather .weatherBox .weatherTomorrow .when{font-size:12.39px;font-size:.4rem;line-height:13.94px;line-height:.45rem;font-weight:500;width:139.43px;width:4.5rem;position:absolute;bottom:0;text-align:center;text-transform:uppercase}.dn-tab-weather .weatherBox .weatherToday{left:0}.dn-tab-weather .weatherBox .weatherTomorrow{right:0}.dn-tab-weather.dn-tab-weatherWithAir .locationName{max-width:286.6px;max-width:9.25rem}.dn-tab-weather.dn-tab-weatherWithAir .fullWeatherLink{position:absolute;bottom:2.32px;bottom:.075rem;color:#000;font-weight:700;font-size:9.3px;font-size:.3rem;width:286.6px;width:9.25rem;text-align:center;max-width:none;margin-bottom:0}.dn-tab-weather.dn-tab-weatherWithAir .fullWeatherLink span{background:#ffd200;height:21.69px;height:.7rem;text-transform:uppercase;padding:.175rem .5rem}.dn-tab-air .airBox .pollutionIcon0,.dn-tab-weather.dn-tab-weatherWithAir .air-state__logo_state_pollution-level_0{background:#b1b1b1}.dn-tab-weather.dn-tab-weatherWithAir .weatherToday,.dn-tab-weather.dn-tab-weatherWithAir .weatherTomorrow{height:56.55px;height:1.825rem;top:0;width:143.3px;width:4.625rem}.dn-tab-weather.dn-tab-weatherWithAir .weatherToday:after,.dn-tab-weather.dn-tab-weatherWithAir .weatherTomorrow:after{content:"";border-right:2px #F0F0F0;border-right-style:dotted;height:47.25px;height:1.525rem;position:absolute;right:0;top:3.87px;top:.125rem}.dn-tab-weather.dn-tab-weatherWithAir .weatherToday img,.dn-tab-weather.dn-tab-weatherWithAir .weatherTomorrow img{width:42.6px;width:1.375rem;height:42.6px;height:1.375rem;position:absolute;bottom:3.87px;bottom:.125rem;left:81.33px;left:2.625rem}.dn-tab-weather.dn-tab-weatherWithAir .weatherToday .temp,.dn-tab-weather.dn-tab-weatherWithAir .weatherTomorrow .temp{position:absolute;bottom:2.32px;bottom:.075rem;right:61.97px;right:2rem}.dn-tab-weather.dn-tab-weatherWithAir .weatherToday .temp .deg,.dn-tab-weather.dn-tab-weatherWithAir .weatherTomorrow .temp .deg{display:block;float:left;padding-top:.175rem}.dn-tab-weather.dn-tab-weatherWithAir .weatherToday .when,.dn-tab-weather.dn-tab-weatherWithAir .weatherTomorrow .when{font-weight:400;font-size:8.52px;font-size:.275rem;position:absolute;top:-1.55px;top:-.05rem;text-transform:none;text-align:left}.dn-tab-weather.dn-tab-weatherWithAir .weatherToday{float:left}.dn-tab-weather.dn-tab-weatherWithAir .air-state{width:143.3px;width:4.625rem;height:56.55px;height:1.825rem;float:right;display:block;position:absolute;top:0;right:0}.dn-tab-weather.dn-tab-weatherWithAir .air-state__header{overflow:hidden}.dn-tab-weather.dn-tab-weatherWithAir .air-state__description{float:left;text-align:left;font-size:8.52px;font-size:.275rem;font-weight:400;padding-left:.3rem}.dn-tab-weather.dn-tab-weatherWithAir .air-state__logo_state{float:left;border-radius:100%;fill:#fff}.dn-tab-weather.dn-tab-weatherWithAir .air-state__logo_state_pollution-level_1,.dn-tab-weather.dn-tab-weatherWithAir .air-state__logo_state_pollution-level_2{background:#51ad31}.dn-tab-weather.dn-tab-weatherWithAir .air-state__logo_state_pollution-level_3{background:#ffd200}.dn-tab-weather.dn-tab-weatherWithAir .air-state__logo_state_pollution-level_4{background:#f13e00}.dn-tab-weather.dn-tab-weatherWithAir .air-state__logo_state_pollution-level_5,.dn-tab-weather.dn-tab-weatherWithAir .air-state__logo_state_pollution-level_6{background:#1d1d1b}.dn-tab-weather.dn-tab-weatherWithAir .air-state__logo_airly{float:right;height:15.49px;height:.5rem;position:absolute;top:-3.1px;top:-.1rem;right:0}.dn-tab-weather.dn-tab-weatherWithAir .air-state__content{padding-top:.2rem;padding-left:.8rem;position:relative}.dn-tab-weather.dn-tab-weatherWithAir .air-state__state{position:absolute;top:13.94px;top:.45rem;right:0;font-weight:700;width:75.91px;width:2.45rem;text-align:left;font-size:10.84px;font-size:.35rem}.dn-tab-weather.dn-tab-weatherWithAir-special .air-state{display:none}.dn-tab-weather.dn-tab-weatherWithAir-special .weatherTomorrow{display:block}.dn-tab-weather.dn-tab-weatherWithAir-special .weatherToday:after,.dn-tab-weather.dn-tab-weatherWithAir-special .weatherTomorrow:after{display:none}.dn-tab-jakdojade h1.locationName{max-width:none}.dn-tab-jakdojade .popup .listWrapper{margin-top:.3rem;max-height:263.36px;max-height:8.5rem;overflow-y:scroll}.dn-tab-jakdojade .popup ul.predefinedCities li>span{display:inline-block;height:30.98px;height:1rem}.dn-tab-jakdojade .popup ul.predefinedCities li>span .province{font-size:8.52px;font-size:.275rem}.dn-tab-jakdojade form.scheduleForm{clear:both}.dn-tab-jakdojade form.scheduleForm .tripPoint{float:left;position:relative}.dn-tab-jakdojade form.scheduleForm .tripPoint label{font-weight:500;font-size:15.49px;font-size:.5rem;display:inline-block}.dn-tab-jakdojade form.scheduleForm .tripPoint input{width:108.44px;width:3.5rem;border:0;padding:.05rem 0 .075rem;margin-top:.0625rem;border-bottom-width:.025rem;border-bottom-style:solid;border-bottom-color:#969696;font-size:8.52px;font-size:.275rem;float:right;color:#969696;font-weight:300}.dn-tab-jakdojade form.scheduleForm .tripPoint.tripStart{width:123.94px;width:4rem}.dn-tab-jakdojade form.scheduleForm .tripPoint.tripStart label{width:15.49px;width:.5rem}.dn-tab-jakdojade form.scheduleForm .tripPoint.tripStart .suggestList{left:0}.dn-tab-jakdojade form.scheduleForm .tripPoint.tripEnd{width:139.43px;width:4.5rem;float:right}.dn-tab-jakdojade form.scheduleForm .tripPoint.tripEnd label{width:30.98px;width:1rem}.dn-tab-jakdojade form.scheduleForm .tripPoint.tripEnd .suggestList{right:0}.dn-tab-jakdojade form.scheduleForm .tripPoint .suggestList{position:absolute;background:#EFEFEF;width:232.38px;width:7.5rem;z-index:3;max-height:0;overflow:hidden;transition:max-height .5s}.dn-tab-jakdojade form.scheduleForm .tripPoint .suggestList li{cursor:pointer;overflow:hidden;padding:.375rem .4rem .25rem .2rem}.dn-tab-jakdojade form.scheduleForm .tripPoint .suggestList li>*{pointer-events:none}.dn-tab-jakdojade form.scheduleForm .tripPoint .suggestList li svg{height:19.36px;height:.625rem;width:19.36px;width:.625rem;float:left;margin-right:.25rem}.dn-tab-jakdojade form.scheduleForm .tripPoint .suggestList li h3{float:left;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-size:11.62px;font-size:.375rem;margin:0}.dn-tab-jakdojade form.scheduleForm .tripPoint .suggestList li span{font-size:9.3px;font-size:.3rem;float:left;width:calc(46%);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin:.2rem 0 0}.dn-tab-jakdojade form.scheduleForm .tripPoint .suggestList li:not(:last-child){border-bottom-width:.025rem;border-bottom-style:solid;border-bottom-color:#c8c8c8}.dn-tab-jakdojade form.scheduleForm .tripPoint .suggestList.active{max-height:264.91px;max-height:8.55rem}.dn-tab-jakdojade form.scheduleForm .tripTime{clear:both;padding-top:.25rem}.dn-tab-jakdojade form.scheduleForm .tripTime input[name=tripTime]{display:none}.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker{width:108.44px;width:3.5rem;height:20.14px;height:.65rem;padding-top:.05rem;padding-bottom:.075rem;border-bottom-width:.025rem;border-bottom-style:solid;border-bottom-color:#969696;font-size:8.52px;font-size:.275rem;line-height:16.27px;line-height:.525rem;color:#1e1e1e;display:inline-block;overflow:hidden;box-sizing:border-box}.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker .dp-button{width:15.49px;width:.5rem;height:15.49px;height:.5rem;position:relative;display:block;float:left}.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker .dp-button:after{content:"<";position:absolute;width:15.49px;width:.5rem;height:15.49px;height:.5rem;line-height:15.49px;line-height:.5rem;text-align:center;font-weight:700;cursor:pointer}.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker .dp-button.dp-button-up:after{content:">"}.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker .dp-label{height:100%;width:34.86px;width:1.125rem;text-align:center;display:block;float:left;font-weight:700;margin-left:.125rem;margin-right:.125rem}.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker .dp-label input{width:108.44px;width:3.5rem;width:15.49px;width:.5rem;font-size:8.52px;font-size:.275rem;line-height:16.27px;line-height:.525rem;color:#1e1e1e;display:inline-block;border:0;font-family:'Fira Sans',Arial,sans-serif;font-weight:700;text-align:center}.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker .dp-label .separator{display:inline-block;width:3.87px;width:.125rem}.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker.dp-picker-date{margin-left:.5rem;margin-right:.675rem;padding-left:.5rem}.dn-tab-jakdojade form.scheduleForm .tripTime .dp-picker.dp-picker-time{width:137.88px;width:4.45rem;padding-left:.975rem}.dn-tab-jakdojade form.scheduleForm .dn-button{clear:both;margin-top:.25rem;float:right}.dn-tab-tv .tvShows{width:100%;margin-top:.375rem;font-size:10.07px;font-size:.325rem}.dn-tab-tv .tvShows li a{margin-top:.25rem;margin-bottom:.25rem;color:#1E1E1E;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:stretch;align-items:stretch;-ms-flex-line-pack:wrap;align-content:wrap;-ms-flex-flow:wrap;flex-flow:wrap}.dn-tab-tv .tvShows li a .channelName,.dn-tab-tv .tvShows li a .showTitle{-ms-flex-order:0;padding-right:.075rem;box-sizing:border-box;order:0;-ms-grid-row-align:auto;align-self:auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.dn-tab-tv .tvShows li a .channelName{-ms-flex:0 1 40%;flex:0 1 40%;-ms-flex-item-align:auto;font-weight:500}.dn-tab-tv .tvShows li a .showTitle{-ms-flex:1 1 50%;flex:1 1 50%;-ms-flex-item-align:auto;font-weight:300}.dn-tab-tv .tvShows li a .showStartTime{-ms-flex-order:0;order:0;-ms-flex:0 1 10%;flex:0 1 10%;-ms-flex-item-align:auto;-ms-grid-row-align:auto;align-self:auto;text-align:right;font-weight:500}.dn-tab-tv .tvShows li:nth-child(n+5){display:none}.dn-tab-tv .showMoreButton{float:right;clear:both}.dn-tab-air .popup .searchInfo{width:100%;display:inline-block;font-size:10.07px;font-size:.325rem;margin-top:.25rem;color:#888}.dn-tab-air .partnerBox{font-size:8.52px;font-size:.275rem;line-height:22.46px;line-height:.725rem;margin-top:.2rem;text-transform:none;font-weight:400;letter-spacing:initial;color:#989898;position:relative;float:right;width:61.97px;width:2rem}.dn-tab-air .partnerBox .partnerLogo{display:inline-block;height:17.04px;height:.55rem;width:34.86px;width:1.125rem;position:absolute;top:1.32px;top:.0425rem}.dn-tab-air .partnerBox .partnerLogo svg{height:17.04px;height:.55rem;width:34.86px;width:1.125rem}.dn-tab-air .airBox{clear:both}.dn-tab-air .airBox .pollutionIconWrapper{border-right:1px dotted #d6d6d6;width:100.7px;width:3.25rem;height:63.52px;height:2.05rem;float:left;text-align:center}.dn-tab-air .airBox .pollutionIconWrapper .pollutionIconDesc{font-weight:700;font-size:10.84px;font-size:.35rem}.dn-tab-air .airBox .pollutionIcon1,.dn-tab-air .airBox .pollutionIcon2{background:#51ad31}.dn-tab-air .airBox .pollutionIcon3{background:#ffd200}.dn-tab-air .airBox .pollutionIcon4{background:#f13e00}.dn-tab-air .airBox .pollutionIcon5,.dn-tab-air .airBox .pollutionIcon6{background:#1d1d1b}.dn-tab-air .airBox .pollutionIcon{height:38.73px;height:1.25rem;width:38.73px;width:1.25rem;border-radius:100%;display:block;margin:.05rem auto .15rem}.dn-tab-air .airBox .pollutionIcon svg{display:block;width:100%;height:100%;fill:#fff}.dn-tab-air .airBox .pmBox{height:51.12px;height:1.65rem;padding-left:.75rem;padding-top:.4rem;float:left;line-height:15.49px;line-height:.5rem}.dn-tab-air .airBox .pmBox .label{font-size:12.39px;font-size:.4rem}.dn-tab-air .airBox .pmBox .label i{font-style:normal;font-size:9.3px;font-size:.3rem}.dn-tab-air .airBox .pmBox .value{clear:both;font-weight:700;font-size:20.14px;font-size:.65rem;display:block}.dn-tab-air .airBox .fullAirLink,.dn-tab-air .airBox .sourceInfo{position:absolute;bottom:0;font-size:8.52px;font-size:.275rem;font-weight:400}.dn-tab-air .airBox .sourceInfo{left:0;color:#989898}.dn-tab-air .airBox .sourceInfo a{text-transform:uppercase;color:#32a2db}.dn-tab-air .airBox .fullAirLink{right:0}.dn-tab-air .airBox .fullAirLink:after{content:"";width:0;height:0;border-left-width:.15rem;border-bottom-width:.075rem;border-top-width:.075rem;border-left-style:solid;border-left-color:#000;border-bottom-style:solid;border-bottom-color:transparent;border-top-style:solid;border-top-color:transparent;margin-left:.125rem;vertical-align:middle;display:inline-block;top:-.78px;top:-.025rem;position:relative}.dn-tab-air .loadingSignalGls{width:100%;height:100%;position:absolute;background:#fff;top:0;display:none;text-align:center;font-weight:700;font-size:15px}.dn-tab-air .loadingSignalGls span{z-index:45;position:absolute;left:0;bottom:0;width:100%;text-align:center;clear:both;display:block}.dn-tab-air .loadingSignalGls.show{display:block}.dn-tab-air .loadingSignal{position:absolute;width:100px;height:100px;margin:0 auto;top:11.23px;top:.3625rem;-webkit-animation:rotating 4s linear infinite;left:34%;z-index:21}.dn-tab-air .loadingSignal .bar1,.dn-tab-air .loadingSignal .bar2,.dn-tab-air .loadingSignal .bar3,.dn-tab-air .loadingSignal .bar4{position:absolute;border-radius:100%}.dn-tab-air .loadingSignal .bar2,.dn-tab-air .loadingSignal .bar3,.dn-tab-air .loadingSignal .bar4{border:4px solid transparent;border-left:4px solid #ffd200;border-right:4px solid #ffd200}.dn-tab-air .loadingSignal .bar1{height:5px;width:5px;background:#ffd200;left:47px;top:47px}.dn-tab-air .loadingSignal .bar2{width:25px;height:25px;left:33px;top:33px;-webkit-animation:airSearchAnim 1.5s linear infinite}.dn-tab-air .loadingSignal .bar3{width:50px;height:50px;left:21px;top:21px;-webkit-animation:airSearchAnim 1.5s linear infinite .2s}.dn-tab-air .loadingSignal .bar4{width:75px;height:75px;left:8px;top:8px;-webkit-animation:airSearchAnim 1.5s linear infinite .4s}@keyframes airSearchAnim{0%,100%{opacity:0}12%,87%{opacity:.25}25%,75%{opacity:.5}37%,62%{opacity:.75}50%{opacity:1}}#eventBox{background:#f8f8f8;border:1px solid #dededf;margin-bottom:.5rem;position:relative}#eventBox .boxHeader h1:before,#eventBox .itemMedia{background:0 0}#eventBox .boxHeader h1{border-bottom:0;padding-bottom:0}#eventBox .boxHeader h1 a,#eventBox .boxHeader h1 span{padding-left:.55rem;font-size:23.24px;font-size:.75rem;line-height:30.98px;line-height:1rem}#eventBox .secLinkWrp{padding-right:.5rem}#eventBox .secLinkWrp a{color:#1e1e1e}#eventBox .commentsAndLiveBlog{float:right;margin-right:.35rem;width:469.41px;width:15.15rem}#eventBox .commentsAndLiveBlog .mosaicLeft{float:left;width:225.41px;width:7.275rem}#eventBox .commentsAndLiveBlog .mosaicLeft .itemBox,#eventBox .commentsAndLiveBlog .mosaicWide .itemBox{margin-left:0;height:216.89px;height:7rem}#eventBox .commentsAndLiveBlog .mosaicWide a:first-child,#eventBox .commentsAndLiveBlog .mosaicWide a:nth-last-child(2){margin-right:.5rem}#eventBox .commentsAndLiveBlog .eventBoxList{width:224.63px;width:7.25rem;height:418.28px;height:13.5rem;overflow:hidden;position:relative;float:left;background:#fff;border:1px solid #dededf;border-right-width:.025rem;border-left-width:.025rem}#eventBox .commentsAndLiveBlog .eventBoxList iframe{border:0;margin:0;padding:0}#eventBox .commentsAndLiveBlog .eventBoxList .liveblogBoxSG,#eventBox .commentsAndLiveBlog .eventBoxList .twitterBoxSG{width:224.63px;width:7.25rem;height:387.3px;height:12.5rem;overflow:hidden}#eventBox .commentsAndLiveBlog .eventBoxList .liveblogBoxSG iframe,#eventBox .commentsAndLiveBlog .eventBoxList .twitterBoxSG iframe{width:224.63px;width:7.25rem;height:387.3px;height:12.5rem;border:0;padding:0;margin:0}#eventBox .commentsAndLiveBlog .eventBoxList .liveblogBoxSGiOS{-webkit-overflow-scrolling:touch;overflow-y:scroll}#eventBox .commentsAndLiveBlog .eventBoxList .eventMore{color:#1e1e1e;text-align:center;padding-top:.25rem;padding-bottom:.25rem;font-size:10.84px;font-size:.35rem;font-weight:700;display:block;text-transform:uppercase}#eventBox .commentsAndLiveBlog .eventBoxList .eventMore:after{content:" \00BB"}#eventBox .commentsAndLiveBlog .eventBoxList+.eventBoxList,#eventBox .commentsAndLiveBlog .mosaicLeft+.eventBoxList{margin-left:.425rem}#eventBox .commentsAndLiveBlogWide .eventBoxList{width:462.44px;width:14.925rem;margin-left:0}#eventBox .commentsAndLiveBlogWide .eventBoxList .liveblogBoxSG,#eventBox .commentsAndLiveBlogWide .eventBoxList .liveblogBoxSG iframe,#eventBox .commentsAndLiveBlogWide .eventBoxList .twitterBoxSG,#eventBox .commentsAndLiveBlogWide .eventBoxList .twitterBoxSG iframe{width:462.44px;width:14.925rem}#eventBox .mosaic .sectionLine{margin-bottom:0;padding-bottom:.55rem}#eventBox .mainPlayer:hover{cursor:default}#eventBox .mainPlayer:hover .layerTextBottom .title{background:0 0}#eventBox.eventBoxDefault.singleElement{background:#dcdcdc;background:linear-gradient(to bottom,#dcdcdc 0,#fff 100%)}#eventBox.eventBoxBlack{background:#202020;border:1px solid #202020}#eventBox.eventBoxBlack .boxHeader h1 a,#eventBox.eventBoxBlack .boxHeader h1 span,#eventBox.eventBoxBlack .itemBox_eb_1_1 .info,#eventBox.eventBoxBlack .itemBox_eb_1_1 .layerTextBottom,#eventBox.eventBoxBlack .itemBox_eb_4_1 .info,#eventBox.eventBoxBlack .itemBox_eb_4_1 .layerTextBottom,#eventBox.eventBoxBlack .itemBox_eb_4_2 .info,#eventBox.eventBoxBlack .itemBox_eb_4_2 .layerTextBottom,#eventBox.eventBoxBlack .secLinkWrp a{color:#fff}#eventBox.eventBoxBlack .itemBox_eb_1_1:visited .info,#eventBox.eventBoxBlack .itemBox_eb_1_1:visited .layerTextBottom,#eventBox.eventBoxBlack .itemBox_eb_4_1:visited .info,#eventBox.eventBoxBlack .itemBox_eb_4_1:visited .layerTextBottom,#eventBox.eventBoxBlack .itemBox_eb_4_2:visited .info,#eventBox.eventBoxBlack .itemBox_eb_4_2:visited .layerTextBottom{color:#c3c3c3}#eventBox.eventBoxBlue,#eventBox.eventBoxRed{background:#c70505;border:1px solid #c70505}#eventBox.eventBoxBlue .boxHeader h1 a,#eventBox.eventBoxBlue .boxHeader h1 span,#eventBox.eventBoxBlue .itemBox_eb_1_1 .info,#eventBox.eventBoxBlue .itemBox_eb_1_1 .layerTextBottom,#eventBox.eventBoxBlue .itemBox_eb_4_1 .info,#eventBox.eventBoxBlue .itemBox_eb_4_1 .layerTextBottom,#eventBox.eventBoxBlue .itemBox_eb_4_2 .info,#eventBox.eventBoxBlue .itemBox_eb_4_2 .layerTextBottom,#eventBox.eventBoxBlue .secLinkWrp a,#eventBox.eventBoxRed .boxHeader h1 a,#eventBox.eventBoxRed .boxHeader h1 span,#eventBox.eventBoxRed .itemBox_eb_1_1 .info,#eventBox.eventBoxRed .itemBox_eb_1_1 .layerTextBottom,#eventBox.eventBoxRed .itemBox_eb_4_1 .info,#eventBox.eventBoxRed .itemBox_eb_4_1 .layerTextBottom,#eventBox.eventBoxRed .itemBox_eb_4_2 .info,#eventBox.eventBoxRed .itemBox_eb_4_2 .layerTextBottom,#eventBox.eventBoxRed .secLinkWrp a{color:#fff}#eventBox.eventBoxBlue .itemBox_eb_1_1:visited .info,#eventBox.eventBoxBlue .itemBox_eb_1_1:visited .layerTextBottom,#eventBox.eventBoxBlue .itemBox_eb_4_1:visited .info,#eventBox.eventBoxBlue .itemBox_eb_4_1:visited .layerTextBottom,#eventBox.eventBoxBlue .itemBox_eb_4_2:visited .info,#eventBox.eventBoxBlue .itemBox_eb_4_2:visited .layerTextBottom,#eventBox.eventBoxRed .itemBox_eb_1_1:visited .info,#eventBox.eventBoxRed .itemBox_eb_1_1:visited .layerTextBottom,#eventBox.eventBoxRed .itemBox_eb_4_1:visited .info,#eventBox.eventBoxRed .itemBox_eb_4_1:visited .layerTextBottom,#eventBox.eventBoxRed .itemBox_eb_4_2:visited .info,#eventBox.eventBoxRed .itemBox_eb_4_2:visited .layerTextBottom{color:#d3d3d3}#eventBox.eventBoxBlue{background:#15163c;border:1px solid #15163c}#eventBox.eventBoxBlue .itemBox_eb_1_1:visited .info,#eventBox.eventBoxBlue .itemBox_eb_1_1:visited .layerTextBottom,#eventBox.eventBoxBlue .itemBox_eb_4_1:visited .info,#eventBox.eventBoxBlue .itemBox_eb_4_1:visited .layerTextBottom,#eventBox.eventBoxBlue .itemBox_eb_4_2:visited .info,#eventBox.eventBoxBlue .itemBox_eb_4_2:visited .layerTextBottom{color:#969696}#eventBox.eventBoxYellow{background:#fd0;border:1px solid #fd0}#eventBox.eventBoxYellow .boxHeader h1 a,#eventBox.eventBoxYellow .boxHeader h1 span,#eventBox.eventBoxYellow .itemBox_eb_1_1 .info,#eventBox.eventBoxYellow .itemBox_eb_1_1 .layerTextBottom,#eventBox.eventBoxYellow .itemBox_eb_1_1:visited .info,#eventBox.eventBoxYellow .itemBox_eb_1_1:visited .layerTextBottom,#eventBox.eventBoxYellow .itemBox_eb_4_1 .info,#eventBox.eventBoxYellow .itemBox_eb_4_1 .layerTextBottom,#eventBox.eventBoxYellow .itemBox_eb_4_1:visited .info,#eventBox.eventBoxYellow .itemBox_eb_4_1:visited .layerTextBottom,#eventBox.eventBoxYellow .itemBox_eb_4_2 .info,#eventBox.eventBoxYellow .itemBox_eb_4_2 .layerTextBottom,#eventBox.eventBoxYellow .itemBox_eb_4_2:visited .info,#eventBox.eventBoxYellow .itemBox_eb_4_2:visited .layerTextBottom,#eventBox.eventBoxYellow .secLinkWrp a{color:#000}#eventBox.eventBoxYellow .itemBox_3_1:hover .layerTextBottom .title,#eventBox.eventBoxYellow .itemBox_eb_4_1:hover .layerTextBottom .title,#eventBox.eventBoxYellow .itemBox_eb_4_2:hover .layerTextBottom .title,#eventBox.eventBoxYellow .itemBox_lr_4_1:hover .layerTextBottom .title{background:#fff;background:linear-gradient(to right,#000,#000);background-position:0 .55rem;background-repeat:repeat-x;background-size:1px 2px}#eventBox.eventBoxYellow .itemBox_eb_4_2:hover .layerTextBottom .title{background-position:0 .86rem}#eventBox.eventBoxBlack .itemBox_eb_1_1 .layerTextBottom .title,#eventBox.eventBoxDefault .itemBox_eb_1_1 .layerTextBottom .title{padding-bottom:.075rem;padding-left:.2rem;padding-right:.2rem;background:#ffd200;color:#000;display:inline;box-decoration-break:clone;-webkit-box-decoration-break:clone}#eventBox.eventBoxBlack .itemBox_eb_1_1 .layerTextBottomRed .title,#eventBox.eventBoxDefault .itemBox_eb_1_1 .layerTextBottomRed .title{background:red;color:#fff}#eventBox.singleElement{overflow:hidden;border:none;box-shadow:0 0 0 1px #dededf inset;margin-top:-1px}#eventBox.singleElement .nvfwzzpbkbfk{clear:both;margin-bottom:0}#osgsFla{padding-bottom:7px}.mainPageContent div.nvfwzzpbkbfk.ad_default::after{border-bottom:1px dotted #dcdcdc;background:0 0!important}#flat-top-bar,#gigaboard2Container,#gigaboard3Container,#gigaboardContainer{clear:both}#onet-ad-flat-widget div{border-bottom:1px dotted #5a89a6;padding-top:25px}#fif-flat-magazyn{line-height:0}#onet-ad-top{font-size:0;margin:10px auto}.boxHeader .nvfwzzpbkbfk{margin-bottom:0}.miniSlot{min-height:48.03px;min-height:1.55rem;margin-top:.25rem;margin-bottom:.25rem}.miniSlot .ad_default{margin:0}.miniSlot:after,.miniSlot:before{content:"";display:table;clear:both}#onet-ad-flat-boxleft2 .ad_default,#onet-ad-flat-boxleft3 .ad_default,#onet-ad-flat-boxleft4 .ad_default,#onet-ad-flat-boxleft5 .ad_default,#onet-ad-flat-boxright1 .ad_default,#onet-ad-flat-boxright2 .ad_default,#onet-ad-flat-boxright3 .ad_default,#onet-ad-flat-boxright4 .ad_default,#onet-ad-flat-boxright5 .ad_default,#onet-ad-flat-boxright6 .ad_default,#onet-ad-top2 .ad_default{border-bottom:1px dotted #dcdcdc;padding-bottom:8px;margin:.2rem auto}#onet-ad-flat-boxleft2 .ad_adInfo,#onet-ad-flat-boxleft3 .ad_adInfo,#onet-ad-flat-boxleft4 .ad_adInfo,#onet-ad-flat-boxleft5 .ad_adInfo,#onet-ad-flat-boxright1 .ad_adInfo,#onet-ad-flat-boxright2 .ad_adInfo,#onet-ad-flat-boxright3 .ad_adInfo,#onet-ad-flat-boxright4 .ad_adInfo,#onet-ad-flat-boxright5 .ad_adInfo,#onet-ad-flat-boxright6 .ad_adInfo,#onet-ad-top2 .ad_adInfo{overflow:hidden;text-align:center;margin-bottom:.1rem;font:11px 'Fira Sans',Arial,Helvetica,sans-serif;font-weight:400}#onet-ad-flat-boxleft2 .ad_adInfo:after,#onet-ad-flat-boxleft2 .ad_adInfo:before,#onet-ad-flat-boxleft3 .ad_adInfo:after,#onet-ad-flat-boxleft3 .ad_adInfo:before,#onet-ad-flat-boxleft4 .ad_adInfo:after,#onet-ad-flat-boxleft4 .ad_adInfo:before,#onet-ad-flat-boxleft5 .ad_adInfo:after,#onet-ad-flat-boxleft5 .ad_adInfo:before,#onet-ad-flat-boxright1 .ad_adInfo:after,#onet-ad-flat-boxright1 .ad_adInfo:before,#onet-ad-flat-boxright2 .ad_adInfo:after,#onet-ad-flat-boxright2 .ad_adInfo:before,#onet-ad-flat-boxright3 .ad_adInfo:after,#onet-ad-flat-boxright3 .ad_adInfo:before,#onet-ad-flat-boxright4 .ad_adInfo:after,#onet-ad-flat-boxright4 .ad_adInfo:before,#onet-ad-flat-boxright5 .ad_adInfo:after,#onet-ad-flat-boxright5 .ad_adInfo:before,#onet-ad-flat-boxright6 .ad_adInfo:after,#onet-ad-flat-boxright6 .ad_adInfo:before,#onet-ad-top2 .ad_adInfo:after,#onet-ad-top2 .ad_adInfo:before{border-top:1px dotted #dcdcdc;content:"";display:inline-block;height:1px;position:relative;vertical-align:middle;width:50%}#onet-ad-flat-boxleft2 .ad_adInfo:before,#onet-ad-flat-boxleft3 .ad_adInfo:before,#onet-ad-flat-boxleft4 .ad_adInfo:before,#onet-ad-flat-boxleft5 .ad_adInfo:before,#onet-ad-flat-boxright1 .ad_adInfo:before,#onet-ad-flat-boxright2 .ad_adInfo:before,#onet-ad-flat-boxright3 .ad_adInfo:before,#onet-ad-flat-boxright4 .ad_adInfo:before,#onet-ad-flat-boxright5 .ad_adInfo:before,#onet-ad-flat-boxright6 .ad_adInfo:before,#onet-ad-top2 .ad_adInfo:before{right:8px;margin-left:-50%}#onet-ad-flat-boxleft2 .ad_adInfo:after,#onet-ad-flat-boxleft3 .ad_adInfo:after,#onet-ad-flat-boxleft4 .ad_adInfo:after,#onet-ad-flat-boxleft5 .ad_adInfo:after,#onet-ad-flat-boxright1 .ad_adInfo:after,#onet-ad-flat-boxright2 .ad_adInfo:after,#onet-ad-flat-boxright3 .ad_adInfo:after,#onet-ad-flat-boxright4 .ad_adInfo:after,#onet-ad-flat-boxright5 .ad_adInfo:after,#onet-ad-flat-boxright6 .ad_adInfo:after,#onet-ad-top2 .ad_adInfo:after{left:8px;margin-right:-50%}#onet-ad-flat-boxleft2 .ad_adInfo.ad_adScroll,#onet-ad-flat-boxleft3 .ad_adInfo.ad_adScroll,#onet-ad-flat-boxleft4 .ad_adInfo.ad_adScroll,#onet-ad-flat-boxleft5 .ad_adInfo.ad_adScroll,#onet-ad-flat-boxright1 .ad_adInfo.ad_adScroll,#onet-ad-flat-boxright2 .ad_adInfo.ad_adScroll,#onet-ad-flat-boxright3 .ad_adInfo.ad_adScroll,#onet-ad-flat-boxright4 .ad_adInfo.ad_adScroll,#onet-ad-flat-boxright5 .ad_adInfo.ad_adScroll,#onet-ad-flat-boxright6 .ad_adInfo.ad_adScroll,#onet-ad-top2 .ad_adInfo.ad_adScroll{display:none}#onet-ad-flat-gigaboard1,#onet-ad-flat-gigaboard2,#onet-ad-flat-gigaboard3{margin:0 auto;padding:1px 7px}#onet-ad-flat-gigaboard1 .giga-info,#onet-ad-flat-gigaboard2 .giga-info,#onet-ad-flat-gigaboard3 .giga-info{margin-top:.2rem;margin-left:auto;margin-right:auto}#onet-ad-flat-gigaboard1 .infoScroll,#onet-ad-flat-gigaboard1 .infoText,#onet-ad-flat-gigaboard2 .infoScroll,#onet-ad-flat-gigaboard2 .infoText,#onet-ad-flat-gigaboard3 .infoScroll,#onet-ad-flat-gigaboard3 .infoText{font:11px 'Fira Sans',Arial,Helvetica,sans-serif;font-weight:400;overflow:hidden;text-align:center;margin-bottom:.1rem;width:100%;dispaly:inline-block}#onet-ad-flat-gigaboard1 .infoScroll:after,#onet-ad-flat-gigaboard1 .infoScroll:before,#onet-ad-flat-gigaboard1 .infoText:after,#onet-ad-flat-gigaboard1 .infoText:before,#onet-ad-flat-gigaboard2 .infoScroll:after,#onet-ad-flat-gigaboard2 .infoScroll:before,#onet-ad-flat-gigaboard2 .infoText:after,#onet-ad-flat-gigaboard2 .infoText:before,#onet-ad-flat-gigaboard3 .infoScroll:after,#onet-ad-flat-gigaboard3 .infoScroll:before,#onet-ad-flat-gigaboard3 .infoText:after,#onet-ad-flat-gigaboard3 .infoText:before{border-top:1px dotted #dcdcdc;content:"";display:inline-block;height:1px;position:relative;vertical-align:middle;width:50%}#onet-ad-flat-gigaboard1 .infoScroll,#onet-ad-flat-gigaboard2 .infoScroll,#onet-ad-flat-gigaboard3 .infoScroll,.cityList{display:none}#onet-ad-flat-gigaboard1 .infoText:before,#onet-ad-flat-gigaboard2 .infoText:before,#onet-ad-flat-gigaboard3 .infoText:before{right:8px;margin-left:-50%}#onet-ad-flat-gigaboard1 .infoText:after,#onet-ad-flat-gigaboard2 .infoText:after,#onet-ad-flat-gigaboard3 .infoText:after{left:8px;margin-right:-50%}#onet-ad-flat-gigaboard1 .giga-wrapper,#onet-ad-flat-gigaboard2 .giga-wrapper,#onet-ad-flat-gigaboard3 .giga-wrapper{padding-bottom:8px;border-bottom:1px dotted #dcdcdc}.nvfwzzpbkbfk:empty{margin-bottom:0}#nativetest div{font-size:0}.smallBestSection .items .sectionLineMaxBig .magazine{width:443.85px;width:14.325rem;top:7.75px;top:.25rem;position:absolute;z-index:2}.smallBestSection .items .sectionLineMaxBig .sectionLine{clear:none}.cityList{position:absolute;border-bottom-width:.1625rem;border-bottom-style:solid;border-bottom-color:#FFD200;top:5.42px;top:.175rem;left:-8.99px;left:-.29rem;right:-8.99px;right:-.29rem;box-shadow:0 0 28px 2px rgba(0,0,0,.5);background:#fff;z-index:120;padding:.275rem .275rem .4rem .5rem}.notificationPrompt,.notificationPrompt .popupNotif{position:absolute;left:-5000px}.cityList .clCloseButton{position:absolute;top:17.04px;top:.55rem;right:7.75px;right:.25rem;width:23.24px;width:.75rem;height:23.24px;height:.75rem;cursor:pointer}.cityList .item-1,.cityList .item-2{width:123.94px;width:4rem;float:left;line-height:24.79px;line-height:.8rem}.cityList .item-1 a,.cityList .item-2 a{font-size:11.62px;font-size:.375rem;line-height:24.79px;line-height:.8rem;font-weight:400;display:inline-block;border-bottom:solid 3px #fff}.notificationPrompt .notificationIconPack,.notificationPrompt .popupNotif .accept,.notificationPrompt .popupNotif .info,.notificationPrompt .popupNotif .onetLogo,.notificationPrompt .popupNotif .popupCloseIcon{display:none}.cityList .item-1 a:hover,.cityList .item-2 a:hover{border-bottom:solid 3px #ffd200}.cityList .item-2{margin-left:.5rem;width:139.43px;width:4.5rem}.notificationPrompt{z-index:5000010;width:0;height:0}.notificationPrompt .popupNotif .bellIcon{cursor:pointer;padding:10px;background:#fff;box-shadow:0 2px 1px 1px rgba(255,255,255,.5)}.notificationPrompt .popupNotif.active .accept,.notificationPrompt .popupNotif.active .info,.notificationPrompt .popupNotif.active .info b,.notificationPrompt .popupNotif.active .onetLogo,.notificationPrompt .popupNotif.active .popupCloseIcon{display:block}.notificationPrompt .popupNotif.active{width:960px;height:590px;border-top:1px solid #ccc;border-left:1px solid #ccc;border-right:1px solid #ccc;border-bottom:10px solid #ffd200;background:#fff;position:fixed;left:50%;top:50%;margin-left:-480px;margin-top:-300px;text-align:center}.notificationPrompt .popupNotif.active .popupCloseIcon{position:absolute;right:20px;top:20px;width:97px;height:30px;cursor:pointer;font-size:15px;font-weight:400;line-height:31px;text-transform:uppercase;text-align:center}.notificationPrompt .popupNotif.active .popupCloseIcon svg{width:30px;height:30px;float:right}.notificationPrompt .popupNotif.active .onetLogo{line-height:10px;position:absolute;left:40px;top:30px;width:124px;height:39px}.notificationPrompt .popupNotif.active .onetLogo svg{width:124px;height:39px}.notificationPrompt .popupNotif.active .bellIcon{position:fixed;right:50%;margin-right:-87px;bottom:50%;width:174px;height:218px}.notificationPrompt .popupNotif.active .bellIcon svg{width:174px;height:218px}.notificationPrompt .popupNotif.active .info{position:absolute;top:340px;left:50%;width:700px;margin-left:-350px;font-size:36px;line-height:44px}.notificationPrompt .popupNotif.active .accept{position:absolute;bottom:36px;left:50%;height:40px;width:320px;margin-left:-160px;background:#ffd200;color:#000;font-size:22px;line-height:30px;text-transform:uppercase;vertical-align:middle;padding-top:10px;font-weight:700;cursor:pointer;border-radius:3px}.notificationPrompt .popupNotif.bellActive{left:-5000px;background:0 0;height:0;width:0}.notificationPrompt .popupNotif.active.bellActive.bellReady .bellIcon svg,.notificationPrompt .popupNotif.bellActive .bellIcon svg{height:40px;width:40px}.notificationPrompt .popupNotif.bellActive .accept,.notificationPrompt .popupNotif.bellActive .info,.notificationPrompt .popupNotif.bellActive .onetLogo,.notificationPrompt .popupNotif.bellActive .popupCloseIcon{display:none}.notificationPrompt .popupNotif.bellActive .bellIcon{position:fixed;border-radius:100%;height:40px;width:40px;right:10px;bottom:10px;margin-right:0;box-shadow:0 2px 1px 1px rgba(194,194,194,.5)}.notificationPrompt .popupNotif.active.bellActive .bellIcon{transition:width 1s ease-in-out,height 1s ease-in-out,right 1.3s ease-in-out,bottom 1s ease-in-out,margin 1s ease-in-out,box-shadow 2s ease-in-out}.notificationPrompt .popupNotif.active.bellActive .bellIcon svg{transition:width 1s ease-in-out,height 1s ease-in-out}.notificationPrompt .popupNotif.active.bellActive.bellReady .bellIcon{height:40px;width:40px;right:10px;bottom:10px;margin-right:0;margin-bottom:0;border-radius:100%}.notificationPrompt .infoSystemPrompt,.notificationPrompt .thankPrompt,.notificationPrompt .tutorialPrompt{border-top:1px solid #ccc;border-left:1px solid #ccc;border-right:1px solid #ccc;border-bottom:5px solid #ffd200;display:block;background:#fff;position:fixed;box-shadow:0 0 10px 0 rgba(0,0,0,.09);transition:top 1s ease-in-out}.notificationPrompt .thankPrompt .popupCloseIcon,.notificationPrompt .tutorialPrompt .popupCloseIcon{line-height:10px;position:absolute;right:10px;top:10px;width:25px;height:25px;cursor:pointer}.notificationPrompt .thankPrompt .popupCloseIcon svg,.notificationPrompt .tutorialPrompt .popupCloseIcon svg{width:25px;height:25px}.notificationPrompt .infoSystemPrompt .arrowIcon,.notificationPrompt .tutorialPrompt .arrowIcon{height:48px;width:48px;position:absolute;left:15px;top:30px}.notificationPrompt .infoSystemPrompt .arrowIcon svg,.notificationPrompt .tutorialPrompt .arrowIcon svg{height:48px;width:48px}.notificationPrompt .thankPrompt .info{width:240px;top:34px}.notificationPrompt .thankPrompt .tickIcon{height:48px;width:48px;position:absolute;left:15px;top:30px}.notificationPrompt .thankPrompt .tickIcon svg{height:48px;width:48px}.notificationPrompt .infoSystemPrompt,.notificationPrompt .thankPrompt{width:390px;height:110px;left:15px;top:-600px;font-size:12px}.notificationPrompt .infoSystemPrompt .info,.notificationPrompt .thankPrompt .info{position:absolute;left:90px;font-size:16px}.notificationPrompt .thankPrompt.active{display:block;top:15px}.notificationPrompt .infoSystemPrompt{left:130px}.notificationPrompt .infoSystemPrompt .info{width:285px;top:24px}.notificationPrompt .infoSystemPrompt b{display:block;margin-bottom:10px}.notificationPrompt .infoSystemPrompt.show{top:145px}.notificationPrompt .tutorialPrompt{width:530px;height:225px;left:15px;top:-1000px}.notificationPrompt .tutorialPrompt .text{position:absolute;left:90px;width:430px;font-size:16px;line-height:21px;top:34px}.notificationPrompt .tutorialPrompt .text .title{font-weight:700;font-size:20px}.notificationPrompt .tutorialPrompt .text .info{margin-top:14px}.notificationPrompt .tutorialPrompt ul{padding-left:16px}.notificationPrompt .tutorialPrompt ul li{list-style-type:disc;list-style-position:outside}.notificationPrompt .tutorialPrompt.active{display:block;top:15px}.notificationPrompt .glsPush{position:fixed;left:0;top:0;width:100%;height:100%;opacity:.4;background:#000}@media only screen and (max-height:760px){.notificationPrompt .popupNotif.active{height:500px;margin-top:-250px}.notificationPrompt .popupNotif.active .info{top:267px}}@media only screen and (max-width:1020px){.notificationPrompt .popupNotif.active{width:700px;margin-left:-350px}}#layer2adContener{z-index:5000005;width:100%;height:100%;position:fixed;top:0;background:rgba(255,255,255,.9);overflow:auto}#rekContentV1{display:table;height:100%;width:100%}#rekContentV2{display:table-cell;vertical-align:middle;padding-left:50px;padding-right:50px}#rekContent{z-index:400000000000;width:775px;height:340px;box-shadow:0 0 5px #555;position:relative;background:#fff;margin:50px auto}.logoutTop{overflow:hidden;height:250px}.logoutTop .logoutLogo{margin:20px 0}.logoutTopInner{text-align:center;font-size:20px;font-weight:500}.logoutTopInner span{display:block}.logoutTopInner a{display:inline-block;font-size:22px;padding:14px 73px;background:#ffd200;margin-top:22px;color:#000}.close{cursor:pointer;display:block;height:22px;position:absolute;right:5px;top:-22px;width:76px;color:#ccc;font-size:16px;text-transform:uppercase}.close:after{content:"x";border:1px solid #ccc;padding:0 4px;margin-left:3px;border-radius:4px}.vodPremiumV2 .onetWidgetList .boxHeader,.vodPremiumV2 .pureContentList .boxHeader{height:38.73px;height:1.25rem}.vodPremiumV2 .onetWidgetList .onetWidgetListItem{width:139.43px;width:4.5rem;margin:0 auto}.vodPremiumV2 .onetWidgetListItem header,.vodPremiumV2 .pureContentItem header{width:127.81px;width:4.125rem;height:38.73px;height:1.25rem;position:relative;overflow:hidden;z-index:3;-webkit-transform:translate3d(0,0,0)}.vodPremiumV2 .onetWidgetList .onetWidgetListItem .photo,.vodPremiumV2 .pureContentList .pureContentItem .photo{display:block;position:relative;height:190.55px;height:6.15rem;z-index:3;-webkit-transform:translate3d(0,0,0)}.vodPremiumV2 .onetWidgetList .onetWidgetListItem .photo img,.vodPremiumV2 .pureContentList .pureContentItem .photo img{max-width:139.43px;max-width:4.5rem;min-height:189.78px;min-height:6.125rem;max-height:190.55px;max-height:6.15rem}.vodPremiumV2 .onetWidgetList .onetWidgetListItem .title,.vodPremiumV2 .pureContentList .pureContentItem .title{font-weight:400;display:block;margin-top:.125rem;line-height:14.72px;line-height:.475rem;font-size:11.62px;font-size:.375rem;max-height:14.72px;max-height:.475rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.vodPremiumV2 .onetWidgetList .onetWidgetListItem a:hover .title:hover,.vodPremiumV2 .pureContentList .pureContentItem a:hover .title:hover{text-decoration:underline}.onetWidgetList .boxHeader a:hover,.onetWidgetList .onetWidgetListItem a:hover,.onetWidgetList .pureContentItem a:hover,.pureContentList .boxHeader a:hover,.pureContentList .onetWidgetListItem a:hover,.pureContentList .pureContentItem a:hover,.vodPremiumV2 .onetWidgetList .onetWidgetListItem a:hover .description:hover,.vodPremiumV2 .pureContentList .pureContentItem a:hover .description:hover{text-decoration:none}.vodPremiumV2 .onetWidgetList .onetWidgetListItem .description,.vodPremiumV2 .pureContentList .pureContentItem .description{line-height:10.84px;line-height:.35rem;display:block;font-size:9.3px;font-size:.3rem;color:#8f9090;text-transform:none;height:11.62px;height:.375rem;max-height:11.62px;max-height:.375rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.vodPremiumV2 .onetWidgetList,.vodPremiumV2 .pureContentList{border-bottom:0 none;padding-bottom:.05rem;margin-top:0;width:100%;height:271.11px;height:8.75rem}.vodPremiumV2 .onetWidgetList li,.vodPremiumV2 .pureContentList li{width:139.43px;width:4.5rem;float:left;height:auto}.vodPremiumV2 ul.onetWidgetLinks{list-style:none;float:right;margin-right:.5rem}.vodPremiumV2 .onetWidgetLinks li{float:left;width:auto;padding-right:.25rem;margin-top:.3rem;border-right:1px solid #a9a9a9;height:10.84px;height:.35rem}.vodPremiumV2 .onetWidgetLinks li a{line-height:9.3px;line-height:.3rem;padding:0}.vodPremiumV2 .onetWidgetList .onetWidgetListContent,.vodPremiumV2 .pureContentList .pureContent{height:251.75px;height:8.125rem}.vodPremiumV2 .onetWidgetList .onetWidgetSlider,.vodPremiumV2 .pureContentList .onetWidgetSlider{height:auto;z-index:1;-webkit-transform:translate3d(0,0,0);position:relative}.vodPremiumV2 .wdgtopinfo{height:17.04px;height:.55rem;padding:0;margin:0;overflow:hidden;display:block}.onetWidgetLogo{position:absolute;top:9.3px;top:.3rem;left:178.16px;left:5.75rem;z-index:15}.onetWidgetLogo img{width:61.97px;width:2rem}.wdgcomment{background:green;color:#fff;text-transform:uppercase;display:inline-block;font-size:9.3px;font-size:.3rem;line-height:10.84px;line-height:.35rem;margin:0 auto;overflow:hidden;padding:.125rem .225rem}.onetWidgetLogo a.sheet{display:block;float:left}.sliderWidgetContainer{width:100%}.sliderGalleryIcon,.sliderVideoIcon{background:url(https://ocdn.eu/images/pulscms/MTc7MDA_/891a702f0adcb13add7181e1a40d46bc.png) no-repeat;display:block;text-indent:-9999px;overflow:hidden;position:absolute;cursor:pointer}.sliderVideoIcon.Big{background-position:0 -86px;height:43.38px;height:1.4rem;width:43.38px;width:1.4rem;left:10px;bottom:10px}.sliderVideoIcon.Medium{background-position:-12px -149px;height:33.31px;height:1.075rem;width:33.31px;width:1.075rem;left:7px;bottom:7px}.sliderVideoIcon.Small{background-position:-28px -197px;height:20.91px;height:.675rem;width:20.91px;width:.675rem;left:5px;bottom:5px}.sliderGalleryIcon.Big{background-position:-75px -80px;height:43.38px;height:1.4rem;width:43.38px;width:1.4rem;left:10px;bottom:10px}.sliderGalleryIcon.Medium{background-position:-87px -146px;height:33.31px;height:1.075rem;width:33.31px;width:1.075rem;left:7px;bottom:7px}.sliderGalleryIcon.Small{background-position:-103px -198px;height:20.91px;height:.675rem;width:20.91px;width:.675rem;left:7px;bottom:4px}.firstItem .sliderVideoIcon.Small{right:5px;left:auto}.firstItem .sliderGalleryIcon.Small{right:7px;left:auto}.onetWidgetList,.pureContentList{padding-bottom:.375rem;width:100%;height:181.26px;height:5.85rem}.onetWidgetList .boxHeader,.pureContentList .boxHeader{height:33.31px;height:1.075rem;width:100%;overflow:hidden;position:relative}.onetWidgetList .boxHeader h1,.pureContentList .boxHeader h1{font:20px/40px Verdana,Arial,Helvetica,sans-serif;letter-spacing:-.5px;float:left}.onetWidgetList .onetWidgetListContent,.onetWidgetList .pureContent,.pureContentList .onetWidgetListContent,.pureContentList .pureContent{overflow:hidden;height:143.3px;height:4.625rem}.onetWidgetList li,.pureContentList li{float:left;height:143.3px;height:4.625rem;width:170.41px;width:5.5rem}.onetWidgetList .onetWidgetListItem,.onetWidgetList .pureContentItem,.pureContentList .onetWidgetListItem,.pureContentList .pureContentItem{width:130.13px;width:4.2rem;margin:0 auto}.onetWidgetList .onetWidgetListItemFirst,.pureContentList .onetWidgetListItemFirst{margin-left:0}.onetWidgetList .onetWidgetListItem .photo,.onetWidgetList .pureContentItem .photo,.pureContentList .onetWidgetListItem .photo,.pureContentList .pureContentItem .photo{display:block;position:relative}.onetWidgetList .onetWidgetListItem .title,.onetWidgetList .pureContentItem .title,.pureContentList .onetWidgetListItem .title,.pureContentList .pureContentItem .title{font-weight:700;display:block;margin-top:.125rem;line-height:10.84px;line-height:.35rem}.onetWidgetList .onetWidgetListItem a:hover .title:hover,.onetWidgetList .pureContentItem a:hover .title:hover,.pureContentList .onetWidgetListItem a:hover .title:hover,.pureContentList .pureContentItem a:hover .title:hover{text-decoration:underline}.onetWidgetList .onetWidgetListItem .description,.onetWidgetList .pureContentItem .description,.pureContentList .onetWidgetListItem .description,.pureContentList .pureContentItem .description{line-height:10.84px;line-height:.35rem;display:block}.onetWidgetList .onetWidgetSlider,.pureContentList .onetWidgetSlider{position:relative;height:134.78px;height:4.35rem;overflow:hidden;margin-top:.375rem}.onetWidgetList .onetWidgetListControls,.onetWidgetList .pureContentControls,.pureContentList .onetWidgetListControls,.pureContentList .pureContentControls{float:right;position:absolute;z-index:20;right:3px;top:11.5px}.onetWidgetList .onetWidgetListItem,.pureContentList .onetWidgetListItem{width:162.67px;width:5.25rem}.onetWidgetList .onetWidgetListItem .photo img,.onetWidgetList .pureContentItem .photo img,.pureContentList .onetWidgetListItem .photo img,.pureContentList .pureContentItem .photo img{max-width:162.67px;max-width:5.25rem;min-height:91.4px;min-height:2.95rem;max-height:92.18px;max-height:2.975rem}.onetWidgetSlider{margin-top:.375rem}.vodPremiumV2 .boxHeader h1 span{padding-right:.3625rem;border-right:1px solid #ffd200}.vodPremiumV2 .onetWidgetSlider ul li{width:auto}.vodPremiumV2 .onetWidgetSlider ul li .pureContentItem{width:139.35px;width:4.4975rem}.electionResultsWidget{margin-right:.375rem;margin-bottom:.375rem}.electionResultsWidget span{display:block;font-weight:500;font-size:16.27px;font-size:.525rem}.electionResultsWidget .title{font-weight:700;font-size:14.72px;font-size:.475rem;overflow:hidden;margin-bottom:.525rem;margin-top:-.125rem}.electionResultsWidget .wdgImageMap{width:260.27px;width:8.4rem}.electionResultsWidget .electionBookmarks{overflow:hidden}.electionResultsWidget .electionBookmarks .bookmark{cursor:pointer;font-size:10.07px;font-size:.325rem;float:left;text-transform:uppercase;background-color:#003663;color:#fff;padding:.275rem .875rem}.electionResultsWidget .electionBookmarks .bookmark[data-active=true]{background-color:#fff;color:#000}.electionResultsWidget .electionBookmarks .bookmark.firstBookmark{margin-right:.1rem}.electionResultsWidget .electionContent{overflow:hidden;background:#fff;height:257.94px;height:8.325rem}.electionResultsWidget .electionContent .electionMapBlock{width:50%;float:left}.electionResultsWidget .electionContent .electionMapBlock .mapView{position:relative}.electionResultsWidget .electionContent .electionMapBlock .mapView[data-active=true]{display:block;margin-top:.25rem;margin-left:.65rem}.electionResultsWidget .electionContent .electionMapBlock .mapView[data-active=false]{display:none}.electionResultsWidget .electionContent .electionMapBlock .mapView .mapLegend{position:absolute;top:227.73px;top:7.35rem;left:2.32px;left:.075rem;font-size:9.3px;font-size:.3rem;font-weight:500;padding-left:.075rem}.electionResultsWidget .electionContent .electionMapBlock .mapView .mapLegend:before{content:"";background:#e10000;width:9.3px;width:.3rem;height:9.3px;height:.3rem;position:absolute;left:-10.84px;left:-.35rem;border-radius:100%}.electionResultsWidget .electionContent .electionMapBlock .mapView svg{height:257.94px;height:8.325rem}.electionResultsWidget .electionContent .electionMapBlock .mapView svg circle:hover{cursor:pointer}.electionResultsWidget .electionContent .electionMapBlock .mapView svg path{fill:#eaeaea;stroke:silver;stroke-width:.5px}.electionResultsWidget .electionContent .electionMapBlock .mapView svg path.clicked{fill:#fff}.electionResultsWidget .electionContent .electionMapBlock .mapView svg circle{fill:silver;stroke-width:14px;stroke:transparent}.electionResultsWidget .electionContent .electionCharts{width:50%;height:193.65px;height:6.25rem;float:left}.electionResultsWidget .chartsContainer{margin-top:.75rem;margin-right:.5rem}.electionResultsWidget .electionCharts{font-size:9.3px;font-size:.3rem}.electionResultsWidget .electionCharts .chart{margin-top:.225rem;position:relative}.electionResultsWidget .electionCharts .chart .chart-background{height:10.07px;height:.325rem;background-color:#eaeaea;border-radius:.325rem}.electionResultsWidget .electionCharts .chart .chart-value{transition:width;transition-duration:.1s;border-radius:.325rem;width:0;height:10.07px;height:.325rem;background-color:#e00000;position:absolute;top:0;left:0}.electionResultsWidget .electionCharts .chartDescription{position:relative;margin-top:.225rem;height:19.27px;height:.621875rem}.electionResultsWidget .electionCharts .fullname{font-weight:400;font-size:11.23px;font-size:.3625rem}.electionResultsWidget .electionCharts .committee{color:#a6a6a6;font-size:7.75px;font-size:.25rem}.electionResultsWidget .electionCharts .score{position:absolute;right:3.87px;right:.125rem;top:8.52px;top:.275rem;font-size:14.72px;font-size:.475rem}.electionResultsWidget .electionCharts .gray .fullname{color:#969696}.electionResultsWidget .electionCharts .gray .chart-value{background-color:#c8c8c8}.electionResultsWidget .electionCharts[data-charts-view=bookmark_1]{position:relative;height:250.97px;height:8.1rem}.electionResultsWidget .electionCharts[data-charts-view=bookmark_1] .chartDescription{height:9.3px;height:.3rem}.electionResultsWidget .electionCharts[data-charts-view=bookmark_1] .chartDescription .committee{font-size:11.62px;font-size:.375rem;color:#000}.electionResultsWidget .electionCharts[data-charts-view=bookmark_1] .chartDescription .score{font-size:11.62px;font-size:.375rem;top:.78px;top:.025rem}.electionResultsWidget .electionCharts[data-charts-view=bookmark_1] .linksWrapper{margin-top:.275rem;text-align:right}.electionResultsWidget .electionCharts[data-charts-view=bookmark_1] .linksWrapper a{margin-right:0}.electionResultsWidget .electionCharts[data-charts-view=bookmark_1] .poolNameWrapper{position:absolute;bottom:0;left:0}.electionResultsWidget .linksWrapper{margin-top:.625rem}.electionResultsWidget .linksWrapper a{font-size:10.07px;font-size:.325rem;margin-right:.675rem;font-weight:500}.electionResultsWidget .linksWrapper a:after{content:'';width:0;height:0;border-style:solid;border-width:2.5px 0 2.5px 5px;border-color:transparent transparent transparent #000;display:inline-block;margin-left:5px;position:relative;top:-2px}.electionResultsWidget .poolNameWrapper{color:#969696;font-size:10.07px;font-size:.325rem;margin-top:.275rem;font-weight:400}
		</style>
        <script type="text/javascript">/* <![CDATA[ */
            window.suggestmeyes_loaded = true;
        /* ]]> */</script>

        <!--[if lt IE 9]>
            <script src="https://ocdn.eu/paas-static/template-engine/761c2299f84c68fd0c0f2cf89381abaf/build/polyfill_ie8.js" type="text/javascript"></script>
        <![endif]-->

        <script type="text/javascript">
        dataLayer=[],window.nsglib=function(){function e(){return!(!document.location||!document.location.hash)&&document.location.hash}function t(t,r){function i(){return O}function d(){if(!1===x){x=!0;var t=e();if(t){var n=t.match(/\#zapytaj\-(\S+)/);if(n&&void 0!==n[1])return n[1]}}return!1}function s(){if(!1===M){M=!0;var t=e();if(t){var n=t.match(/\#zapytajsg\-(\S+)/);if(n&&void 0!==n[1])return n[1]}}return!1}function c(){try{"pushState"in history?history.replaceState("",document.title,window.location.pathname+window.location.search):window.location.replace(window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search+"#")}catch(e){}}function u(){if(!1===k){k=!0;var t=e();if(t){if("#wylogowanie-sympatia"===t)return"sympatia";if("#wylogowanie-nk"===t)return"nk";if("#wylogowanie-zapytaj"===t)return"zapytaj";if("#promocja-vod"===t)return"vod"}}return!1}function f(){if(!1===N){N=!0;var t=e();if(t){if("#zamkniecie-blog"===t)return"blog";if("#zamkniecie-republika"===t)return"republika"}}}function m(e,t){!function(){var n='<div class="sideBar"><div class="onet-ad onetAdAuto" id="onet-ad-right3" data-section="onet-ad-right3"  data-collapse="1"></div></div><div class="mainPageContent"><div class="logoutTopInner"><img src="'+t+'" class="logoutLogo"/><span>Wylogowałeś się z serwisu. Jeśli chcesz do niego wrócić, zaloguj się.</span><a href="'+e+'">Zaloguj się</a></div></div>',a=document.getElementById("mainPageBody0");a.className+=" logoutTop",a.innerHTML=n}(),c()}function g(e,t){if("blog"==e)var n="platforma Blog.pl została zamknięta.";else if("republika"==e)var n="serwis Republika.pl został zamknięty. Dziękujemy, że byliście z nami.";!function(){var e='<div class="e404SmallLogo"><img src="'+t+'"><strong>Drodzy użytkownicy,</strong><span>'+n+"</span></div>",a=document.getElementById("mainPageBody0");a.className+=" e404",a.innerHTML=e}()}function h(e,t){var n,a;!function(){var r='<div id="rekContentV1"><div id="rekContentV2"><div id="rekContent"'+(t?' class="'+t+'"':"")+'><a class="close" href="https://www.onet.pl">Zamknij</a><iframe src="'+e+'" width="100%" height="100%"></iframe></div></div>';a=document.createElement("div"),a.setAttribute("id","layer2adContener"),a.innerHTML=r;var i=document.getElementsByTagName("body");if(i.length>0){n=i[0],n.appendChild(a);try{a.scrollTop=0}catch(e){}}}(),c()}function v(){var e=document.getElementById("pageMainContainer");e&&m("https://sympatia.onet.pl/login.html",e.getAttribute("data-static-logoutSympatia"))}function y(){var e=document.getElementById("pageMainContainer");e&&m("https://nk.pl/",e.getAttribute("data-static-logoutNk"))}function w(){var e=document.getElementById("pageMainContainer");e&&m("https://zapytaj.onet.pl/",e.getAttribute("data-static-logoutZapytaj"))}function _(){var e=document.getElementById("pageMainContainer");e&&g("blog",e.getAttribute("data-static-closedblog"))}function A(){var e=document.getElementById("pageMainContainer");e&&g("republika",e.getAttribute("data-static-closedrepublika"))}function b(e){function t(e){"https://zapytaj.onet.pl"!==e.origin&&"https://m.zapytaj.onet.pl"!==e.origin||e.data&&"container-height"===e.data.message&&e.data.height&&(n.style.height=e.data.height+"px",n.style.visibility="visible")}c(),l(window,"message",t);var n=document.createElement("iframe");n.setAttribute("scrolling","no"),n.setAttribute("src","https://zapytaj.onet.pl/widget/onet_sg/question/"+e+".html"),n.setAttribute("style","overflow:hidden; visibility: hidden; height: 30px; width: 100%"),document.getElementById("mainPageBody0").appendChild(n)}function C(e){for(var t=0;t<z.length;t++)L(e,z[t]);H.push(e)}function S(){try{var e=document.querySelector(".mainPageContent"),t=window.getComputedStyle(e),n=e.clientWidth-parseInt(t.paddingLeft)-parseInt(t.paddingRight);onetAds.keyvalues.scr_width=n>=820?"high":"low"}catch(e){}}function E(){try{var e="Warszawa",t=localStorage.getItem("sg.locals.csrId"),n=localStorage.getItem("sg.locals.usrId"),a="none";if(o(n))e=n,a="manual";else if(o(t)){e=t;var i=localStorage.getItem("sg.locals.csrType");o(i)&&"auto"===i&&(a="auto")}e=e.toUpperCase(),e&&(window.onetAds.kropka.DV=e+"/"+a.toUpperCase(),window.onetAds.keywords[1]=e,window.onetAds.keyvalues={city:e}),window.dataLayer.push({DV:window.onetAds.kropka.DV,ucsVariant:r().variantName})}catch(e){}}function T(){function e(){function e(e){this.slotType=e.slotType,this.slotElement=e.slotElement,this.adclick=e.ad.meta.adclick||"",this.fields=e.ad.fields,this.supportedType=["standardItem","bigItem"]}for(var n=B(),i=0;i<n.length;i++)a(n[i]);try{dlApi.addKeyword("TOPNEW"),S()}catch(e){}r("showAds"),r("adMagazyn_ready"),onetAds.cmd.push(function(e){function t(e,t){var n=e.querySelector("span.title");null===n?e.innerHTML=t:n.innerHTML=t}e.registerTemplate({tplCode:"1746213/Headline",renderAd:function(e){var n=document.getElementById(e.div);n.setAttribute("href",e.meta.adclick+e.fields.url),n.setAttribute("target","_blank"),n.setAttribute("data-params-lps","1");var a=n.querySelector("span.newsSpec");a&&a.parentNode.removeChild(a),t(n,e.fields.name)}})}),onetAds.cmd.push(function(n){function a(e,t){if(2!==arguments.length)throw Error("Expected two parameters");if(void 0!==e.fields){var n={};n.slot=e.getSlot().slot,n.elId=e.div,n.artuuid="",n.href=e.meta.adclick+e.fields.url,n.title=e.fields.title,n.images=[{normal:e.fields.image}],n.type="","gallery"===e.fields.art_type?n.type="itemMediaGallery":"video"===e.fields.art_type&&(n.type="itemShortVideo"),n.source=null,e.fields.partner_logo&&(n.source={},n.source.name="",n.source.image=e.fields.partner_logo),n.author=null,n.prepend=e.fields.adInfo||null,t(n)}}function r(e,t){e.parentNode.insertBefore(t,e),i(e)}function i(e){e.parentNode.removeChild(e)}function o(e){try{require.runnerBox.runElement(e)}catch(e){}}n.registerTemplate({tplCode:"1746213/Teaser-Standard",renderAd:function(n,i,d){var s=document.getElementById(n.getSlot().div),l=new e({slotElement:s,slotType:s.getAttribute("data-slot-tpl-type"),ad:n});l.isSupported()?l.render():a(n,function(e){var n=document.getElementById(e.elId);if(!p(n,"mainPlayer")){var a;switch(n.getAttribute("data-params-element-type")){case"t_3_3":a=t.create_3_3(e);break;case"t_3_2":a=t.create_3_2(e);break;case"t_lr_4_1":a=t.create_lr_4_1(e);break;default:a=t.create_3_1(e)}a.setAttribute("data-params-lps","1"),r(n,a),o(a)}})}})}),e.prototype.isSupported=function(){return this.slotType&&this.slotElement&&this.supportedType.indexOf(this.slotType)>-1},e.prototype.render=function(){switch(this.slotType){case"standardItem":this.renderStandard();break;case"bigItem":this.renderbigItem()}},e.prototype.renderbigItem=function(){this.slotElement.innerHTML="";var e=document.createElement("a");e.href=this.adclick+(this.fields.url||"#");var t=o.addSpan(null,null,"imageContainer itemMedia");if(this.fields.image){var n='<img src="_SRC_" alt="" />'.replace("_SRC_",this.fields.image);o.addSpan(n,t,"itemCollage")}o.addSvg(this.fields.art_type,t),e.appendChild(t),this.fields.adInfo&&o.addSpan(this.fields.adInfo,e,"newsSpec"),this.fields.title&&o.addSpan(" "+this.fields.title,e,"title"),this.slotElement.appendChild(e)},e.prototype.renderStandard=function(){this.slotElement.innerHTML="";var e=document.createElement("a");if(e.href=this.adclick+(this.fields.url||"#"),this.fields.adInfo&&o.addSpan(this.fields.adInfo,e,"newsSpec"),this.fields.title){var t=o.addSpan(" "+this.fields.title,null,"title");o.addSvg(this.fields.art_type,t),e.appendChild(t)}this.slotElement.appendChild(e)};var o={addSpan:function(e,t,n){var a=document.createElement("span");if(n&&(a.className=n),e&&(a.innerHTML=e),!t)return a;t.appendChild(a)},addSvg:function(e,t,n){var a=null,r=null;switch(e){case"video":r="itemShortVideo",a="videoIconSmall";break;case"gallery":r="itemMediaGallery",a="photoIconSmall"}if(!a)return null;var i="http://www.w3.org/2000/svg",o=document.createElementNS(i,"svg"),d=document.createElementNS(i,"use");if(d.setAttributeNS("http://www.w3.org/1999/xlink","href","#"+a),o.setAttribute("class",r),o.appendChild(d),!t)return o;t.appendChild(o)}}}function a(e){r(e),r(e+"-json"),window.onetAds.addSlot(e)}function r(e){window.onetAds.on(e,function(){i([e].concat(Array.prototype.slice.call(arguments)))})}function i(e){for(var t=0;t<H.length;t++)L(H[t],e);z.push(e)}E();var o=u(),l=f(),m=d(),g=s();m?window.onetAds.on("beforeAdsFetch",n(function(){O=!1,window.onetAds.cmd=[],h("https://zapytaj.onet.pl/widget/onet_sg/url/"+m+".html?ver=desktop","zapytajFrame")})):("vod"===o?window.onetAds.on("beforeAdsFetch",n(function(){c(),dlApi.addKeyword("PROMOCJA_VOD"),setTimeout(function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src="https://t.goadservices.com/tags/dff7c026-7ef3-40ac-8335-89954728bffd",document.body.appendChild(e)},10)})):"sympatia"===o?window.onetAds.on("beforeAdsFetch",n(v)):"nk"===o?window.onetAds.on("beforeAdsFetch",n(y)):"zapytaj"===o?window.onetAds.on("beforeAdsFetch",n(w)):"blog"===l?window.onetAds.on("beforeAdsFetch",n(_)):"republika"===l?window.onetAds.on("beforeAdsFetch",n(A)):g&&window.onetAds.on("beforeAdsFetch",n(function(){b(g)})),window.onetAds.on("beforeAdsFetch",n(e))),r("whitelist")}function L(e,t){e.apply(null,t)}function B(){var e={};e={"flat-search":!0,"flat-ikona":!0,"flat-ikona2":!0,"flat-link-lokalne":!0},I(a(document,"onetAdAuto"),function(t){var n=t.getAttribute("id"),a=t.getAttribute("data-slot");"string"==typeof a&&""!==a?(a=a.replace("onet-ad-",""),"string"==typeof n&&""!==n&&onetAds.cmd.push(function(e){e.defineSlot(a,n)})):"string"==typeof n&&""!==n&&(n=n.replace("onet-ad-",""),e[n]=!0)});var t=[];for(var n in e)!0===e[n]&&t.push(n);return t}function I(e,t){for(var n=0;n<e.length;n++)t(e[n])}var k=!1,x=!1,M=!1,N=!1,z=[],H=[],O=!0;return{adsSetupEvent:n(T),onAd:C,setKeyValueSizeForAds:S,isAllowLazyA:i}}function n(e){var t=!1;return function(){!0!==t&&(t=!0,e())}}function a(e,t){function n(e){for(var r=e.childNodes,i=0;i<r.length;i++)!function(e){if(1===e.nodeType&&p(e,t))return void a.push(e);n(e)}(r[i])}if(e===document&&(e=document.documentElement),"function"==typeof e.querySelectorAll)return function(e){for(var t=[],n=0;n<e.length;n++)t.push(e[n]);return t}(e.querySelectorAll("."+t));var a=[];return n(e),a}function r(){return"undefined"==typeof sg_autorefreshcancel||!0!==window.sg_autorefreshcancel}function i(){try{var e,t;return e=document.createElement("p"),e.innerHTML="Onet.pl",e.style.cssText="font-size: 1.5rem",t=e.style.fontSize,t.indexOf("rem")>0}catch(e){return!1}}function o(e){return"string"==typeof e&&""!==e}function d(){function e(){try{if(null===t){var e=localStorage.getItem("sg.autorefresh.time2");t=e>+new Date-6e4,localStorage.removeItem("sg.autorefresh.time2")}}catch(e){t=!1}return t}var t=null;return{wasAutorefresh:e}}function s(e){function t(){"complete"!==document.readyState&&"loaded"!==document.readyState||n()}function n(){!1===a&&(a=!0,setTimeout(e,0))}var a=!1;t(),l(document,"DOMContentLoaded",n),l(window,"load",n),l(document,"readystatechange",t)}function l(e,t,n){e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)}function c(e){function t(t){return n(r)?e.getCrc32(r+t)%100:-1}function n(e){return!(!e||!e.match(a))}var a=/^[0-9]{24}\|?.*/,r=u("ea_uuid");return{getCounter:t}}function u(e){var t=document.cookie,n=t.indexOf(" "+e+"=");if(-1===n&&(n=t.indexOf(e+"=")),-1===n)t=null;else{n=t.indexOf("=",n)+1;var a=t.indexOf(";",n);-1===a&&(a=t.length),t=decodeURIComponent(t.substring(n,a))}return t}function f(e,t){function n(){a(r);var t=document.getElementsByTagName("body");t.length>0&&!1===e&&h(t[0],"noRem")}function a(n){try{if(!1===e)return;n>r&&null!==i&&(h(i,"bigMargin"),t.setKeyValueSizeForAds()),o.emit()}catch(e){}}var r=35,i=document.querySelector&&document.querySelector("html"),o=function(){function e(e){a.push(e)}function t(){for(var e=0;e<a.length;e++)n(a[e])}function n(e){setTimeout(e,0)}var a=[];return{onMarginChange:e,emit:t}}();return{setMargin:a,marginQuery:o,setMarginDefault:n}}function m(){document.write=function(){},void 0===window.console&&(window.console={}),window.console.log||(window.console.log=function(){}),window.console.dir,window.console.warn,window.console.info,window.console.error,window.console.time,window.console.timeEnd}function p(e,t){return void 0!==e.classList?e.classList.contains(t):RegExp("(\\s|^)"+t+"(\\s|$)").test(e.className)}function g(e,t){void 0!==e.classList?e.classList.remove(t):e.className=e.className.replace(RegExp("(\\s|^)"+t+"(\\s|$)")," ").replace(/^\s+|\s+$/g,"")}function h(e,t){void 0!==e.classList?e.classList.add(t):e.className+=(e.className?" ":"")+t}return function(){function e(){void 0!==window.dataLayer&&window.dataLayer.push({hplivetop:"true"})}function n(){void 0!==window.dataLayer&&window.dataLayer.push({hplivetop:"false"})}function a(t){var a=0,r=+new Date-864e5,i=!1;try{var o=localStorage.getItem("sg.hplivemove.wdg");if(o){if(o=JSON.parse(o),void 0===o.d||void 0===o.p||parseInt(o.p,10)<1)return void e();if(t&&(t=t.split(","),t.length)){for(var d=0;d<t.length;d++)if(void 0!==o.d[t[d]]&&o.d[t[d]].length>0)for(var s=o.d[t[d]],l=0;l<s.length;l++)s[l]-r>0&&a++;if(a<2){var c=document.getElementById("eventBox");if(c){var u=document.getElementById("hpLiveMovePlaceholder");u&&(u.appendChild(c),i=!0,n())}}}}}catch(e){}!1===i&&e()}function o(){L=!0;var e=document.querySelector(".mainPlayer");if(e){e.getAttribute("data-run-module")&&(e.removeAttribute("data-run-module"),g(e,"mainPlayer"),g(e,"mainPlayerYoutube"));var t=e.getAttribute("data-params-duv");t&&e.setAttribute("href",t)}var n=document.querySelector("meta[name='onet-o24editor']");n&&n.setAttribute("data-autoplay","0");for(var a=document.querySelector("[data-section=uptodateslider]"),r=0;r<3;r++){var i=document.getElementById("onet-ad-flat-player-branding-sg-"+(r+1));i&&i.parentNode.removeChild(i)}a&&a.setAttribute("data-autoplay","false")}function u(e){D=e}function v(){return D}function y(){!0!==B&&(B=!0,function(e,t,n,a,r){e[a]=e[a]||[],e[a].push({"gtm.start":(new Date).getTime(),event:"gtm.js"});var i=t.getElementsByTagName(n)[0],o=t.createElement(n);o.async=!0,o.src="//www.googletagmanager.com/gtm.js?id=GTM-P85SF2J",i.parentNode.insertBefore(o,i)}(window,document,"script","dataLayer"))}function w(){setTimeout(function(){try{var e=0,t=0,n="slow";if(window.performance){var a=window.performance.timing;e=a.loadEventEnd-a.navigationStart,t=a.domInteractive-a.navigationStart}e>0&&e<6e4&&t>0&&t<6e4&&(e<3e3?n="fast":e>=3e3&&e<=7e3&&(n="medium"),window.dataLayer.push({event:"speed",params:{ti:t,te:e,teDescription:n}}))}catch(e){}},3e3)}function _(e,t,n){function a(){var a="";!0!==r&&n&&(r=!0,a+='<div class="videoWrapper" style="position: relative; padding-bottom: 56.25%; height: 0;">',a+='<iframe style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" src="'+n+'" frameborder="0" allowfullscreen>',a+="</iframe>",a+="</div>",t?t.innerHTML="":e.innerHTML="",h(e,"mainPlayer"),h(e,"mainPlayerYoutube"),e.setAttribute("data-params-pinned","1"),e.removeAttribute("data-run-module"),t?t.innerHTML=a:e.innerHTML=a,window.sg_autorefreshcancel=!0)}var r=!1;return{init:a}}function A(e,t){if(!L&&e){var n=document.querySelector('[data-section="cyclermagazine"]');if(!n)return;if(n.querySelector){var a=document.getElementById("onet-ad-flat-player-branding-sg-2");if(!a){var r=document.createElement("div");r.setAttribute("class","onet-ad onetAdAuto"),r.setAttribute("id","onet-ad-flat-player-branding-sg-2"),r.setAttribute("data-slot","onet-ad-flat-player-branding-sg"),r.setAttribute("data-section","ad-flat-player-branding-sg-2"),r.setAttribute("data-opt-kwrd","big")}var i=n.querySelector(".itemBox_3_3");if(null===i){if(null===(i=n.querySelector(".itemBox_3_2")))return void console.log("module createBestYouTubeBackupPlayer: Problem ze znalezieniem elementu .itemBox_3_3/.itemBox_3_2");var o=i.querySelector(".itemMedia");if(o){var d=i.querySelector(".layerTextBottom");d&&(d.innerHTML='<span class="tWrp"><span class="title">'+t+"</span></span>");var s=i.querySelector(".newsSpec");s&&(s.innerHTML=""),a||n.insertBefore(r,n.firstChild);var l=_(i,o,e);l.init()}}else{if(!a){var c=n.querySelector(".sectionLineMax");c&&c.parentNode.insertBefore(r,c.nextSibling)}var l=_(i,null,e);l.init()}}}}function b(e){j.variantName=e}function C(){return j.variantName}function S(){return j}function E(){function e(e){if("a"===e.tagName.toLowerCase())return e;for(;(e=e.parentElement)&&"a"!==e.tagName.toLowerCase(););return e}if(!("undefined"!=typeof offline&&!0===offline||"undefined"!=typeof accStaticr&&void 0!==accStaticr.offline&&!0===accStaticr.offline)){var t=navigator.userAgent;if(t=t.toLowerCase(),t.indexOf("msie")>=0||t.indexOf("trident")>=0){var n=document.body;if(n){var a=function(t){var n=t.target||t.srcElement;(n=e(n))&&0===n.href.indexOf("http://")&&-1===n.href.indexOf("http://www.onet.pl/?url")&&(window.location.href="http://www.onet.pl/?url="+encodeURI(n.href))};n.addEventListener?n.addEventListener("click",a,!1):element.attachEvent&&n.attachEvent("onclick",a)}}}}function T(){setTimeout(function(){y()},2e3),O.marginQuery.onMarginChange(function(){void 0!==window.onetAds&&void 0!==window.onetAds.fire&&window.onetAds.fire("resize")}),O.setMarginDefault(),E()}m();var L=!1,B=!1,I=i(),k=d(),x=function(){function e(t,n){if(n.indexOf(" ")>=0)for(var a=n.split(" "),r=0;r<a.length;r++)e(t,a[r]);else void 0!==t.classList?t.classList.add(n):p(t,n)||(t.className+=(t.className?" ":"")+n)}function t(){return a(document.createDocumentFragment())}function n(e){return a(e)}function a(t){function n(e){var n=document.createElement(e);return t.appendChild(n),a(n)}function i(e){var n=document.createElement("div");n.innerHTML=e;for(var a=n.childNodes;a.length>0;)t.appendChild(a.item(0));return v}function o(e){return t.innerHTML=e,v}function d(e){return t.appendChild(e),v}function s(e){var n=document.createTextNode(e);return t.appendChild(n),v}function l(n){return e(t,n),v}function c(e){return r(t,e),v}function u(e){for(var n in e)t.setAttribute(n,e[n]);return v}function f(){return t}function m(e){var n;for(var a in e)n=e[a],"float"===a?(t.style.cssFloat=n,t.style.styleFloat=n):t.style[p(a)]=n;return v}function p(e){function t(e,t){return t?t.toUpperCase():""}return e.replace(RegExp("-([a-z0-9])","gi"),t)}function g(e,t,n){e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent&&e.attachEvent("on"+t,n)}function h(e,n){return g(t,e,n),v}var v={create:n,setHtml:o,addHtml:i,createText:s,setAttr:u,getDomElement:f,setCss:m,addClass:l,removeClass:c,appendChild:d,addEvent:h};return v}var r=g;return{createFragment:t,fromDom:n}}(),M=function(e){function t(e,t){for(var n=e.querySelectorAll(".itemMedia .itemCollage"),a=0;a<n.length;a++){var r=n[a].getAttribute(t);if(r){n[a].setAttribute("data-original",r);var i=n[a].querySelector("img");i&&i.setAttribute("src",r)}}}function n(e){var t={t_3_3:"itemBox_3_3 s1_490",t_3_2:"itemBox_3_2 s1_260",t_3_1:"itemBox_3_1 s1_155",t_lr_4_1:"itemBox_lr_4_1 s1_168"};return void 0!==t[e]?"itemBox "+t[e]:""}function a(e){var t={t_3_3:"https://ocdn.eu/images/pulscms/ODU7MDA_/274c1d6467082c3e6dfe9d09f4a6df6b.png",t_3_2:"https://ocdn.eu/images/pulscms/ODU7MDA_/274c1d6467082c3e6dfe9d09f4a6df6b.png",t_3_1:"https://ocdn.eu/images/pulscms/NTU7MDA_/d82c1d8478432c012f59203ae4478e61.png",t_lr_4_1:""};return void 0!==t[e]?t[e]:null}function r(t,n,a,r,i){var o=e.createFragment(),d=o.create(t).addClass("imageContainer");"string"==typeof n&&""!==n&&d.addClass(n);for(var s="cl-"+a.length,l=0;l<a.length;l++){var c=a[l],u=d.create(t).addClass("itemCollage").addClass(s);l===a.length-1&&u.addClass("lastCorrect"),void 0!==c.normal&&(u.setAttr({"data-run-module":"local/main.renderBoxLayzyLoadImg","data-original":c.normal}),void 0!==c.t_3_1&&u.setAttr({"data-original-t-3-1":c.t_3_1}),void 0!==c.t_3_2&&u.setAttr({"data-original-t-3-2":c.t_3_2}),void 0!==c.t_3_3&&u.setAttr({"data-original-t-3-3":c.t_3_3}))}if(a.length>1&&"string"==typeof r&&""!==r?d.create(t).addClass("imageGradient").create("img").setAttr({src:r}):1===a.length||setTimeout(function(){throw Error("Nieprawidłowa kombinacja parametrów w mosaic")},0),"string"==typeof i&&""!==i){var f=null;if("itemShortVideo"===i&&(f="videoIconBig"),"itemMediaGallery"===i&&(f="photoIconBig"),f){var m="http://www.w3.org/2000/svg",p=document.createElementNS(m,"svg");p.setAttribute("class",i);var g=document.createElementNS(m,"use");g.setAttributeNS("http://www.w3.org/1999/xlink","href","#"+f),p.appendChild(g),d.appendChild(p)}}return d.getDomElement()}function i(e,t){for(var n=[],a=0;a<e.length;a++)t in e[a]?n.push({normal:e[a][t],t_3_1:e[a].t_3_1,t_3_2:e[a].t_3_2,t_3_3:e[a].t_3_3}):"normal"in e[a]&&n.push({normal:e[a].normal});return n}function o(t,o){var d=a(o),s=n(o),l=e.createFragment(),c=l.create("a").addClass(s).setAttr({href:t.href,"data-uuid-ui":t.artuuid,"data-params-element-type":o});t.source&&t.source.image&&c.addClass("showAuthorOrSourceImage"),t.elId&&c.setAttr({id:t.elId});var u=r("span","itemMedia",i(t.images,o),d,t.type,null);if(c.appendChild(u),null!==t.prepend){var f=c.create("span").addClass("newsSpec").createText(t.prepend);"PILNE"===t.prepend&&f.addClass("newsSpec2"),"t_3_1"===o&&(!t.prepend||"PILNE"!==t.prepend&&"NA ŻYWO"!==t.prepend&&"TYLKO W ONECIE"!==t.prepend)&&f.addClass("newsSpec--ad-info")}var m=c.create("span").addClass("layerTextBottom");null!==t.prepend&&("PILNE"===t.prepend?m.addClass("layerTextBottomRed"):"TYLKO W ONECIE"!==t.prepend&&"NA ŻYWO"!==t.prepend||m.addClass("layerTextBottomYellow"));m.create("span").addClass("tWrp").create("span").addClass("title").createText(t.title);if(t.source&&t.source.image)m.create("span").addClass("imageContainer sourceImg horizontally").create("span").addClass("itemCollage cl-1 lastCorrect").create("img").setAttr({src:t.source.image});else{var p=m.create("span").addClass("info");t.source&&t.source.name?p.createText(t.source.name):t.author&&t.author.name&&p.createText(t.author.name)}return c.getDomElement()}function d(e){return o(e,"t_3_3")}function s(e){return o(e,"t_3_2")}function l(e){return o(e,"t_3_1")}function c(e){return o(e,"t_lr_4_1")}function u(e){h(e,"itemBox_3_1"),h(e,"s1_155"),g(e,"itemBox_3_3"),g(e,"s1_490"),t(e,"data-original-t-3-1"),e.setAttribute("data-params-element-type","t_3_1")}function f(e){h(e,"itemBox_3_3"),h(e,"s1_490"),g(e,"itemBox_3_1"),g(e,"s1_155"),t(e,"data-original-t-3-3"),e.setAttribute("data-params-element-type","t_3_3")}function m(e){h(e,"itemBox_3_1"),h(e,"s1_155"),g(e,"itemBox_3_2"),g(e,"s1_260"),t(e,"data-original-t-3-1"),e.setAttribute("data-params-element-type","t_3_1")}function p(e){h(e,"itemBox_3_2"),h(e,"s1_260"),g(e,"itemBox_3_1"),g(e,"s1_155"),t(e,"data-original-t-3-2"),e.setAttribute("data-params-element-type","t_3_2")}function v(e){h(e,"itemBox_3_3"),h(e,"s1_490"),g(e,"itemBox_3_2"),g(e,"s1_260"),t(e,"data-original-t-3-3"),e.setAttribute("data-params-element-type","t_3_3")}function y(e){h(e,"itemBox_3_2"),h(e,"s1_260"),g(e,"itemBox_3_3"),g(e,"s1_490"),t(e,"data-original-t-3-2"),e.setAttribute("data-params-element-type","t_3_2")}return{create_3_3:d,create_3_2:s,create_3_1:l,create_lr_4_1:c,convert_3_3_to_3_1:u,convert_3_1_to_3_3:f,convert_3_2_to_3_1:m,convert_3_1_to_3_2:p,convert_3_2_to_3_3:v,convert_3_3_to_3_2:y,createImageLayzy:r}}(x),N=function(){function e(e){for(var n=4294967295,a=0,r=e.length;a<r;++a)n=t[255&(n^e.charCodeAt(a))]^n>>8&16777215;return(4294967295^n)>>>0}var t=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];return{getCrc32:e}}(),z=c(N),H=t(M,S),O=f(I,H),D=160,j={variantName:"default"};return function(){0==k.wasAutorefresh()?window.dataLayer.push({autorefresh:"false"}):window.dataLayer.push({autorefresh:"true",autorefreshType:localStorage.getItem("sg.autorefresh.type")})}(),l(window,"load",y),l(window,"load",w),s(T),{setMargin:O.setMargin,onMarginChange:O.marginQuery.onMarginChange,wasAutorefresh:k.wasAutorefresh,remIsSupported:i,newsColumnInRight:function(){return!0},isFullHD:function(){return!1},isAllowAutorefresh:r,adsSetupEvent:H.adsSetupEvent,onAd:H.onAd,getConfig:S,setVariantName:b,getVariantName:C,crc32:N.getCrc32,mosaicElements:M,createBestYouTubeBackupPlayer:A,segmentTester:z,setHeaderSwitchHeight:u,getHeaderSwitchHeight:v,isAllowLazyA:H.isAllowLazyA,checkAndMoveHpLive:a,markHpLiveTop:e,addClass:h,removeClass:g,disableVideo:o}}()}();
        </script>
        
<script type="text/javascript">
    window.onetAds = {
        'async': 1,
        'target':'GLOWNA/NOWASG',
        'adSlots': [],
        'sgn_cookie': 0,
        'keywords':["BETA2","WARSZAWA","VER4","V2017"],
        'DV':'www',
        'clickmap': 1,
        'noDot': (nsglib.wasAutorefresh() ? 1 : 0),
        'no_gemius': 1,
        'kropka': {'DV': 'WARSZAWA'},
        'ver': 2,
        'eventsapi': true,
        'time': {},
        'startTime': (new Date()).getTime(),
        'policy' : 1,
        'whitelistId' : 'onet-ad-flat-gigaboard1',
        'lazy': 1,
        'lazyPercentage': 500,
        'cmd': []
    };
</script>
        
<script id="adsinit" data-original="//sgqcvfjvr.onet.pl/YnVpbGQvezlza2x0YTRTfWRsQXBpL2RsLmxpYntOTWFzX0ZvOH0ubWluLmpz" type="text/javascript">
/* <![CDATA[ */
!function(a){if(a)try{"undefined"!=typeof $onet||a.injected?(a.cmd=a.cmd||[]).push(function(a){a.logDebug("dl.lib.js is already loaded!")}):(a.injected=1,function(a){var b=function(){this.version="20190107_1130"};a.injectedVersion=(new b).version}(window.dlApi||window.onetAds),function(a){if(void 0!==a)if(void 0===a.AL){a.AL=1,a.adbCsrSubdomain="k266d5zsl",a.cmd=a.cmd||[],a.fncs=["addSlot","show","on","$remove","addKeyword","addCss","addCallback"];for(var b=0;b<a.fncs.length;b++)!function(b){a[a.fncs[b]]=function(){var c=arguments;a.cmd.push(function(a){a[a.fncs[b]].apply(a,c)})}}(b);var c,d=document.getElementById("adsinit");d&&(c=d.getAttribute("data-original"));var e=document.createElement("script");e.async=!0,function(){var b,c=[],d=function(a){if(!b){b=[a,Date.now()-e];for(var d;d=c.shift();)d.apply(null,b)}},e=Date.now();a.isError=function(a){b?a.apply(null,b):c.push(a)},a.onload=function(){d(!1)},a.onerror=function(){d(!0)}}(),e.onload=a.onload,e.onerror=a.onerror,e.src=c||"//sgqcvfjvr.onet.pl/YnVpbGQvezlza2x0YTRTfWRsQXBpL2RsLmxpYntOTWFzX0ZvOH0ubWluLmpz",document.getElementsByTagName("head")[0].appendChild(e)}else console.error("dl.boot.min.js is already loaded!");else console.error("dlApi is undefined, Aborted!")}(window.onetAds||window.dlApi),function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){return e(b[g][1][a]||a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(require,a,b){var c=function(){var a=[],b="",c=[],d=[],e=function(b){a=b},f=function(a){b=a},g=function(a){c=a},h=function(a,d){for(var e=0;e<c.length;++e)c[e]&&c[e].postMessage&&c[e].postMessage(a+"."+d,b)},i=function(a,b){d[a]=b},j=function(a){d[a]=!1},k=function(b){var c=!1,e="",f="";for(var g in a){if("*"==a[g]){c=!0;break}if(b&&b.origin&&b.origin==a[g]){c=!0;break}}return!!c&&!!b.data&&(e=b.data.toString().split("."),void 0!==e[0]&&(f=e[0]),e=e.splice(1).join("."),void("function"==typeof d[f]&&d[f](e)))};return window.addEventListener?window.addEventListener&&window.addEventListener("message",k):window.attachEvent&&window.attachEvent("onmessage",k),{setAllowedOrigins:e,setTargetOrigin:f,setTargetWindows:g,post:h,bind:i,unbind:j}};a.exports=c},{}],2:[function(require,a,b){var c=function(){for(var a=["admain","onet-ad-top","b028","onet-ad-flat-test","sponsUrl","ks_breaking_news","nitro-block","c11865","softonet","googleAdsCont","advertisments","widget-shop","adnp","pixad-box"],b=[],c=0;c<a.length;++c){var d=decodeURIComponent(a[c]);if(!document.getElementById(d)){var e=document.createElement("div");e.id=d,e.setAttribute("style","width:100px !important;height:100px !important;position:absolute !important;left:-10000px !important;top:-1000px !important"),e.setAttribute("class","pub_300x250 adsbygoogle pub_300x250m pub_728x90 text-ad textAd text_ad text_ads text-ads text-ad-links onet-ad adsense autopromoapp infoCloud addthis_toolbox miniSlot lazyContent header-adblock onnetwork-video ads sliderads ppa-slot ad linkSponsorowany adform-slot widget-ads-content cg-template reklama ad-"),document.body.appendChild(e),b.push(e)}}return b},d=function(a,b){var d=!1,e=5,f=function(){var g=c();setTimeout(function(){for(var c=!1,h=0;h<g.length;h++){var i=g[h];if(null!==a.document.body.getAttribute("abp")||null===i.offsetParent||0==i.offsetHeight||0==i.offsetLeft||0==i.offsetTop||0==i.offsetWidth||0==i.clientHeight||0==i.clientWidth)c=!0;else if(void 0!==a.getComputedStyle){var j=a.getComputedStyle(i,null);"none"!=j.getPropertyValue("display")&&"hidden"!=j.getPropertyValue("visibility")||(c=!0)}i.parentNode&&i.parentNode.removeChild(i)}--e,c&&e?setTimeout(f,45):d||(d=!0,b(c))},5)};setTimeout(f,50)};a.exports={createAdblockElements:c,detect:d}},{}],3:[function(require,a,b){var c=require("get-main-domain"),d=require("get-style"),e=require("add-css"),f=require("get-ab-segment"),g="whitelistPremium",h="whitelistContent",i=5e3,j="http://pomoc.onet.pl/46,4214,faq_serwis.html",k="Reklamy nie są takie złe... To dzięki nim masz darmowy dostęp do naszych najlepszych treści. Prosimy, odblokuj wyświetlanie reklam w naszym serwisie.",l=k.split(/\s+/);l.index=0;var m=function(a,b){if(b.document.referrer&&(b.document.referrer==b.location.href||!/^\w+:\/\//i.test(b.document.referrer)))return void s();var c=a.baseUrl.replace(/^((?:\w+:)?\/\/[^\/?&#]+).*/,"$1"),d=b.document.createElement("iframe");x(b,"message",function(d){(d.origin||d.originalEvent.origin)==c&&"noadp"==d.data&&(y(a,"Adblock_whitelist","refresh"),b.location=b.location.href)}),d.width=0,d.height=0,d.frameborder=0,b.document.body.appendChild(d),d.src=[a.baseUrl,"MDI2NjA0MS9idWlsZC9kbEFwaS9kbC53aGwubWlu",".","html","?","v=",parseInt((new Date).getTime()/1e7)].join("")},n=function(a,b,c,d){z(a,function(a){a.fire("whitelist")}),u(a,c),o(b),a.adsNoBanner=!0,d||m(a,b)},o=function(a){e("."+g+",."+g+" *{text-decoration:none !important}");var b=function(){for(var c=document.querySelectorAll("."+g+":not([data-"+g+"])"),d=c.length-1;d>=0;--d)q(a,c[d]).setAttribute("data-"+g,1);for(var d=0,c=document.querySelectorAll("."+h);d<c.length;++d)p(a,c[d]);setTimeout(b,i)};b()},p=function(a,b){b.parentNode&&b.parentNode.removeChild(b)},q=function(a,b){if(b.hasAttribute("data-"+g))return b;var c=b.nodeName.toLowerCase(),e=b.getAttribute("data-run-module");if(["img","canvas","svg","math","iframe","video","object","embed","audio"].indexOf(c)>=0||"embeddedapp/main.onettvplayer"==e||"local/main.player"==e||"pulsembed/pulsembed.init"==e&&b.innerHTML.indexOf("//onet.tv/")>=0||"embeddedapp/main.app"==e&&(""+b.getAttribute("data-params")).indexOf("//onet.tv/")>=0||/^mvp:/.test(b.id)){for(var f=a.document.createElement("div"),h=d(b),i=0;i<h.length;++i){var j=h[i];f.style[j]=h[j]}if(f.style.display="inline-block",["img","canvas","svg","math"].indexOf(c)>=0)f.style.background="#e2e3e7 url(//mastt.ocdn.eu/MDA_/74f6b5ce7ae8d0bdfce96970fc71bd47.jpg) no-repeat center",f.style.backgroundSize="contain";else{f.style.background="#e2e3e7 url(//mastt.ocdn.eu/MDA_/42f492f4c603c2817813a90dc951904c.jpg) no-repeat center";var k=b.getAttribute("data-height-hint");k&&(f.style.paddingBottom=k)}return b.parentNode.replaceChild(f,b),f}var f=b.cloneNode(!0);if(f.href){f.removeAttribute("href"),f.onclick=function(){};for(var i=0,m=["addEventListener","attachEvent"];i<m.length;++i){var n=m[i];f[n]&&(f[n]=function(){})}}if(f.attributes)for(var i=0,o=f.attributes;i<o.length;++i)/^data-/i.test(o[i].name)&&f.removeAttribute(o[i].name);b.parentNode.replaceChild(f,b),b=f;for(var p=b.firstChild;p;){switch(p.nodeType){case 1:p=q(a,p);break;case 3:if(/^\s*$/.test(p.nodeValue))break;var r="",s=0,t=d(p.parentNode).color||"#000";do{var u=l[l.index];r+='<span style="display:inline;background:'+t+";color:"+t+'">'+u+"</span> ",s+=u.length+1,l.index=++l.index%l.length}while(s<p.nodeValue.length);var f=a.document.createElement("span");f.style.display="inline",f.style.opacity=.3,f.innerHTML=r,p.parentNode.replaceChild(f,p),p=f}p=p.nextSibling}return b},r=function(){return document.querySelectorAll('[href^="abp:"]:not(.whitelistLink)')},s=function(){for(var a=0,b=r();a<b.length;++a){var c=b[a];c.href=j,c.target="_blank"}},t=function(a){var b=a.navigator.userAgent.toLowerCase();if(b.indexOf("msie")>=0||b.indexOf("trident")>=0)return void s();for(var c,d=r(),e=document.querySelectorAll(".whitelistLink"),f=0,g=Math.min(d.length,e.length);f<g;++f){var h=d[f],i=e[f];for(i.removeAttribute("class"),c=0;c<h.attributes.length;++c){var j=h.attributes[c];i.setAttribute(j.name,j.value)}for(c=0;c<h.childNodes.length;++c)i.appendChild(h.childNodes[c]);h.parentNode.replaceChild(i,h)}},u=function(a,b){a.time.TWHL=b||"default",y(a,"Adblock_info","show")},v=function(a){var b=c(),d="abp:subscribe?location=http%3A%2F%2Flib.onet.pl%2Fs.csr%2Fwhitelist%2F"+encodeURIComponent(b)+".txt";return a&&(d+="%3Ftitle%3D"+encodeURIComponent(a)),d+="&title="+encodeURIComponent(a||b)},w=function(a){return a.inframe||1!=a.checkAdBlock},x=function(a,b,c){a.addEventListener?a.addEventListener(b,c,!1):a.attachEvent&&a.attachEvent("on"+b,c)},y=function(a,b,c){z(a,function(a){a.isAdblockDetected(function(){var d={event:"ga.send",ga:{hitType:"event",eventCategory:b,eventAction:c,eventLabel:a.time.TWHL,eventValue:void 0,nonInteraction:!0,dimension1:"1",dimension2:"1",dimension99:"0",segRand:a.seg_rand,segAb:f(a),adp:"1",whitelist:"1",whl:"0"}};if("undefined"!=typeof EventsApi){var e=EventsApi.getTukanID();e&&(d.ga.userId=e)}(window.dataLayer=window.dataLayer||[]).push(d)}),a.on("gaReady",function(a,d){var e=this;d.set("dimension1","1"),d.set("dimension2","1"),d.set("dimension99","0"),d.send("event",b,c,e.time.TWHL,{nonInteraction:!0})})})},z=function(a,b){(a.cmd=(window.dlApi||window.onetAds).cmd||[]).push(b)};a.exports={onWhitelist:n,transformContent:o,transformWhitelistLinks:t,getWhitelistLink:v,isDetectionDisabled:w,callAsync:z,appendWhitelistChecker:m,reportAdblock:u}},{"add-css":4,"get-ab-segment":6,"get-main-domain":10,"get-style":11}],4:[function(require,a,b){a.exports=function(a,b){var b=b||document,c=b.createElement("style");return c.type="text/css",c.styleSheet?c.styleSheet.cssText=a:c.innerHTML=a,b.getElementsByTagName("head")[0].appendChild(c),c}},{}],5:[function(require,a,b){var c=function(a){var b=document.cookie.match("(^|;) ?"+a+"=([^;]*)(;|$)");return b?unescape(b[2]):null};a.exports={get:c}},{}],6:[function(require,a,b){var c=require("dl-cookie");a.exports=function(a){if(void 0!==a.seg_ab)return a.seg_ab;var b,d,e,f=c.get("onet_ad_lu")||c.get("ea_uuid");try{if(b=parseInt(f.substring(10,12),10),d=parseInt(f.substring(12,14),10),e=(60*b+d)%100,isNaN(e))throw new Error("NaN")}catch(a){e=Math.floor(100*Math.random())}return a.seg_ab=e,e}},{"dl-cookie":5}],7:[function(require,a,b){a.exports=function(a){var b=document.createElement("a");return b.href=a,b}},{}],8:[function(require,a,b){a.exports=function(a){var a=a||window,b=a.document,c=0,d=0;return b.documentElement&&(b.documentElement.clientWidth||b.documentElement.clientHeight)?(c=b.documentElement.clientWidth,d=b.documentElement.clientHeight):"number"==typeof a.innerWidth?(c=a.innerWidth,d=a.innerHeight):b.body&&(b.body.clientWidth||b.body.clientHeight)&&(c=b.body.clientWidth,d=b.body.clientHeight),{width:c||a.screen.width,height:d||a.screen.height}}},{}],9:[function(require,a,b){a.exports=function(){return window.onetAds||window.dlApi}},{}],10:[function(require,a,b){var c={pl:["com","net","org","aid","agro","atm","auto","biz","edu","gmina","gsm","info","mail","miasta","media","mil","nieruchomosci","nom","pc","powiat","priv","realestate","rel","sex","shop","sklep","sos","szkola","targi","tm","tourism","travel","turystyka"],hu:["co","info","org","priv","sport","tm","2000","agrar","bolt","casino","city","erotica","erotika","film","forum","games","hotel","ingatlan","jogasz","konyvelo","lakas","media","news","reklam","sex","shop","suli","szex","tozsde","utazas","video"],rs:["ac","co","edu","in","org"]};a.exports=function(a){a=arguments.length?a.toLowerCase():window.location.hostname;var b=a.split(".");if(b.length<3)return a;if(4==b.length){for(var d=0,e=!0;d<b.length;++d){var f=parseInt(b[d],10);if(isNaN(f)||""+f!=b[d]||f<0||f>255){e=!1;break}}if(e)return a}var g=b[b.length-1];return g in c&&c[g].indexOf(b[b.length-2])>=0?b.slice(-3).join("."):b.slice(-2).join(".")}},{}],11:[function(require,a,b){if(window.getComputedStyle)var c=function(a){return window.getComputedStyle(a)};else if(window.document.documentElement.currentStyle)var c=function(a){return a.currentStyle};else var c=function(){return{length:0}};a.exports=c},{}],12:[function(require,a,b){a.exports={check:function(){try{return window.self!==window.top}catch(a){return!0}}}},{}],13:[function(require,a,b){try{var c=JSON.parse("[{\"target\":\"^GLOWNA/NOWASG/\",\"slots\":[\"top2\",\"flat-boxleft2\",\"flat-boxright2\",\"flat-boxright1\"],\"src\":\"MTAyL2J1aWxkL3dobC91YmN0Lmpz\",\"segment\":[90,100]},{\"target\":\"^BIZNES/\",\"fields\":{\"bgColor\":\"#f9b700\"},\"segment\":[0,10]},{\"target\":\"^BIZNES/\",\"slots\":[\"top\",\"right\"],\"src\":\"MTAyL2J1aWxkL3dobC91YmN0Lmpz\",\"segment\":[10,100]},{\"target\":\"^(WIADOMOSCI|SPORT|MOTO|FILM|MUZYKA|FACET|KOBIETA|URODA|MODA|ZDROWIE|SLUB|DZIECKO|DOM)/\",\"fields\":{\"bgColor\":\"#f9b700\"},\"segment\":[0,90]},{\"target\":\"^(WIADOMOSCI|SPORT|MOTO|FILM|MUZYKA|FACET|KOBIETA|URODA|MODA|ZDROWIE|SLUB|DZIECKO|DOM)/\",\"slots\":[\"top\"],\"src\":\"MTAyL2J1aWxkL3dobC91YmN0Lmpz\",\"segment\":[90,100]},{\"target\":\"^RASP_(AUTOSWIAT|KOMPUTERSWIAT)/\",\"fields\":{\"bgColor\":\"#ef1b22\"},\"segment\":[0,90]},{\"target\":\"^RASP_(AUTOSWIAT|KOMPUTERSWIAT)/\",\"slots\":[\"top\"],\"src\":\"MTAyL2J1aWxkL3dobC91YmN0Lmpz\",\"segment\":[90,100]},{\"target\":\"^RASP_FAKT/\",\"fields\":{\"bgColor\":\"#f01616\"},\"segment\":[0,90]},{\"target\":\"^PLEJADA/\",\"fields\":{\"bgColor\":\"#ff035c\"},\"segment\":[0,90]},{\"target\":\"^PLEJADA/\",\"slots\":[\"top\"],\"src\":\"MTAyL2J1aWxkL3dobC91YmN0Lmpz\",\"segment\":[90,100]},{\"target\":\"^VOD/(?!(exclusive:)?PREMIUM).+?/kwrd=(?!(.+?\\\\+)?WHLNOTEST(\\\\+|$))(DETAL|.*\\\\+DETAL)(\\\\+|$)\",\"fields\":{\"bgColor\":\"#2fd6ff\"},\"segment\":[0,90]},{\"target\":\"^NOIZZ/\",\"fields\":{\"bgColor\":\"#00f3a3\"},\"segment\":[0,90]},{\"target\":\"^PORTALWIEDZY/(exclusive:)?SCIAGA/\",\"slots\":[\"mobium\"],\"fields\":{\"bgColor\":\"#f9b700\"},\"src\":\"YnVpbGQvd2hsL3VibWIuanM%3D\"},{\"target\":\"/kwrd=(WHLTEST|.*\\\\+WHLTEST)(\\\\+|$)\"}]")}catch(a){}try{var d=JSON.parse("{\"capping\":{\"default\":3},\"referrers\":[\"facebook.com\",\"google.com\",\"google.pl\"]}")}catch(a){}require("whitelist")(window,c,d)},{whitelist:16}],14:[function(require,a,b){var c=document.location&&document.location.protocol&&"https:"==document.location.protocol?"https://":"http://",d="//sgqcvfjvr.onet.pl/",e=/^(?:\w+:)?\/\//;d=c+(e.test(d)?d.replace(e,""):"lib.onet.pl/s.csr/"),a.exports={proto:c,base:d}},{}],15:[function(require,a,b){var c=require("MvpMessageBus"),d=require("in-iframe"),e=require("onet-url"),f=require("get-dl-api"),g=require("adblock-whitelist"),h=!1,i=c(),j="https:"==window.location.protocol?"https:":"http:",k=[j+"//onet.tv",j+"//"+window.location.host,j+"//pulsembed.eu"],l=!1,m=function(){var a=r();i.setTargetWindows(a)},n=function(){d.check()||(h=!0,m(),i.post("adblockApi",JSON.stringify({detected:!0})))},o=function(a){k=a,i.setAllowedOrigins(k)},p=function(a,b){return(" "+a.className+" ").indexOf(" "+b+" ")>-1},q=function(a,b){return!(!a||!a.src)&&a.src.indexOf(b)>-1},r=function(){var a=[],b=null,c=[],d=document.getElementsByTagName("iframe");if(d)for(var e in d)b=d[e],(p(b,"mvp-embed")||q(b,"pulsembed.eu")||q(b,"onet.tv"))&&b&&b.contentWindow&&a.push(b.contentWindow);return a.length<=0&&(c=document.querySelectorAll(".mvp"))&&c.length&&a.push(window),a};a.exports={init:function(){o(k),i.setTargetOrigin("*"),i.bind("adblock",function(a){if(!d.check()){var b=f();if(m(),"detect"==a&&h)i.post("adblockApi",JSON.stringify({detected:h}));else if(0===a.indexOf("adblockInfo"))if(0==l){l=!0;var c=document.createElement("script");window.document.getElementsByTagName("head")[0].appendChild(c),c.src=[e.base,"build","/","whl","/","video",".","js"].join("")}else try{b.displayWhitelistVideoBoard()}catch(a){}else if(0===a.indexOf("adblockVideoStart")){var j=a.substr(18,a.length);j&&(g.reportAdblock(b,j),13!=b.time.TADP&&g.appendWhitelistChecker(b,window))}}})},setAllowedOrigins:o,sendBlockedToFrames:n}},{MvpMessageBus:1,"adblock-whitelist":3,"get-dl-api":9,"in-iframe":12,"onet-url":14}],16:[function(require,a,b){var c=require("add-css"),d=require("dl-cookie"),e=require("onet-url"),f=require("adblock-detect"),g=require("adblock-whitelist"),h=require("get-style"),i=require("get-client-size"),j=require("get-main-domain"),k=require("whitelist-video"),l=require("get-address"),m=require("get-dl-api"),n=require("get-ab-segment"),o="Reklamy<br /> nie są takie złe...",p="To dzięki nim masz <strong>darmowy</strong> dostęp<br /> do&nbsp;naszych <strong>najlepszych treści</strong>.<br /> Prosimy, <strong>odblokuj wyświetlanie reklam</strong><br /> w&nbsp;naszym serwisie.",q="<strong>OK!</strong>",r="http://pomoc.onet.pl/46,4214,faq_serwis.html",s=function(a,b,c){if(!b.targeting){var d,e=a.location.search+a.location.hash,f=/[?&#](?:test_(site|area|kwrd))=([^?&#]+)/g;for(b.targeting={};d=f.exec(e);)b.targeting[d[1]]=d[2]}var g=m(),h=(g.target||"").split("/"),i=(g.keywords||[]).join("+");b.targeting.site&&(h[0]=b.targeting.site),b.targeting.area&&(h[1]=b.targeting.area),g.whitelist&&(i+=(i?"+":"")+"whitelist"),b.targeting.kwrd&&(i+=(i?"+":"")+b.targeting.kwrd);try{return new RegExp(c,"i").test(h.join("/")+"/kwrd="+i)}catch(a){return!1}},t=function(a,b){try{for(var c=0;c<2;++c)if(b[c]=parseFloat(b[c]),isNaN(b[c]))return!1}catch(a){return!1}return void 0===a.segment&&(a.segment=n(m())),a.segment>=b[0]&&a.segment<b[1]},u=function(a){var b=m();a=a||{};var d=document.createElement("link");d.href="//ocdn.eu/files/mastt/ZmE7MDA_/462db16f872216014458184a85bd38e3.css",d.type="text/css",d.rel="stylesheet",d.onload=function(){setTimeout(function(){var a=h(document.querySelector(".contentInfo .ok")).width;void 0!==a&&(a=parseFloat(a)/2+6,c(".contentInfo .ok.itt{margin-left:-"+a+"px;visibility:visible}.contentInfo .ok.itt a{visibility: visible !important}.contentInfo .ok.itt:hover{margin-left:-"+(a+10)+"px}"))},700)},document.getElementsByTagName("head")[0].appendChild(d);var e='<div class="headerBar"'+(a.bgColor?' style="background-color:'+a.bgColor+'"':"")+'></div><div class="statementBox"><div class="item"><p class="headline">'+(a.title||o)+'</p><p class="text">'+(a.text||p)+'</p><div class="ok itt"><a class="ok-click" href="'+g.getWhitelistLink()+'">'+(a.clickText||q)+'</a></div><div class="info">Kliknij <a href="'+g.getWhitelistLink()+'" class="button">'+(a.clickText||q)+'</a> a później odśwież stronę.</div><p class="instructions">Nie działa? Skorzystaj z <a target="_blank" href="'+(a.clickInstruction||r)+'">instrukcji</a>.</p></div></div>',f=document.createElement("div");f.className="contentInfo",f.innerHTML=e;var i=document.body;b.whitelistId&&(c(".contentInfo{position:static}.contentInfo .statementBox{background:transparent}.contentInfo .item{margin-top:0}"),i=document.getElementById(b.whitelistId),i.innerHTML=""),i.appendChild(f)},v=function(a,b,c){if(!(b.whitelisted||(b.whitelisted=!0,i(a).width<550||D(a,b)))){var d=m(),e=K(a,b);g.onWhitelist(d,a,u(e.fields),c),a.navigator.userAgent.toLowerCase(),g.transformWhitelistLinks(a),g.callAsync(d,function(a){a.fire("flat-whitelist"," ","",[],{},{})})}},w=function(a,b,c){if(!b.onDetectedFired&&(b.onDetectedFired=!0,!J())){k.sendBlockedToFrames();var d=K(a,b);if(d){var e=m();if(!d.src)return g.callAsync(e,function(d){d.on("fetchAdsError",function(d,e,f){var g=this;f<1e3&&(!g.adp||"adp"==e)&&v(a,b,c)}),d.on("fetchTplError",function(d,e,f,g){g&&"flat-whitelist"==g.slot&&v(a,b,c)}),d.on("fetchOnReady",function(){this.slot2slot["flat-whitelist"]||v(a,b,c)})}),void(e.isError&&e.isError(function(d){d&&v(a,b,c)}));var f=function(){var e=m();g.callAsync(e,function(a){a.unblockSlots=d.slots||["top","left"],a.on("beforeAdsFetch",function(){for(var a=this,b=[],c=0;c<a.toFetch.length;++c){var d=a.toFetch[c];a.unblockSlots.indexOf(d.slot)<0&&b.push(d)}a.toFetch=b})}),document.getElementsByTagName("head")[0].appendChild(I(document.createElement("script"),e.baseUrl+d.src,function(d){d&&v(a,b,c)}))};if(!e.isError)return void f();e.isError(function(d){d?v(a,b,c):f()})}}},x=function(a,b){if(!a||!a.length)return!1;if(-1!=b.indexOf(a))return!0;for(var c in b)if(b.hasOwnProperty(c)){var d="."+b[c],e=a.lastIndexOf(d);if(e>=0&&e==a.length-d.length)return!0}return!1},y=function(){var a=d.get("onet_ad_whl");return a&&(a=parseInt(a,10),!isNaN(a))?a:0},z=function(a){var b=a.document.referrer;return!(!b||!b.length)&&l(b).hostname},A=function(a){return/[?&]utm_source=(fb|onetsg_fb_viasg)([&#]|$)/.test(a.location.search)},B=function(a,b){var c=z(a);return x(c,b)||A(a)},C=function(a,b){if(A(a)&&x(z(a),["facebook.com"]))return!0;var c=y(),d="onet_ad_whl="+(c+1)+"; path=/",e=j(),f="default",g=b[e]||b[f]||3,h=new Date;return h.setTime(h.getTime()+2592e6),d+="; expires="+h.toUTCString(),e&&(d+="; domain=."+e),!(c>=g||(a.document.cookie=d,0))},D=function(a,b){var c=b.noWhitelistConfig;return!(!c||!c.referrers)&&B(a,c.referrers)&&C(a,c.capping)},E=function(a,b){L(),f.detect(a,function(c){if(c)w(a,b);else if(b.postdetected)w(a,b,!0);else if(F(a)){b.notDetected=!0;var d=document.createElement("script");d.src="//onet.hit.gemius.pl/xgemius.js",document.getElementsByTagName("head")[0].appendChild(d)}g.callAsync(m(),function(a){a.fire("detectAdblock",c)})})},F=function(a){try{if("WebSocket"!==a.WebSocket.name||a.Object.getOwnPropertyDescriptor(a.Element.prototype,"shadowRoot").get.toString().indexOf("[native code]")<0||0===a.RTCPeerConnection.name.indexOf("bound")||0===a.webkitRTCPeerConnection.name.indexOf("bound"))return!0}catch(a){}return!1},G=function(a,b,c){return function(d){if(d){if(void 0===b.blockedResources)b.blockedResources=[c];else{if(!(b.blockedResources.indexOf(c)<0))return;b.blockedResources.push(c)}2==b.blockedResources.length&&(b.postdetected=!0,b.notDetected&&w(a,b,!0),g.callAsync(m(),function(a){a.fire("adblockPostdetected")}))}}},H=function(a,b){var c=m();if(!g.isDetectionDisabled(c)&&F(a)){var d=document.createElement,e=function(c,d){/(^|\.)hit\.gemius\.pl$/i.test(l(d).hostname)&&I(c,G(a,b,"gemius"))};document.createElement=function(a){var b=d.apply(this,arguments);if("script"==(""+a).toLowerCase()){var c=b.setAttribute;try{Object.defineProperty(b,"src",{configurable:!0,enumerable:!0,get:function(){var a=document.createElement("a");return a.href=b.getAttribute("src"),a.href},set:function(a){e(b,a),c.call(b,"src",a)}})}catch(a){return b}b.setAttribute=function(a,d){return"src"==(""+a).toLowerCase()&&e(b,d),c.apply(b,arguments)}}return b},g.callAsync(c,function(c){c.on("fetchAdsError",function(c,d,e){e<1e3&&G(a,b,"csr")(!0)})}),c.isError&&c.isError(function(c,d){c&&d<500&&G(a,b,"init")(!0)})}},I=function(a,b,c){arguments.length<3&&(c=arguments[arguments.length-1]);var d=!1,e=function(a){d||(d=!0,c(a))},f=function(){e(!1)},g=function(){e(!0)};return a.addEventListener?(a.addEventListener("load",f,!1),a.addEventListener("error",g,!1)):a.attachEvent&&(a.attachEvent("onload",f),a.attachEvent("onerror",g)),setTimeout(f,500),arguments.length>2&&(a.src=b),a},J=function(){var a=m();return a.adsNoBanner||!a.injected},K=function(a,b){if(!b.hasOwnProperty("currentConfig")){b.currentConfig=null;var c=b.whitelistConfig;if(c)for(var d=0;d<c.length;++d){var e=c[d];if(s(a,b,e.target)&&(!e.segment||t(b,e.segment))){b.currentConfig=e;break}}}return b.currentConfig},L=function(){for(var a=0,b=g.getWhitelistLink();a<2;++a){var c=document.createElement("a");c.className="whitelistLink",c.href=b,document.body.appendChild(c)}};a.exports=function(a,b,c){var d={whitelistConfig:b,noWhitelistConfig:c};k.init();var f=m();f.baseUrl=e.base,void 0===f.checkAdBlock&&(f.checkAdBlock=1),f.time||(f.time={}),document.addEventListener?document.addEventListener("DOMContentLoaded",function(){document.removeEventListener("DOMContentLoaded",arguments.callee,!1),E(a,d)},!1):document.attachEvent&&document.attachEvent("onreadystatechange",function(){"complete"===document.readyState&&(document.detachEvent("onreadystatechange",arguments.callee),E(a,d))}),H(a,d)}},{"adblock-detect":2,"adblock-whitelist":3,"add-css":4,"dl-cookie":5,"get-ab-segment":6,"get-address":7,"get-client-size":8,"get-dl-api":9,"get-main-domain":10,"get-style":11,"onet-url":14,"whitelist-video":15}]},{},[13]))}catch(a){setTimeout(function(){throw a},0)}else console.log("dlApi is undefined, "+location)}(window.onetAds||window.dlApi);
/* ]]> */
</script><script async="" src="onet_pliki/YnVpbGQvezlza2x0YTRTfWRsQXBpL2RsLmxpYntOTWFzX0ZvOH0ubWluLmpz.js"></script>

        <script type="text/javascript">
            nsglib.setVariantName('new_structure');
            nsglib.adsSetupEvent();
        </script>
        






<script type="text/javascript" data-amd-debug="true" data-amd-preload="uststd/uststd,dailyneeds/main,local/main" data-static-amd-map="{&quot;dailyneeds&quot;:&quot;https://ocdn.eu/paas-static/template-engine/b52fe683ef2bb2ca49575e31c3a455ed/build&quot;,&quot;unimenu&quot;:&quot;https://ocdn.eu/paas-static/moto/c8c40255b07dc5381c1a72db149b961a/build&quot;,&quot;uss&quot;:&quot;https://ocdn.eu/paas-static/template-engine/2feea7833706f58957aabdc92a254eab/build&quot;,&quot;usimenu&quot;:&quot;https://ocdn.eu/paas-static/template-engine/f887ddc9bceaaf47008c9fa4cc50a451/build&quot;,&quot;vendor&quot;:&quot;https://ocdn.eu/paas-static/template-engine/80fd96e87040c8be7797253f5d10604c/build&quot;,&quot;uststd&quot;:&quot;https://ocdn.eu/paas-static/template-engine/a6c0cff4926358865a5a02a938f033e4/build&quot;,&quot;portalnavtop&quot;:&quot;https://ocdn.eu/paas-static/template-engine/0ba1d4667be42faf9173437d64ab8d61/build&quot;,&quot;tabele&quot;:&quot;https://ocdn.eu/paas-static/template-engine/89e9cb54606c95b7ee13690ccb7de251/build&quot;,&quot;quizapp&quot;:&quot;https://ocdn.eu/paas-static/template-engine/4bf940d37e48f3548c375c519c69e1da/build&quot;,&quot;pulsembed&quot;:&quot;https://ocdn.eu/paas-static/template-engine/01c5a0b73058bcde941d24e4fcd69b78/build&quot;,&quot;onettv&quot;:&quot;https://ocdn.eu/paas-static/template-engine/754474dab717d6c160b2e63d1ca8ea14/build&quot;,&quot;layerglass&quot;:&quot;https://ocdn.eu/paas-static/template-engine/05afb91f43a4cacccad6959d895ac7ed/build&quot;,&quot;portalbar&quot;:&quot;https://ocdn.eu/paas-static/template-engine/0ba1d4667be42faf9173437d64ab8d61/build&quot;,&quot;newslivestream&quot;:&quot;https://ocdn.eu/paas-static/template-engine/c521d70663e169ce4f8f4960a2bf333e/build&quot;,&quot;gallerysimple&quot;:&quot;https://ocdn.eu/paas-static/template-engine/d0aff1c484e6f5c2504be098bf180dd4/build&quot;,&quot;multigallery&quot;:&quot;https://ocdn.eu/paas-static/template-engine/4c32e822c37f265934ab9096e180c6c6/build&quot;,&quot;galleryab&quot;:&quot;https://ocdn.eu/paas-static/template-engine/d5219d9db429610e45600d33a0ff3939/build&quot;,&quot;embeddedapp&quot;:&quot;https://ocdn.eu/paas-static/template-engine/fb9ef11872ac90dcc72d249211fdb052/build&quot;,&quot;eventsapp&quot;:&quot;https://ocdn.eu/paas-static/template-engine/50028bdd2d3b50a4b5366c82efa3b3c8/build&quot;,&quot;adsinit&quot;:&quot;//ty0lm9uz.onet.pl/e1BrazlqYTd9/build&quot;,&quot;ustnavigation&quot;:&quot;https://ocdn.eu/paas-static/template-engine/2feea7833706f58957aabdc92a254eab/build&quot;,&quot;local&quot;:&quot;//ocdn.eu/ucs/static/4b82d3ba8c6c3fa040d8997c6e441409/917fefb5d0177986751af81efe4fa60c/build/js&quot;,&quot;localmobile&quot;:&quot;//ocdn.eu/ucs/static/4b82d3ba8c6c3fa040d8997c6e441409/917fefb5d0177986751af81efe4fa60c/build/js&quot;}">

        
        
    //a
    /*
    Available via the MIT or new BSD license.
    see: http://github.com/szagi3891/AMDLoader for details
    version 2.7
    */
    (function(){function d(a,b){C("err",a,b);(function(a,b){var d="amdLoader: errorNumber: "+a;"string"===typeof b&&""!==b&&(d+=": "+b);var l=Error(d);setTimeout(function(){throw l;},0)})(a,b)}function w(a,b){C("warn",a,b)}function v(a,b){C("info",a,b)}function C(a,b,d){a={type:"warn",num:b,caption:d,time:(new Date).getTime()-I};z.push(a)}function t(a,b,g,m,h,l){function e(f){Object.defineProperty(a,b,{get:function(){!0===m&&w(h+"->1",l);return g},set:function(){d(h+"->2",l)},configurable:f})}try{e(!1)}catch(q){try{e(!0)}catch(f){a[b]=
            g}}}function r(a,b){null===s?d(3):A(a,b,24.1)&&(0<a.length?y.requireModules(a,b):d(24.2))}function F(a,b,g){null===s?w(4):1===arguments.length?A([],a,"25.1")&&y.define([],a):2===arguments.length?"string"===typeof a&&"function"===typeof b?(u(a)?w("25.3",a):w("25.3"),y.define([],b)):A(a,b,"25.2")&&y.define(a,b):3===arguments.length?(u(a)?w("25.4",a):w("25.4"),A(b,g,"25.4")&&y.define(b,g)):d("25.5")}function A(a,b,g){if(G(a)){if("function"===typeof b)return!0;d(g+"->1")}else d(g+"->2");return!1}function J(a){var b=
            !1,g=!1,m=null,h=null,l=H(!1);return{isDefine:function(){return b},setDefine:function(e,q){!0===g?d(45,a):!1===b?(b=!0,m=e,setTimeout(function(){y.requireModulesWithModuleBase(a,e,function(){var b=Array.prototype.slice.call(arguments,0);try{h=q.apply(null,b)}catch(e){d(14,a+" -> "+e);return}l.exec([h])})},0)):d(15,a)},getDeps:function(){return!0===b?m:[]},get:function(a){l.add(a)},closeDefine:function(){g=!0;!1===b&&(b=!0,l.exec([void 0]))}}}function K(a){function b(b,e,g){if(0<b.length&&"."===b[0])!0===
    g&&d(16,b);else{if("https://"===b.substr(0,8)||"http://"===b.substr(0,7)||"//"===b.substr(0,2))return b;for(var f in a)if(0===b.indexOf(f+"/")){f=b.replace(f,a[f]);if(b!==f)return u(e)?f+"."+e:f;!0===g&&d(17,b);return}!0===g&&d(18,b)}}function g(b){document.getElementsByTagName("head")[0].appendChild(b)}function m(b,a){function d(){!0!==x&&(!0===f&&(c.readyState=void 0),x=!0,a(c))}var f=!1,x=!1,c=document.createElement("script");c.type="text/javascript";c.src=b;c.onload=d;c.async=!0;c.defer=!0;!0===
    f&&(c.readyState="interactive");c.onreadystatechange=function(){"loaded"!==c.readyState&&"complete"!==c.readyState||d()};return c}var h={};return{load:function(b,a){if(u(b)){if(!(b in h)){var d=m(b,function(){h[b].query.exec([])});h[b]={script:d,query:H(!0)};g(d)}h[b].query.add(a)}},getActialLoading:function(){for(var b in h)if("interactive"===h[b].script.readyState)return b;return null},resolvePath:b,isLoad:function(a){a=b(a,"js",!0);return u(a)&&a in h?h[a].query.isExec():!1},isSpecified:function(a){a=
            b(a,"js",!1);return u(a)&&a in h?!0:!1}}}function B(a,b){for(var d=0;d<a.length;d++)b(a[d])}function u(a){return"string"===typeof a&&""!==a}function H(a){function b(){if(!0===m)for(;0<h.length;)!0===a?h.shift().apply(null,l):g(h.shift())}function g(b){setTimeout(function(){b.apply(null,l)},0)}var m=!1,h=[],l=null;return{exec:function(a){G(a)?!1===m?(m=!0,l=a,b()):d(19):d(20)},add:function(a){"function"===typeof a?(h.push(a),b()):d(21)},isExec:function(){return m}}}function D(){return document.currentScript&&
    "function"===typeof document.currentScript.getAttribute?document.currentScript:null}var G=function(){return"function"===typeof Array.isArray?function(a){return Array.isArray(a)}:function(a){return"[object Array]"===Object.prototype.toString.call(a)}}(),y=function(){function a(a,b){var c=a.split("/");2>c.length?d(5,a):(c.pop(),b(c.join("/")))}function b(a,b){var c=a.split("/"),n=b.split("/");if(0<n.length)if("."===n[0]){var k=[];B(c,function(a){k.push(a)});B(n,function(a){"."!==a&&k.push(a)});c=k.join("/");
        if(0===c.indexOf(a))return c;d(6,a+" , "+b+" -> "+c)}else return b;else d(7,b)}function g(a,b){function c(){if(!1===n){for(var c=[],E=0;E<a.length;E++){var d=a[E];if(!0===k[d].isInit)c.push(k[d].value);else return}n=!0;"function"===typeof b&&b.apply(null,c)}}var n=!1,k={};B(a,function(a){a in k?d(10,a):(k[a]={isInit:!1,value:null},m(a,function(b){var n=k[a];!1===n.isInit?(n.isInit=!0,n.value=b,c()):d(11,a)}))});c()}function m(a,b){l=!0;var c=s.resolvePath(a,"js",!0);c in e||(e[c]=J(a),s.load(c,function(){if(c in
            e){for(;0<q.length;){var a=q.pop();h(c,a.deps)?d(12.1,c):e[c].setDefine(a.deps,a.define)}e[c].closeDefine()}else d(13,c)}));e[c].get(b)}function h(a,b){function c(a,b){B(b,function(b){a.push(b)})}function n(){var a=p.shift();a in k||(k[a]=!0,a in e&&(a=e[a].getDeps(),c(p,a)))}var k={},p=[];for(c(p,b);0<p.length;)n();return a in k}var l=!1,e={},q=[];return{requireModulesWithModuleBase:function(f,e,c){u(f)?a(f,function(a){for(var k=[],p=0;p<e.length;p++){var f=b(a,e[p]);if("string"===typeof f&&""!==
            f)k.push(f);else{d(8,a+" -> "+e[p]);return}}g(k,c)}):d(9,f)},requireModules:g,requireOne:m,define:function(a,b){var c=D();if(!0!==l)null===c?w(49,""):w(49,D().getAttribute("src"));else{if(null!==c&&(c=c.getAttribute("src"),c in e)){e[c].setDefine(a,b);return}c=s.getActialLoading();u(c)?c in e?e[c].setDefine(a,b):d(46,c):q.push({deps:a,define:b})}}}}(),s=null,z=[],I=(new Date).getTime();t(window,"require",r,!1,27);t(window,"define",F,!1,28);t(r,"runnerBox",function(a){function b(a){x in a||(a[x]=m());
        return a[x]}function g(){function a(){if(!0===b)for(;0<c.length;){var n=c.shift();setTimeout(n,0)}}var b=!1,c=[];return{on:function(b){c.push(b);a()},exec:function(){!1===b?b=!0:d(41);a()}}}function m(){var a=!1,b=null,c=g();return{onReady:function(a){c.on(function(){a(b)})},setAsRun:function(){!1===a?a=!0:d(44)},setValue:function(f){!0===a?(b=f,c.exec()):d(42)},isRun:function(){return a}}}function h(a,b){function c(a){setTimeout(function(){b(a)},0)}for(var d=[],f=0;f<a.length;f++)d.push(a[f]);for(f=
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       0;f<d.length;f++)c(d[f])}function l(a){function c(){for(var b=e(a,"*["+f+"]",f),d=[],p=null,k=0;k<b.length;k++)p=b[k],!0===h(p,g)&&d.push(p);return d}function d(a){if(q(a))return!0===b(a).isRun()?!0:!1;if("HTML"===a.tagName)return!0}function g(b){if(b===a)return!0;if(q(b))return!1}function h(a,b){function c(a){f++;if(200<f)return d(),!1;var p=b(a);return!0===p||!1===p?p:a.parentNode?c(a.parentNode):!1}function d(){var a=Error("Too much recursion");setTimeout(function(){throw a;},0)}var f=0;return c(a.parentNode)}
        if(a===document||!0===h(a,d)){var l;l="function"!==typeof a.getAttribute?!1:u(a.getAttribute("data-run-module"));return l?!0===b(a).isRun()?c():[a]:c()}return[]}function e(a,b,c){function d(a){a=a.childNodes;for(var b=0;b<a.length;b++){var f=a[b],k=void 0;if(k=1===f.nodeType)k=f.getAttribute(c),k="string"===typeof k&&""!==k;k?e.push(f):d(f)}}function f(a){for(var b=[],c=0;c<a.length;c++)b.push(a[c]);return b}a===document&&(a=document.documentElement);if("function"===typeof a.querySelectorAll)return f(a.querySelectorAll(b));
        var e=[];d(a);return e}function q(a){a=a.getAttribute(f);return"string"===typeof a&&""!==a}var f="data-run-module",x="runnerBoxElementProp"+(new Date).getTime(),c=function(){if("function"===typeof window.requestAnimationFrame)return window.requestAnimationFrame;for(var a=["ms","moz","webkit","o"],b=null,c=0;c<a.length;++c)if(b=window[a[c]+"RequestAnimationFrame"],"function"===typeof b)return b;return function(a){a()}}();return{runElement:function(e){function k(a){a=a.getAttribute(f);return"string"===
    typeof a&&""!==a?a:null}e=l(e);h(e,function(e){var g=k(e),h=g.split(".");if(2!==h.length)throw Error("irregulari contents of the attribute data-run-module: "+g);var n=h[0],l=h[1];a([n],function(a){c(function(){var c;if(q(e)&&!1===b(e).isRun())if(b(e).setAsRun(),a&&"function"===typeof a[l])e.setAttribute(f+"-isrun","1"),c=a[l](e,function(a){b(e).setValue(a)}),"undefined"!==typeof c&&(d(50,g),b(e).setValue(c));else throw c='No function "'+l+'" in module : '+n,e.setAttribute(f+"-isrun",c),Error(c);})})})},
        whenRun:function(a,c){if(q(a))b(a).onReady(c);else d(43)}}}(r),!1,29);t(r.runnerBox,"runElement",r.runnerBox.runElement,!1,30);t(r.runnerBox,"whenRun",r.runnerBox.whenRun,!1,31);t(r,"getLogs",function(a){if(!0===a){window.console.group();for(a=0;a<z.length;a++){var b=z[a];window.console[b.type](b.time,b.num,b.caption)}window.console.groupEnd()}else{a=[];for(b=0;b<z.length;b++)a.push(z[b]);return a}},!1,32);t(r,"defined",function(a){return null===s?!1:s.isLoad(a)},!1,33);t(r,"toUrl",function(a){if(u(a))return s.resolvePath(a,
            "",!0);d(26)},!0,35);t(F,"amd",{},!0,37);t(r,"isBrowser",!0,!0,38);t(r,"specified",function(a){return null!==s&&s.isSpecified?s.isSpecified(a):!1},!0,39);(function(a,b){function d(b){function e(){var a=b.getAttribute("data-amd-preload");return u(a)?a.split(","):[]}function c(){var a=b.getAttribute("data-timeout-start");return 0<a?a:2E3}var g=h(b);return null!==g?(m(a,g,e(),c()),!0):!1}function m(a,d,c,e){function k(){setTimeout(function(){v(48,"run timeout "+e);g()},e)}function g(){setTimeout(function(){0<
    c.length&&b(c,function(){});b.runnerBox.runElement(document)},0)}a({paths:d});l(window,"load",function(){v(48,"window.load");g();setTimeout(function(){v(48,"window.load -> 10s");g()},1E4)});"complete"===document.readyState&&(v(48,"isComplete"),g());"loaded"===document.readyState&&(v(48,"isLoaded"),k());l(document,"DOMContentLoaded",function(){v(48,"DOMContentLoaded");k();l(document.getElementsByTagName("body")[0],"pageshow",function(){v(48,"body pageshow");g()})});l(document,"readystatechange",function(){var a=
            "readystatechange - "+document.readyState;"complete"===document.readyState||"loaded"===document.readyState?(v(48,a+" - exec"),k()):v(48,a+" - noexec")})}function h(a){function b(a){var c=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;return"function"===typeof a.trim?a.trim():null===a?"":(a+"").replace(c,"")}var c=a.getAttribute("data-static-amd-map");if("string"===typeof c){if(""===c)return{}}else return null;if("undefined"!==typeof JSON&&"function"===typeof JSON.parse)return JSON.parse(c);a=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
        var d,e=null;return(c=b(c+""))&&!b(c.replace(a,function(a,b,c,f){d&&b&&(e=0);if(0===e)return a;d=c||b;e+=!f-!c;return""}))?Function("return "+c)():null}function l(a,b,c){a.addEventListener?a.addEventListener(b,c,!1):a.attachEvent("on"+b,c)}var e=D();if(null===e||!0!==d(e))for(var e=document.getElementsByTagName("script"),q=0;q<e.length&&!0!==d(e[q]);q++);})(function(a){null===s?s=K(a.paths):d(2.2)},r)})();

</script>
        <script type="text/javascript">
            // gemius
            if(nsglib.wasAutorefresh() == false) {
                pp_gemius_identifier = 'bPo6D0bzSxcue3osfkZZIJaE.l0RyeOgSEhsufRYys3.W7';
                function gemius_pending(i) { window[i] = window[i] || function() {var x = window[i+'_pdata'] = window[i+'_pdata'] || []; x[x.length]=arguments;};};
                gemius_pending('gemius_hit'); gemius_pending('gemius_event'); gemius_pending('pp_gemius_hit');
                gemius_pending('pp_gemius_event'); (function(d,t) {try {var gt=d.createElement(t),s=d.getElementsByTagName(t)[0],l='http'+((location.protocol=='https:')?'s':'');
                gt.setAttribute('async','async');
                gt.setAttribute('defer','defer'); gt.src=l+'://onet.hit.gemius.pl/xgemius.js'; s.parentNode.insertBefore(gt,s);} catch (e)
                {}})(document,'script');
            }
        </script>
    <script type="text/javascript" src="onet_pliki/gpt.js" charset="UTF-8" async=""></script><script type="text/javascript" src="onet_pliki/dl.js" charset="UTF-8" async=""></script><style type="text/css" data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">.nvfwzzpbkbfk{min-width:1px;margin-bottom:5px;text-align:center;margin-left:auto;margin-right:auto}#onet-ad-top{margin-bottom:10px}.ad_adInfo{color:#696969;font:9px Verdana,Arial,Helvetica,sans-serif;text-align:left}.ad_box,.ad_boxright1,.ad_halfpage,.ad_sky,.ad_spons_box,.ad_wrapper,.spons_box{display:inline-block;vertical-align:top}#onet-ad-right{margin:0 auto 5px}#onet-ad-left{margin:10px 20px 10px 0;float:left}.ad-frame{display:block;border:1px solid #cecece;overflow:hidden}.ad-frame .ad-frame-in{margin:-1px 0 0 -1px}.ad_default{text-align:center}#onet-ad-flat-belkagorna{margin-bottom:0}</style><link rel="preload" href="onet_pliki/integrator_002.js" as="script"><script type="text/javascript" src="onet_pliki/integrator_002.js"></script><link rel="preload" href="onet_pliki/integrator.js" as="script"><script type="text/javascript" src="onet_pliki/integrator.js"></script><script src="onet_pliki/pubads_impl_287.js" async=""></script><style type="text/css" data-not-change="true">/* all types */
#ecommerce * {
  font-family: 'Fira Sans', Tahoma, Arial, sans-serif;
}
#ecommerce .ecommerceContent {
  visibility: visible !important;
  position: relative;
  height: 718px;
  height: 17.95rem;
  margin-top: 20px;
  margin-top: 0.5rem;
  background-color: #FFFFFF;
}
.ecommerceContent .ad_adInfo {
  display: none;
}
.osImg {
  margin: 5px;
  margin: 0.125rem;
}
.osList li {
  list-style-type: disc;
}
.osType {
  /*min-height: 50px;*/
  width: 300px;
  width: 7.5rem;
  padding: 5px;
  padding: 0.125rem;
  color: #18557f;
  font-size: 12px;
  font-size: 0.3rem;
  font-family: 'Open Sans', Tahoma, Arial, sans-serif;
  overflow: hidden;
}
.osType a {
  font: inherit;
  color: #18557F;
}
.osType a span {
  cursor: pointer;
}
.osType310x100 a:hover {
  text-decoration: none;
}
.osType a span {
  text-decoration: none;
}
.osType a:hover,
.osType a:focus {
  color: #18557f;
}
/* 155x100 - banerek */
.osType155x100 {
  height: 94px;
  height: 2.35rem;
  width: 148px;
  width: 3.7rem;
  border: 1px solid #e4e4e4;
  border: 0.025rem solid #e4e4e4;
  text-align: center;
}
/* 310x50 - link */
.osType310x50 {
  font-size: 14px;
  font-size: 0.35rem;
  text-align: center;
}
.osType310x50 .osDesc {
  width: 300px;
  width: 7.5rem;
  margin: 0 auto;
  overflow: hidden;
  padding: 15px 0;
  padding: 0.375rem 0;
}
.osType310x50 a {
  height: 20px;
  height: 0.5rem;
  width: 235px;
  width: 5.875rem;
  display: block;
  float: left;
}
.osType310x50 .osAds {
  color: #696969;
  display: block;
  font-size: 9px;
  font-size: 0.225rem;
  float: left;
  margin: 4px 0 0;
  margin: 0.1rem 0 0;
}
/* 310x50 v2 - dlugi baner */
.osType310x50v2 {
  text-align: center;
}
.osType310x50v2 .osPhoto {
  height: 45px;
  height: 1.125rem;
  width: 280px;
  width: 7rem;
  display: block;
  margin: 0 auto;
  overflow: hidden;
}
.osType310x50v2 .osPhoto img {
  height: 45px;
  height: 1.125rem;
  width: 280px;
  width: 7rem;
}
/* 310x100 - foto + desc */
.osType310x100 {
  height: 90px;
  height: 2.25rem;
}
.osType310x100 .osPhoto {
  width: 145px;
  width: 3.625rem;
  height: 90px;
  height: 2.25rem;
  overflow: hidden;
  float: left;
  border: 1px solid #e6e6e6;
  border: 0.025rem solid #e6e6e6;
  margin: 0 5px 0 0;
  margin: 0 0.125rem 0 0;
}
.osType310x100 .osPhoto img {
  width: 145px;
  width: 3.625rem;
  height: 90px;
  height: 2.25rem;
}
.osType310x100 .osDesc {
  width: 140px;
  width: 3.5rem;
  color: #18557f;
  margin: 0 2px 0 3px;
  margin: 0 0.05rem 0 0.075rem;
  overflow: hidden;
}
.osType310x100 a:hover {
  text-decoration: none;
}
.osType310x100 .osTitle {
  font-weight: normal;
  color: #c4262e;
  font-size: 24px;
  font-size: 0.6rem;
  margin: 0 0 2px;
  margin: 0 0 0.05rem;
  overflow: hidden;
  line-height: 29px;
  line-height: 0.725rem;
}
.osType310x100 .osDesc .osLead {
  display: block;
  line-height: 15px;
  line-height: 0.375rem;
  text-overflow: ellipsis;
}
.osType310x100 .osDesc strong {
  color: #c4262e;
  font-weight: bold;
}
/* 310x100 v2 - foto + desc - nieruchomosci */
.osType310x100v2 {
  height: 90px;
  height: 2.25rem;
  position: relative;
}
.osType310x100v2 .osPhoto {
  height: 88px;
  height: 2.2rem;
  width: 144px;
  width: 3.6rem;
  border: 1px solid #e6e6e6;
  border: 0.025rem solid #e6e6e6;
  float: left;
  overflow: hidden;
}
.osType310x100v2 .osPhoto img {
  height: 88px;
  height: 2.2rem;
  width: 144px;
  width: 3.6rem;
}
.osType310x100v2 .osDesc {
  width: 150px;
  width: 3.75rem;
  color: #18557f;
  line-height: 21px;
  line-height: 0.525rem;
  overflow: hidden;
  text-align: right;
  float: right;
}
.osType310x100v2 .osDesc a:hover {
  text-decoration: none;
}
.osType310x100v2 .osCity {
  font-size: 18px;
  font-size: 0.45rem;
}
.osType310x100v2 .osPrice {
  color: #c4262e;
  font-size: 14px;
  font-size: 0.35rem;
}
.osType310x100v2 .osDesc span {
  display: block;
}
.osType310x100v2 .osOther {
  height: 38px;
  height: 0.95rem;
  width: 75px;
  width: 1.875rem;
  background: url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAEwAAAA1CAYAAADrug0iAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA4dJREFUeNrsm0loE1EYx1/StFUTKy6tttK6lohitW7FqlXrLtQKehE9ueBBPKgIehRvHgTrWU+Ch1zU4goVhOpBiyCoqGhNLCjiAmpbsS7x/yWfsZlmJtOkM52Z9/7wo6WkyeQ3b/nemxlfPB4XTsnd8LyJ+DEJFIIAeAu6lj1/5JiD9P0ThoO183PngsVgJqgGlWAkiyJ8TB/4CX6QOBAFr8BDcB/8tuNgccJSvwdsEhQE68BaMAuUgvEgBEYDv4n3WAh6QDf4DD6BGJ1rcBm8s+OLWC2sFmwDNSDMLcqfa29gwSHutpQVoJE/4wloBW1uFEZdrgmsBystPikVDLXeBnATXAXtbhBG49Ea0Aw2DsOYXMusBhFwB3Q4UdhYPru7wHYHTGZ1zD1wnrtp1CnCysE+cIxnOielnrkIWnh27cvnDf15/C8NwlQ3nQInHCirf3aAC2ALz9i2CyvgWe8Sd0M3ZAZL28u1nq3CaEa6ApYId6WYe8Rxu4T5uOY5l2dNNZwpAkfBSTuE0XR9BkxmeW4NFb8HeKKyTNh8cJZleSFUCh0E+60QNgWcBrOFt0IrhMNg+VAKmwAOcXf0Yqp5PCsdCmE0Tm0Ge4R3Q99xFTjCE0JewqgL7uZB0ushYUu5xsxJGFXuO23YbXBKAlyfVeQqrIGXEjJlA689CwYrjPr1JjBHyBcagqYPVlgd92cZQ/t5NYMV1syFqoyh7ki7xVVmhZWARWamWA9nq0herDElrJG3QmTOGLBAZNhgzSSsKdvUKklIWGU2YbSxRld8ipWvxLAUziaMXjBOuUpkqkju+QWMhNVLsgwyu8acph2etMKoUA0qV6mUa4t3rbAqNX6lpUxbMfgz9NtC5SmthYX1hI1SA37GIr5MT1hQZNkLkjBF2jG9v7CQcPeVICsywkhYULjzOqPVwkr0hNHtj3HlKC1/wC89YV/4BSr/0wu+6gn7plrYgNDNyN16wnoZlfRG9MFoDIupVpYWkvXaqNLvBN+Vp1TegxdGwqJK2IAW1mkkjO4B7VGeUqHu+NRIWDuXFyrJp01iPFPqCqNZsku5SoSeLHmp/WOmpdBt8FH5Sjz89cyMsAg3RZlD9/J3aItWPWFvwGPJl0kP2IEwI4zSKvlYFtGWE9mEXRcWPQ3mglBDadNbJvoNVum3eGqVLS1Gvctow5Ba2Q3JZFF1cM2oFv0rwABybZTWQ8QpwwAAAABJRU5ErkJggg==') no-repeat 0 0;
  /* dot.png*/
  border-radius: 23px 23px 0 0;
  border-radius: 0.575rem 0.575rem 0 0;
  color: #fff;
  font-size: 14px;
  font-size: 0.35rem;
  font-weight: bold;
  line-height: 43px;
  line-height: 1.075rem;
  text-align: center;
  position: absolute;
  bottom: 1px;
  bottom: 0.025rem;
  left: 87px;
  left: 2.175rem;
}
/* 310x100 v3 - baner */
.osType310x100v3 {
  height: 100px;
  height: 2.5rem;
  width: 310px;
  width: 7.75rem;
}
.osType310x100v3 .osPhoto {
  height: 90px;
  height: 2.25rem;
  width: 300px;
  width: 7.5rem;
  display: block;
  margin: 0 auto;
  overflow: hidden;
}
.osType310x100v3 .osPhoto img {
  height: 90px;
  height: 2.25rem;
  width: 300px;
  width: 7.5rem;
}
/* 310x300 - plachta reklamowa */
.osType310x300 {
  height: 300px;
  height: 7.5rem;
  width: 310px;
  width: 7.75rem;
  overflow: hidden;
}
/* 620x50 - baner dlugi */
.osType620x50 {
  width: 620px;
  width: 15.5rem;
  background: #e9e9e9;
  overflow: hidden;
}
/* 620x300 - duza plachta reklamowa */
.osType620x300 {
  height: 300px;
  height: 7.5rem;
  width: 620px;
  width: 15.5rem;
}
.osType620x300 .osPhoto {
  margin: 0 auto;
}
.osType620x300 .osPhoto img {
  height: 295px;
  height: 7.375rem;
  width: 620px;
  width: 15.5rem;
}
/* 310x150 - foto + lista */
.osTypePhotoList .osTitle {
  height: 18px;
  height: 0.45rem;
  width: 160px;
  width: 4rem;
  float: left;
  font-size: 14px;
  font-size: 0.35rem;
  overflow: hidden;
}
.osTypePhotoList .osLinks {
  height: 16px;
  height: 0.4rem;
  color: #c4262e;
  float: right;
  overflow: hidden;
}
/**/
.osTypePhotoList.os310x150 .osPhoto {
  width: 110px;
  width: 2.75rem;
  clear: both;
  float: left;
  margin: 12px 8px 0 0;
  margin: 0.3rem 0.2rem 0 0;
  overflow: hidden;
}
.osTypePhotoList.os310x150 .osPhoto img {
  width: 110px;
  width: 2.75rem;
}
.osTypePhotoList.os310x100 .osPhoto {
  height: 60px;
  height: 1.5rem;
}
.osTypePhotoList.os310x100 .osPhoto img {
  height: 60px;
  height: 1.5rem;
}
.osTypePhotoList.os310x150 .osPhoto {
  height: 90px;
  height: 2.25rem;
}
.osTypePhotoList.os310x150 .osPhoto img {
  height: 90px;
  height: 2.25rem;
}
.osTypePhotoList.os310x100 .osPhoto {
  height: 60px;
  height: 1.5rem;
  width: 110px;
  width: 2.75rem;
  clear: both;
  float: left;
  margin: 12px 8px 0 0;
  margin: 0.3rem 0.2rem 0 0;
  overflow: hidden;
}
.osTypePhotoList.os310x100 .osPhoto img {
  height: 60px;
  height: 1.5rem;
  width: 110px;
  width: 2.75rem;
}
.osTypePhotoList .osList {
  width: 181px;
  width: 4.525rem;
  color: #c4262e;
  float: left;
  line-height: 23px;
  line-height: 0.575rem;
  list-style: disc inside;
  margin: 7px 0 0;
  margin: 0.175rem 0 0;
  overflow: hidden;
}
.osTypePhotoList .osList li {
  line-height: 23px;
  line-height: 0.575rem;
}
.osTypePhotoList .osList a {
  color: #18557f;
}
.osTypePhotoList a:focus,
.osTypePhotoList a:hover {
  color: #c4262e;
}
.osTypePhotoList a {
  color: #c4262e;
}
.osTypePhotoList .active {
  color: #c4262e;
  font-weight: bold;
}
/* 310x100v4 - long holiday */
.osType310x100v4 {
  height: 40px;
  height: 1rem;
  width: 300px;
  width: 7.5rem;
}
.osType310x100v4 span {
  display: block;
  float: left;
}
.osType310x100v4 .osCity {
  color: #c4262e;
  height: 18px;
  height: 0.45rem;
  font-size: 14px;
  font-size: 0.35rem;
  margin: 0 12px 1px 0;
  margin: 0 0.3rem 0.025rem 0;
  line-height: 18px;
  line-height: 0.45rem;
  overflow: hidden;
}
.osType310x100v4 .osDesc {
  float: left;
  height: 15px;
  height: 0.375rem;
  width: 190px;
  width: 4.75rem;
  font-size: 11px;
  font-size: 0.275rem;
  line-height: 14px;
  line-height: 0.35rem;
  margin: 2px 0 0;
  margin: 0.05rem 0 0;
  overflow: hidden;
}
.osType310x100v4 .osRate {
  float: right;
  background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFUAAAAoCAYAAACPSbZFAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjcxN0JGREVGRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjcxN0JGREYwRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NzE3QkZERURFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NzE3QkZERUVFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4sCU0zAAACJElEQVR42uyZP0vDQBjG09qxIDgJSqWLTv4ZiovZBBdXJ12cBXETwUF0cXDR1Q9QEPwA7ol0EhSnglOh4FQouMfn5AJHSC6X5JKcvfeFB0py+d3b5653l74Nf3XDkcQBNIDGTv7QxtgZfiQyXtc2K8tDxkCOTlMCaEP30HWBJKxkyEw9g5agY2g9ZyJaGZiNRuSRxkgydRG64J/noNscSVjLiDN1gT/UFq7tQ4cZkiiNgdlqRB4yRgMbFWuwDW1xdVI6eRf0Ag15J8QAAxvVsMVH4JJPa5UIOxtBz8IiTgzOYD//J+gk4xrzDe0KR4taGcJRy4jvEq6pj9C5ImAK7UFfkeu1MGCoEXmIDHGjuoMeFCAM8Jlwr1IGDDUijygjuvuPFCBpbyTWM6KmdhUgabuh9YwWe1cV3p87MaMwHzmjdfn7r2onM8+AhwPZTA0hb9ARtAytQFfQRHF0rWfEransaNCD+vwae/iGA08Vzm+lMDAbJlDteagwGkEQOBR6o0kWkKlkKplKQaaSqWQqRdFo+b4vu19Zidp13cR7yPGPgTZjSRsteRRlsO9hfIkaZlGJukwGDKYSdVEGTKQStU4GDI1l4Lr5JWrP86i8rJGBjYpK1M4sl6gxwrkZwlGLStRRBszJzMAzVKJOY8AkZQbaUonaFgaVqEtgNFMasFH4ydiR9Yx/UaLG2kklal0MmNmD+nwDm0BUorY16E/qEuJXgAEAe56PpkFYU7oAAAAASUVORK5CYII=) no-repeat 0 -24px;
  background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFUAAAAoCAYAAACPSbZFAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjcxN0JGREVGRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjcxN0JGREYwRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NzE3QkZERURFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NzE3QkZERUVFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4sCU0zAAACJElEQVR42uyZP0vDQBjG09qxIDgJSqWLTv4ZiovZBBdXJ12cBXETwUF0cXDR1Q9QEPwA7ol0EhSnglOh4FQouMfn5AJHSC6X5JKcvfeFB0py+d3b5653l74Nf3XDkcQBNIDGTv7QxtgZfiQyXtc2K8tDxkCOTlMCaEP30HWBJKxkyEw9g5agY2g9ZyJaGZiNRuSRxkgydRG64J/noNscSVjLiDN1gT/UFq7tQ4cZkiiNgdlqRB4yRgMbFWuwDW1xdVI6eRf0Ag15J8QAAxvVsMVH4JJPa5UIOxtBz8IiTgzOYD//J+gk4xrzDe0KR4taGcJRy4jvEq6pj9C5ImAK7UFfkeu1MGCoEXmIDHGjuoMeFCAM8Jlwr1IGDDUijygjuvuPFCBpbyTWM6KmdhUgabuh9YwWe1cV3p87MaMwHzmjdfn7r2onM8+AhwPZTA0hb9ARtAytQFfQRHF0rWfEransaNCD+vwae/iGA08Vzm+lMDAbJlDteagwGkEQOBR6o0kWkKlkKplKQaaSqWQqRdFo+b4vu19Zidp13cR7yPGPgTZjSRsteRRlsO9hfIkaZlGJukwGDKYSdVEGTKQStU4GDI1l4Lr5JWrP86i8rJGBjYpK1M4sl6gxwrkZwlGLStRRBszJzMAzVKJOY8AkZQbaUonaFgaVqEtgNFMasFH4ydiR9Yx/UaLG2kklal0MmNmD+nwDm0BUorY16E/qEuJXgAEAe56PpkFYU7oAAAAASUVORK5CYII=) no-repeat 0 -0.6rem;
  height: 15px;
  height: 0.375rem;
  width: 85px;
  width: 2.125rem;
  margin: 2px 0 0;
  margin: 0.05rem 0 0;
  position: relative;
}
.osType310x100v4 .osRateFull {
  background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFUAAAAoCAYAAACPSbZFAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjcxN0JGREVGRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjcxN0JGREYwRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NzE3QkZERURFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NzE3QkZERUVFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4sCU0zAAACJElEQVR42uyZP0vDQBjG09qxIDgJSqWLTv4ZiovZBBdXJ12cBXETwUF0cXDR1Q9QEPwA7ol0EhSnglOh4FQouMfn5AJHSC6X5JKcvfeFB0py+d3b5653l74Nf3XDkcQBNIDGTv7QxtgZfiQyXtc2K8tDxkCOTlMCaEP30HWBJKxkyEw9g5agY2g9ZyJaGZiNRuSRxkgydRG64J/noNscSVjLiDN1gT/UFq7tQ4cZkiiNgdlqRB4yRgMbFWuwDW1xdVI6eRf0Ag15J8QAAxvVsMVH4JJPa5UIOxtBz8IiTgzOYD//J+gk4xrzDe0KR4taGcJRy4jvEq6pj9C5ImAK7UFfkeu1MGCoEXmIDHGjuoMeFCAM8Jlwr1IGDDUijygjuvuPFCBpbyTWM6KmdhUgabuh9YwWe1cV3p87MaMwHzmjdfn7r2onM8+AhwPZTA0hb9ARtAytQFfQRHF0rWfEransaNCD+vwae/iGA08Vzm+lMDAbJlDteagwGkEQOBR6o0kWkKlkKplKQaaSqWQqRdFo+b4vu19Zidp13cR7yPGPgTZjSRsteRRlsO9hfIkaZlGJukwGDKYSdVEGTKQStU4GDI1l4Lr5JWrP86i8rJGBjYpK1M4sl6gxwrkZwlGLStRRBszJzMAzVKJOY8AkZQbaUonaFgaVqEtgNFMasFH4ydiR9Yx/UaLG2kklal0MmNmD+nwDm0BUorY16E/qEuJXgAEAe56PpkFYU7oAAAAASUVORK5CYII=) no-repeat 0 -1px;
  background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFUAAAAoCAYAAACPSbZFAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjcxN0JGREVGRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjcxN0JGREYwRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NzE3QkZERURFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NzE3QkZERUVFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4sCU0zAAACJElEQVR42uyZP0vDQBjG09qxIDgJSqWLTv4ZiovZBBdXJ12cBXETwUF0cXDR1Q9QEPwA7ol0EhSnglOh4FQouMfn5AJHSC6X5JKcvfeFB0py+d3b5653l74Nf3XDkcQBNIDGTv7QxtgZfiQyXtc2K8tDxkCOTlMCaEP30HWBJKxkyEw9g5agY2g9ZyJaGZiNRuSRxkgydRG64J/noNscSVjLiDN1gT/UFq7tQ4cZkiiNgdlqRB4yRgMbFWuwDW1xdVI6eRf0Ag15J8QAAxvVsMVH4JJPa5UIOxtBz8IiTgzOYD//J+gk4xrzDe0KR4taGcJRy4jvEq6pj9C5ImAK7UFfkeu1MGCoEXmIDHGjuoMeFCAM8Jlwr1IGDDUijygjuvuPFCBpbyTWM6KmdhUgabuh9YwWe1cV3p87MaMwHzmjdfn7r2onM8+AhwPZTA0hb9ARtAytQFfQRHF0rWfEransaNCD+vwae/iGA08Vzm+lMDAbJlDteagwGkEQOBR6o0kWkKlkKplKQaaSqWQqRdFo+b4vu19Zidp13cR7yPGPgTZjSRsteRRlsO9hfIkaZlGJukwGDKYSdVEGTKQStU4GDI1l4Lr5JWrP86i8rJGBjYpK1M4sl6gxwrkZwlGLStRRBszJzMAzVKJOY8AkZQbaUonaFgaVqEtgNFMasFH4ydiR9Yx/UaLG2kklal0MmNmD+nwDm0BUorY16E/qEuJXgAEAe56PpkFYU7oAAAAASUVORK5CYII=) no-repeat 0 -0.025rem;
  height: 15px;
  height: 0.375rem;
  width: 31px;
  width: 0.775rem;
  position: absolute;
  top: 0;
  left: 0;
}
.osType310x100v4 .osPrice {
  color: #c4262e;
  font-size: 14px;
  font-size: 0.35rem;
  float: right;
}
.osType310x100v4 .osBorder {
  height: 36px;
  height: 0.9rem;
  border: 1px solid #e6e6e6;
  display: block;
  padding: 3px 9px 3px 9px;
  padding: 0.075rem 0.225rem 0.075rem 0.225rem;
}
/* 310x200 - big holiday */
.osType310x200 {
  position: relative;
}
.osType310x200 .osPhoto {
  height: 190px;
  height: 4.75rem;
  width: 300px;
  width: 7.5rem;
  overflow: hidden;
  position: relative;
}
.osType310x200 .osPhoto img {
  height: 190px;
  height: 4.75rem;
  width: 300px;
  width: 7.5rem;
}
.osType310x200 .osWhere {
  height: 68px;
  height: 1.7rem;
  width: 281px;
  width: 7.025rem;
  background: url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkI1NDlCODhCQ0QwNTExRTI5RkQxOURGQkVBMEZGNTQ1IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkI1NDlCODhDQ0QwNTExRTI5RkQxOURGQkVBMEZGNTQ1Ij4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QjU0OUI4ODlDRDA1MTFFMjlGRDE5REZCRUEwRkY1NDUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6QjU0OUI4OEFDRDA1MTFFMjlGRDE5REZCRUEwRkY1NDUiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz6OL2n4AAAAGElEQVR42mL8////eQY0wMSABVAoCBBgAIf7A9aIgJJ4AAAAAElFTkSuQmCC') 0 0;
  /* for IE ie_opacity.png*/
  background: rgba(255, 255, 255, 0.8);
  display: block;
  float: left;
  padding: 4px 5px 5px 14px;
  padding: 0.1rem 0.125rem 0.125rem 0.35rem;
  overflow: hidden;
  position: absolute;
  bottom: 0;
  left: 0;
}
.osType310x200 .osCity {
  height: 30px;
  height: 0.75rem;
  width: 180px;
  width: 4.5rem;
  color: #c4262e;
  font-size: 24px;
  font-size: 0.6rem;
  float: left;
  overflow: hidden;
  line-height: 29px;
  line-height: 0.725rem;
}
.osType310x200 .osDesc {
  height: 30px;
  height: 0.75rem;
  width: 190px;
  width: 4.75rem;
  font-size: 12px;
  font-size: 0.3rem;
  float: left;
  margin: 9px 0 0;
  margin: 0.225rem 0 0;
  overflow: hidden;
  line-height: 15px;
  line-height: 0.375rem;
}
.osType310x200 .osPrice {
  display: block;
  font-size: 18px;
  font-size: 0.45rem;
  float: right;
  padding: 7px 0 0;
  padding: 0.175rem 0 0;
  overflow: hidden;
  text-align: right;
}
.osType310x200 .osRate {
  position: relative;
  height: 15px;
  height: 0.375rem;
  width: 85px;
  width: 2.125rem;
  background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFUAAAAoCAYAAACPSbZFAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjcxN0JGREVGRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjcxN0JGREYwRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NzE3QkZERURFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NzE3QkZERUVFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4sCU0zAAACJElEQVR42uyZP0vDQBjG09qxIDgJSqWLTv4ZiovZBBdXJ12cBXETwUF0cXDR1Q9QEPwA7ol0EhSnglOh4FQouMfn5AJHSC6X5JKcvfeFB0py+d3b5653l74Nf3XDkcQBNIDGTv7QxtgZfiQyXtc2K8tDxkCOTlMCaEP30HWBJKxkyEw9g5agY2g9ZyJaGZiNRuSRxkgydRG64J/noNscSVjLiDN1gT/UFq7tQ4cZkiiNgdlqRB4yRgMbFWuwDW1xdVI6eRf0Ag15J8QAAxvVsMVH4JJPa5UIOxtBz8IiTgzOYD//J+gk4xrzDe0KR4taGcJRy4jvEq6pj9C5ImAK7UFfkeu1MGCoEXmIDHGjuoMeFCAM8Jlwr1IGDDUijygjuvuPFCBpbyTWM6KmdhUgabuh9YwWe1cV3p87MaMwHzmjdfn7r2onM8+AhwPZTA0hb9ARtAytQFfQRHF0rWfEransaNCD+vwae/iGA08Vzm+lMDAbJlDteagwGkEQOBR6o0kWkKlkKplKQaaSqWQqRdFo+b4vu19Zidp13cR7yPGPgTZjSRsteRRlsO9hfIkaZlGJukwGDKYSdVEGTKQStU4GDI1l4Lr5JWrP86i8rJGBjYpK1M4sl6gxwrkZwlGLStRRBszJzMAzVKJOY8AkZQbaUonaFgaVqEtgNFMasFH4ydiR9Yx/UaLG2kklal0MmNmD+nwDm0BUorY16E/qEuJXgAEAe56PpkFYU7oAAAAASUVORK5CYII=) no-repeat 0 -24px;
  background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFUAAAAoCAYAAACPSbZFAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjcxN0JGREVGRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjcxN0JGREYwRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NzE3QkZERURFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NzE3QkZERUVFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4sCU0zAAACJElEQVR42uyZP0vDQBjG09qxIDgJSqWLTv4ZiovZBBdXJ12cBXETwUF0cXDR1Q9QEPwA7ol0EhSnglOh4FQouMfn5AJHSC6X5JKcvfeFB0py+d3b5653l74Nf3XDkcQBNIDGTv7QxtgZfiQyXtc2K8tDxkCOTlMCaEP30HWBJKxkyEw9g5agY2g9ZyJaGZiNRuSRxkgydRG64J/noNscSVjLiDN1gT/UFq7tQ4cZkiiNgdlqRB4yRgMbFWuwDW1xdVI6eRf0Ag15J8QAAxvVsMVH4JJPa5UIOxtBz8IiTgzOYD//J+gk4xrzDe0KR4taGcJRy4jvEq6pj9C5ImAK7UFfkeu1MGCoEXmIDHGjuoMeFCAM8Jlwr1IGDDUijygjuvuPFCBpbyTWM6KmdhUgabuh9YwWe1cV3p87MaMwHzmjdfn7r2onM8+AhwPZTA0hb9ARtAytQFfQRHF0rWfEransaNCD+vwae/iGA08Vzm+lMDAbJlDteagwGkEQOBR6o0kWkKlkKplKQaaSqWQqRdFo+b4vu19Zidp13cR7yPGPgTZjSRsteRRlsO9hfIkaZlGJukwGDKYSdVEGTKQStU4GDI1l4Lr5JWrP86i8rJGBjYpK1M4sl6gxwrkZwlGLStRRBszJzMAzVKJOY8AkZQbaUonaFgaVqEtgNFMasFH4ydiR9Yx/UaLG2kklal0MmNmD+nwDm0BUorY16E/qEuJXgAEAe56PpkFYU7oAAAAASUVORK5CYII=) no-repeat 0 -0.6rem;
  float: right;
  margin: 9px 0 0;
  margin: 0.225rem 0 0;
}
.osType310x200 .osRateFull {
  background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFUAAAAoCAYAAACPSbZFAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjcxN0JGREVGRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjcxN0JGREYwRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NzE3QkZERURFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NzE3QkZERUVFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4sCU0zAAACJElEQVR42uyZP0vDQBjG09qxIDgJSqWLTv4ZiovZBBdXJ12cBXETwUF0cXDR1Q9QEPwA7ol0EhSnglOh4FQouMfn5AJHSC6X5JKcvfeFB0py+d3b5653l74Nf3XDkcQBNIDGTv7QxtgZfiQyXtc2K8tDxkCOTlMCaEP30HWBJKxkyEw9g5agY2g9ZyJaGZiNRuSRxkgydRG64J/noNscSVjLiDN1gT/UFq7tQ4cZkiiNgdlqRB4yRgMbFWuwDW1xdVI6eRf0Ag15J8QAAxvVsMVH4JJPa5UIOxtBz8IiTgzOYD//J+gk4xrzDe0KR4taGcJRy4jvEq6pj9C5ImAK7UFfkeu1MGCoEXmIDHGjuoMeFCAM8Jlwr1IGDDUijygjuvuPFCBpbyTWM6KmdhUgabuh9YwWe1cV3p87MaMwHzmjdfn7r2onM8+AhwPZTA0hb9ARtAytQFfQRHF0rWfEransaNCD+vwae/iGA08Vzm+lMDAbJlDteagwGkEQOBR6o0kWkKlkKplKQaaSqWQqRdFo+b4vu19Zidp13cR7yPGPgTZjSRsteRRlsO9hfIkaZlGJukwGDKYSdVEGTKQStU4GDI1l4Lr5JWrP86i8rJGBjYpK1M4sl6gxwrkZwlGLStRRBszJzMAzVKJOY8AkZQbaUonaFgaVqEtgNFMasFH4ydiR9Yx/UaLG2kklal0MmNmD+nwDm0BUorY16E/qEuJXgAEAe56PpkFYU7oAAAAASUVORK5CYII=) no-repeat 0 -1px;
  background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFUAAAAoCAYAAACPSbZFAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjcxN0JGREVGRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjcxN0JGREYwRTdDMzExRTI5RDI0QzFGQzM0MTBEQUQwIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NzE3QkZERURFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NzE3QkZERUVFN0MzMTFFMjlEMjRDMUZDMzQxMERBRDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4sCU0zAAACJElEQVR42uyZP0vDQBjG09qxIDgJSqWLTv4ZiovZBBdXJ12cBXETwUF0cXDR1Q9QEPwA7ol0EhSnglOh4FQouMfn5AJHSC6X5JKcvfeFB0py+d3b5653l74Nf3XDkcQBNIDGTv7QxtgZfiQyXtc2K8tDxkCOTlMCaEP30HWBJKxkyEw9g5agY2g9ZyJaGZiNRuSRxkgydRG64J/noNscSVjLiDN1gT/UFq7tQ4cZkiiNgdlqRB4yRgMbFWuwDW1xdVI6eRf0Ag15J8QAAxvVsMVH4JJPa5UIOxtBz8IiTgzOYD//J+gk4xrzDe0KR4taGcJRy4jvEq6pj9C5ImAK7UFfkeu1MGCoEXmIDHGjuoMeFCAM8Jlwr1IGDDUijygjuvuPFCBpbyTWM6KmdhUgabuh9YwWe1cV3p87MaMwHzmjdfn7r2onM8+AhwPZTA0hb9ARtAytQFfQRHF0rWfEransaNCD+vwae/iGA08Vzm+lMDAbJlDteagwGkEQOBR6o0kWkKlkKplKQaaSqWQqRdFo+b4vu19Zidp13cR7yPGPgTZjSRsteRRlsO9hfIkaZlGJukwGDKYSdVEGTKQStU4GDI1l4Lr5JWrP86i8rJGBjYpK1M4sl6gxwrkZwlGLStRRBszJzMAzVKJOY8AkZQbaUonaFgaVqEtgNFMasFH4ydiR9Yx/UaLG2kklal0MmNmD+nwDm0BUorY16E/qEuJXgAEAe56PpkFYU7oAAAAASUVORK5CYII=) no-repeat 0 -0.025rem;
  height: 15px;
  height: 0.375rem;
  width: 85px;
  width: 2.125rem;
  position: absolute;
  top: 0;
  left: 0;
}
.osType310x200 .osOther {
  height: 50px;
  height: 1.25rem;
  width: 45px;
  width: 1.125rem;
  background: url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAEEAAAAwCAYAAABOiRchAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAm5JREFUeNrsmk9ERFEUxm+30WqIVlHKkCalaJVUpJTatIiU0iJFtGrTIrVp0WqYVUQMERGtIlJEzCqiRAxDREREDEMMnZNzc93em2Z6b5qZe+bjM+PNn/fe75177rnnvap4a5cwNAI+F3YqCe4Af6gNfYk7IR2+uCXsVQt43txoQhgC9wq7tQGuzgZhTdivEHjaDUID5QMOWnSDMGuGicXCYd/kBGFe8NKECaEO3M4MwpgJYYjRUFDqVeesIPQLfsLo79QhhAVPhSsQKA8ihBp9umCmkIIQZJgU9bzwBaFW8FVQjwSuqlUQ0owhpBSEVAVCBcI3hDemEF70YinBFMK9DiHJFEJCh3DNEEDGjIQrhhBuVS6U2th4ZQbhQr3R22snzCCcOUE4YATgGRx3goB54ZEJhBglxh8QUDsMAOB9yD19gwlhj0GCjNFwcIWQsjwaMAoi5kanu9JRiyvIqFPeky4rq1ULATyBt50+kC4/OAUfWQZhya1tILP8aNmiKTOiV4j5QHgHT4ryb79hUbSe7Qsyh0XGjF5YlJke6EJmvEBQa4qVMi2NR3Ope2SOf4hF1FwZDQ2c4gfMosgrBNQheFBQX66EdUMAck7qMs8dYAeqW5RuJ2qfAOR1oeQfdvRCEbFfQieP8/8COe8hK/+40zTtcLDIUYFrgV1ws5eLIj0eBPYgesBTRVhvYEXbQTOXp/sm0qcDOga30QE9F/jkzwj8jF/gpY8Hl6HQbAQPU3j61ZvARvAm/fe430MwUKCrdUlG4cNRI/SKxkeDgr+s9pJU7V2RC9roCfzD2L0nm8LHiOuNErcoxdinAAMANFR0tbxjNA8AAAAASUVORK5CYII=') no-repeat 0 0;
  /*dot_Holiday.png*/
  color: #fff;
  display: block;
  font-size: 14px;
  font-size: 0.35rem;
  overflow: hidden;
  padding: 0 10px;
  padding: 0 0.25rem;
  position: absolute;
  top: 0;
  right: 10px;
  right: 0.25rem;
  text-align: center;
}
.osType310x200 strong {
  display: block;
  font-size: 18px;
  font-size: 0.45rem;
}
/* 300x200slidev2 - slider */
.osType300x200slidev2 {
  overflow: hidden;
}
.osType300x200slidev2 .osSlide {
  position: relative;
}
.osType300x200slidev2 span {
  display: block;
}
.osType300x200slidev2 .osPhoto {
  height: 190px;
  height: 4.75rem;
  overflow: hidden;
}
.osType300x200slidev2 .osPhoto img {
  height: 190px;
  height: 4.75rem;
}
.osType300x200slidev2 .osSlide .osDesc {
  width: 100%;
  background: url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkFGRjBCRDQ4RjA3NTExRTJCNTY3ODREMzMxOUI0NzQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkFGRjBCRDQ5RjA3NTExRTJCNTY3ODREMzMxOUI0NzQwIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QUZGMEJENDZGMDc1MTFFMkI1Njc4NEQzMzE5QjQ3NDAiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6QUZGMEJENDdGMDc1MTFFMkI1Njc4NEQzMzE5QjQ3NDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz7MsgsRAAAAGElEQVR42mL8////RAY0wMSABVAoCBBgAG+FA5h/DNr3AAAAAElFTkSuQmCC');
  /* for IE ie_opacity.png*/
  background: rgba(255, 255, 255, 0.7);
  padding: 5px 5px 5px 7px;
  padding: 0.125rem 0.125rem 0.125rem 0.175rem;
  position: absolute;
  bottom: 0;
  left: 0;
  overflow: hidden;
}
.osType300x200slidev2 .osSlide .osCity {
  height: 30px;
  height: 0.75rem;
  width: 180px;
  width: 4.5rem;
  color: #c4262e;
  font-size: 24px;
  font-size: 0.6rem;
  overflow: hidden;
  line-height: 29px;
  line-height: 0.725rem;
}
.osType300x200slidev2 .osSlide .osPrice {
  font-size: 14px;
  font-size: 0.35rem;
  width: 130px;
  width: 3.25rem;
  overflow: hidden;
  line-height: 18px;
  line-height: 0.45rem;
}
.osType300x200slidev2 .osSlide .osLead {
  height: 16px;
  height: 0.4rem;
  width: 180px;
  width: 4.5rem;
  overflow: hidden;
  line-height: 18px;
  line-height: 0.45rem;
}
.osType300x200slidev2 .osSlide .osOther {
  color: #fff;
  font-size: 18px;
  font-size: 0.45rem;
  font-weight: bold;
  line-height: 65px;
  line-height: 1.625rem;
  text-align: center;
  border-radius: 100%;
  background-color: #C4262E;
  width: 70px;
  width: 1.75rem;
  height: 70px;
  height: 1.75rem;
  position: absolute;
  bottom: -21px;
  bottom: -0.525rem;
  right: 14px;
  right: 0.35rem;
}
.osType300x200slidev3 {
  line-height: normal;
  height: 200px;
  height: 5rem;
  width: 300px;
  width: 7.5rem;
}
.osType300x200slidev3 ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
.osType300x200slidev3 form,
.osType300x200slidev3 input,
.osType300x200slidev3 button {
  line-height: normal;
  margin: 0;
}
.osType300x200slidev3 a {
  text-decoration: none;
}
.osType300x200slidev3 {
  height: 190px;
  height: 4.75rem;
  width: 300px;
  width: 7.5rem;
}
.osType300x200slidev3 .osSlide {
  position: relative;
  width: 300px;
  width: 7.5rem;
}
.osType300x200slidev3 .osSlide .flex-prev {
  width: 18px;
  width: 0.45rem;
  height: 26px;
  height: 0.65rem;
  background-image: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABIAAAAaCAYAAAC6nQw6AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAe1JREFUeNpiPKKmF8LAwBAOxIpALAfEokB8B4g/AvFBIN4BxLsZCABGoEH/GQiDp0DcCsSzgPgvNgVMDMQBaSCeBsRnoK4m2yAYMIAaZkOpQQzQMNwFxMaUGgQCnEC8GoiFKDWIARrLpdQwCATyoRGB2yB+c1MGywsnGaxvXgRjncVzGZg4ObB5MRanQTzamgyaUyfANX69doPhelY+w7/vP7Apj8JqEIe8HIPWnOkMzLw8YP6Ph48YriZnMPz9/AWX43WBWALFIDYJcQbdRXMYWIUEwfxfL14yXIlPZfj97j2hsFKHGwTSrDNvBtgwEABpBrnk5/MXxAS6EMIgYSEGNjExuMzvt+8Yfr58RXT0wQ36dvsuw7XMPHiAcqkqM2jNmIwtprCBdyhh9On0WYabRWUM/3//BvP5TIwY1Pu7GRhZWQkZdBMj1t7tO8hwu7KegeE/pHQRcrRjUG1vBBY4jLgMuQzEL7Cmo9ebtzLca2pH5FJfbwbl+ipcBq0EESy4ZJ8vW8nw8cw5BiYkb4G8CPM2FPwC4gV4DQJHwK3bhMKmD1p6UpRp7wNxN6W5/zsQh4LihhKDQJrdgPgsJSXkBSA2BOIj5JbZr4G4AIjNgfgRNgWgWIsG4hBoNaMCKtOgil9Dbd5KTAUJEGAApbyEiPYXIc4AAAAASUVORK5CYII=);
  position: absolute;
  left: 0;
  top: 37px;
  top: 0.925rem;
}
.osType300x200slidev3 .osSlide .flex-next {
  width: 18px;
  width: 0.45rem;
  height: 26px;
  height: 0.65rem;
  background-image: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABIAAAAaCAYAAAC6nQw6AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAgBJREFUeNpiPKKmx0AEcAViDyC2B2J+IFYB4tdA/AiI7wPxSkY8BjEDcRoQVwOxNCGbWHCIywHxRiA2YCASMGERswHiM6QYgs1FxkC8C4g5GUgEyC4SAuLV5BiCblApECsykAlgBoFiJZ+BAgALo1h0L3HIyzHoLp3PwCYqAub/ePiI4XJ0IsOv12/wuigKXQKk8WpSBsPfz1/gBmvPm8HAzMuD0yAJINbFJvnt1m2GqymZDP++/wDzudRUGbTnTGdg4uTAapA6Pr9/vnCJ4UZuEcP/37/BfF4DPQaNyX0MjKysqNkgSVjcCEiH4zPsx6PHDD8eP2EQcnZiYGRiZOAEepNDTpbh3d59DAz//+NM2VjB15u3Gf79+A7nc6upMDBxcKJ47R0hQ0ABrbNwNgMzNzc8Iq4kpDH8/foVxaCb+AxhkxAHxxarkCCY/+vFS4aryZkMv9++wwjsF0B8GZshrIICDNqzpzJwyEBKkd/vPzBcTc0GhxeudLQSQwIYxZozp4CjHARASeB6eg44SWADsIINZOU9kE/grgF6hV1SEq7w9/v3DD+fPSeYRZ4CcR8QV8A1vnsPxuTk/m5o+ctAaTECioZQIP5OqUEgcBaI3YhJW8SU2UeA2BCIL1BqEAO0vjIH4gJo/UUQMJJQQXpDaxhRaHX1EYjvQC1dAxBgAMhyi0MVC2VtAAAAAElFTkSuQmCC);
  position: absolute;
  right: 0;
  top: 37px;
  top: 0.925rem;
}
.osType300x200slidev3 .osSlide .slides {
  position: relative;
}
.osType300x200slidev3 .osSlide .slides li {
  width: 300px;
  width: 7.5rem;
}
.osType300x200slidev3 .osSlide .slides ul li a {
  color: #c4262e;
}
.osType300x200slidev3 span {
  display: block;
}
.osType300x200slidev3 .osDesc {
  height: 69px;
  height: 1.725rem;
  margin-top: -67px;
  margin-top: -1.675rem;
  background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkI1NDlCODhCQ0QwNTExRTI5RkQxOURGQkVBMEZGNTQ1IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkI1NDlCODhDQ0QwNTExRTI5RkQxOURGQkVBMEZGNTQ1Ij4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QjU0OUI4ODlDRDA1MTFFMjlGRDE5REZCRUEwRkY1NDUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6QjU0OUI4OEFDRDA1MTFFMjlGRDE5REZCRUEwRkY1NDUiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz6OL2n4AAAAGElEQVR42mL8////eQY0wMSABVAoCBBgAIf7A9aIgJJ4AAAAAElFTkSuQmCC) 0 0;
  /* for IE ie_opacity.png*/
  background: rgba(255, 255, 255, 0.8);
  padding: 1px 0 0 9px;
  padding: 0.025rem 0 0 0.225rem;
  z-index: 3;
  bottom: 0;
  left: 0;
  line-height: normal;
  overflow: hidden;
  position: relative;
}
.osType300x200slidev3 .osCity {
  height: 30px;
  height: 0.75rem;
  width: 270px;
  width: 6.75rem;
  color: #c4262e;
  font-size: 24px;
  font-size: 0.6rem;
  overflow: hidden;
  margin-top: 3px;
  margin-top: 0.075rem;
}
.osType300x200slidev3 .osPrice {
  font-size: 14px;
  font-size: 0.35rem;
  width: 130px;
  width: 3.25rem;
  overflow: hidden;
  margin-top: -1px;
  margin-top: -0.025rem;
}
.osType300x200slidev3 .osLead {
  height: 30px;
  height: 0.75rem;
  width: 260px;
  width: 6.5rem;
  overflow: hidden;
  margin-left: 1px;
  margin-left: 0.025rem;
  color: #18557f;
}
.osType300x200slidev3.wslider .osPhoto {
  height: 190px;
  height: 4.75rem;
}
.osType300x200slidev3.wslider .osPhoto img {
  height: 190px;
  height: 4.75rem;
}
.osType300x200slidev3 .osPhoto {
  height: 152px;
  height: 3.8rem;
  width: 280px;
  width: 7rem;
  z-index: 1;
}
.osType300x200slidev3 .osPhoto img {
  height: 152px;
  height: 3.8rem;
  width: 280px;
  width: 7rem;
}
.osType300x200slidev3 .osSearch {
  width: 300px;
  width: 7.5rem;
  height: 35px;
  height: 0.875rem;
  background: #18557f;
  margin: 0 auto;
}
.osType300x200slidev3 .osSearch .osEstates {
  color: #fff;
  width: 90px;
  width: 2.25rem;
  overflow: hidden;
  margin-top: 3px;
  margin-top: 0.075rem;
  margin-left: 10px;
  margin-left: 0.25rem;
  display: block;
  float: left;
}
.osType300x200slidev3 .osSearch .osSearchBox {
  height: 19px;
  height: 0.475rem;
  width: 109px;
  width: 2.725rem;
  float: left;
  background: #FFF;
  margin-left: 20px;
  margin-left: 0.5rem;
  margin-top: 7px;
  margin-top: 0.175rem;
  border: none;
  border-radius: 2px;
  border-radius: 0.05rem;
  padding: 0 0 0 6px;
  padding: 0 0 0 0.15rem;
}
.osType300x200slidev3 .osSearch .osSearchButton {
  float: right;
  width: 44px;
  width: 1.1rem;
  height: 17px;
  height: 0.425rem;
  margin-right: 6px;
  margin-right: 0.15rem;
  margin-top: 9px;
  margin-top: 0.225rem;
  background-color: #c4262e;
  color: white;
  border: 0;
  cursor: pointer;
  border-radius: 2px;
  border-radius: 0.05rem;
  font-size: 12px;
  font-size: 0.3rem;
  padding: 1px;
  padding: 0.025rem;
}
@-moz-document url-prefix() {
  .osType300x200slidev3 .osSearch .osSearchButton {
    padding-bottom: 13px;
    padding-bottom: 0.325rem;
  }
  .osType300x200slidev3 .osSearch .osEstates {
    margin-top: 1px;
    margin-top: 0.025rem;
  }
  .osType300x200slidev3 .osSearch .osSearchButton {
    line-height: 12px;
    line-height: 0.3rem;
  }
}
.osHeader {
  width: 925px;
  width: 23.125rem;
  text-align: left;
  position: relative;
}
#ecommerce .osHeader h1 {
  position: relative;
  display: block;
  left: 14px;
  left: 0.35rem;
  top: 19px;
  top: 0.475rem;
  text-transform: uppercase;
  color: #1e1e1e;
  background: none;
  font-family: "Fira Sans", Arial, sans-serif;
  font-size: 15px;
  font-size: 0.375rem;
  z-index: 2;
  padding-right: 13px;
  padding-right: 0.325rem;
}
.osHeader:after {
  content: "";
  background: #ffd200;
  border: none;
  position: absolute;
  top: 14px;
  top: 0.35rem;
  left: 0;
  width: 30px;
  width: 0.75rem;
  height: 30px;
  height: 0.75rem;
  border-radius: 50%;
}
.osLine {
  margin: 5px;
  margin: 0.125rem;
  height: 24px;
  height: 0.6rem;
  width: 920px;
  width: 23rem;
  border-bottom: solid 1px;
  border-bottom: solid 0.025rem;
  border-color: #cecece;
}
.osBorder {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  border: 1px solid #cecece;
  padding: 0;
}
#soGridAdsContainer {
  margin-left: 30px;
  margin-left: 0.75rem;
  margin-top: 5px;
  margin-top: 0.125rem;
}
#soGridAdsContainer .ad_adInfo {
  font: 9px Verdana, Arial, Helvetica, sans-serif;
  font: 0.225rem Verdana, Arial, Helvetica, sans-serif;
}
#strona-gwna-oferty-content-rwd {
  display: block;
  width: 270px;
  width: 6.75rem;
  height: 508px;
  height: 12.7rem;
}
.noRem #strona-gwna-oferty-content-rwd {
  width: 925px;
  height: 100px;
  margin: 12px 0;
}

#sponsoredSectionWrapper {
  position: relative;
  height: 192px;
  height: 6rem;
}
.sponsoredBoxHeader * {
  font-family: 'Open Sans', Arial, sans-serif;
  color: #ae0001;
}
.sponsoredBoxHeader h1 {
  line-height: 20px;
  line-height: 0.625rem;
  margin-top: 9px !important;
  margin-top: 0.28125rem !important;
  margin-right: auto !important;
  margin-bottom: 9px !important;
  margin-bottom: 0.28125rem !important;
  margin-left: auto !important;
  display: table;
  background: #fff;
  position: relative;
  z-index: 2;
  padding-left: 16px;
  padding-left: 0.5rem;
  padding-right: 16px;
  padding-right: 0.5rem;
  font-size: 17px !important;
  font-size: 0.53125rem !important;
  text-transform: uppercase;
}
.sponsoredBoxHeader h1 a {
  color: #ae0001;
}
.sponsoredSection {
  position: relative;
  width: 174px;
  width: 5.4375rem;
}
.sponsoredSection * {
  font-family: 'Open Sans', Arial, sans-serif;
  color: #ae0001;
}
.sponsoredSection:after {
  color: #ae0001;
  content: "";
  border-bottom: solid;
  border-bottom-width: 2.4px;
  border-bottom-width: 0.075rem;
  position: absolute;
  top: -20px;
  top: -0.625rem;
  left: 0;
  width: 100%;
}
.sponsoredSection .sponsoredBox_4_1 {
  width: 174px;
  width: 5.4375rem;
  float: left;
  display: block;
  position: relative;
  z-index: 1;
  text-decoration: none;
}
.sponsoredSection .sponsoredBox_4_1:hover {
  text-decoration: none;
}
.sponsoredSection .sponsoredBox_4_1:hover:after {
  position: absolute;
  content: '';
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  z-index: 2;
}
.sponsoredSection .sponsoredBox_4_1 img {
  width: 174px;
  width: 5.4375rem;
  height: 107px;
  height: 3.34375rem;
  display: block;
}
.sponsoredSection .sponsoredBox_4_1 .sponsoredTextItem {
  font-size: 14.4px;
  font-size: 0.45rem;
  padding-top: 6px;
  padding-top: 0.1875rem;
  padding-left: 12px;
  padding-left: 0.375rem;
  padding-right: 12px;
  padding-right: 0.375rem;
  line-height: 1.22;
  display: block;
  position: relative;
}
.sponsoredSection .sponsoredBox_4_1 .sponsoredTextItem .sponsoredDesc {
  color: #292929;
  display: block;
  font-size: 11.5px;
  font-size: 0.359375rem;
  margin-top: 2px;
  margin-top: 0.0625rem;
}
.sponsoredSection .sponsoredBox_4_1 .sponsoredTextItem .sponsoredHeading,
.sponsoredSection .sponsoredBox_4_1 .sponsoredTextItem .sponsoredLink {
  font-weight: 700;
}
.sponsoredSection .sponsoredBox_4_1 .sponsoredTextItem .sponsoredOfferLink {
  text-align: right;
  font-size: 12px;
  font-size: 0.375rem;
  font-weight: 600;
  margin-top: 8px;
  margin-top: 0.25rem;
  margin-left: 1px;
  margin-left: 0.03125rem;
  display: block;
}
.sponsoredSection .sponsoredBox_4_1 .sponsoredTextItem .sponsoredOfferTag {
  color: #d71f27;
  font-weight: 600;
  border: 2px solid #d71f27;
  text-align: center;
  padding: 2px 10px;
  padding: 0.0625rem 0.3125rem;
  border-radius: 4px;
  border-radius: 0.125rem;
  float: right;
  bottom: 6px;
  bottom: 0.1875rem;
  right: 13px;
  right: 0.40625rem;
  display: inline-block;
  font-size: 13px;
  font-size: 0.40625rem;
  margin-top: 4px;
  margin-top: 0.125rem;
}
.hideDescAndC2A {
  height: 125px !important;
  height: 3.90625rem !important;
}
.hideDescAndC2A .sponsoredBox_4_1 .sponsoredDesc {
  display: none !important;
}
.hideDescAndC2A .sponsoredBox_4_1 .sponsoredOfferLink {
  display: none !important;
}
.hideDescAndC2A .sponsoredBox_4_1 .sponsoredOfferTag {
  display: none !important;
}

.sponsoredSection .sponsoredTextItem {
}</style><style type="text/css" data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">.ad_outter {
  font-size: 0;
}
#onet-ad-flat-boxday1:hover .ad_adInfo,
#onet-ad-flat-boxday2:hover .ad_adInfo {
  visibility: visible !important;
}
.ad_default {
  margin: 10px auto;
  margin: 0.3125rem auto;
}
.ad_adScroll {
  display: none;
}
#onet-ad-flat-gigaboard1 .ad_outter .ad_adInfo,
#onet-ad-flat-gigaboard2 .ad_outter .ad_adInfo {
  float: left;
}
#onet-ad-flat-gigaboard1 .ad_outter .ad_adScroll,
#onet-ad-flat-gigaboard2 .ad_outter .ad_adScroll {
  display: block;
  cursor: pointer;
  width: auto;
  float: right;
}
#onet-ad-flat-gigaboard1 .ad_outter .ad_adScroll .ad_adArrowDown,
#onet-ad-flat-gigaboard2 .ad_outter .ad_adScroll .ad_adArrowDown {
  width: 0;
  height: 0;
  border-top: 5px solid #696969;
  border-top: 0.15625rem solid #696969;
  border-left: 5px solid transparent;
  border-left: 0.15625rem solid transparent;
  border-right: 5px solid transparent;
  border-right: 0.15625rem solid transparent;
  bottom: 0;
  display: inline-block;
}
</style><link href="onet_pliki/style.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="onet_pliki/MTMwMjY2MDQxL2J1aWxkL2FkcC9hZHAubWlu.js" charset="UTF-8" async=""></script><script type="text/javascript" src="onet_pliki/cmp.js" charset="UTF-8" async=""></script><script type="text/javascript" src="onet_pliki/uststd.js" async="" defer="defer"></script><script type="text/javascript" src="onet_pliki/main_002.js" async="" defer="defer"></script><script type="text/javascript" src="onet_pliki/main.js" async="" defer="defer"></script><style type="text/css">.cmp-app_gdpr{
  /*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */font-family:Helvetica Neue,arial,sans-serif;font-weight:400;font-size:16px;line-height:1.5}.cmp-app_gdpr html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}.cmp-app_gdpr body{margin:0}.cmp-app_gdpr article,.cmp-app_gdpr aside,.cmp-app_gdpr footer,.cmp-app_gdpr header,.cmp-app_gdpr nav,.cmp-app_gdpr section{display:block}.cmp-app_gdpr h1{font-size:2em;margin:.67em 0}.cmp-app_gdpr figcaption,.cmp-app_gdpr figure,.cmp-app_gdpr main{display:block}.cmp-app_gdpr figure{margin:1em 40px}.cmp-app_gdpr hr{box-sizing:content-box;height:0;overflow:visible}.cmp-app_gdpr pre{font-family:monospace,monospace;font-size:1em}.cmp-app_gdpr a{background-color:transparent;-webkit-text-decoration-skip:objects}.cmp-app_gdpr abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}.cmp-app_gdpr b,.cmp-app_gdpr strong{font-weight:inherit;font-weight:bolder}.cmp-app_gdpr code,.cmp-app_gdpr kbd,.cmp-app_gdpr samp{font-family:monospace,monospace;font-size:1em}.cmp-app_gdpr dfn{font-style:italic}.cmp-app_gdpr mark{background-color:#ff0;color:#000}.cmp-app_gdpr small{font-size:80%}.cmp-app_gdpr sub,.cmp-app_gdpr sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}.cmp-app_gdpr sub{bottom:-.25em}.cmp-app_gdpr sup{top:-.5em}.cmp-app_gdpr audio,.cmp-app_gdpr video{display:inline-block}.cmp-app_gdpr audio:not([controls]){display:none;height:0}.cmp-app_gdpr img{border-style:none}.cmp-app_gdpr svg:not(:root){overflow:hidden}.cmp-app_gdpr button,.cmp-app_gdpr input,.cmp-app_gdpr optgroup,.cmp-app_gdpr select,.cmp-app_gdpr textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}.cmp-app_gdpr button,.cmp-app_gdpr input{overflow:visible}.cmp-app_gdpr button,.cmp-app_gdpr select{text-transform:none}.cmp-app_gdpr [type=reset],.cmp-app_gdpr [type=submit],.cmp-app_gdpr button,.cmp-app_gdpr html [type=button]{-webkit-appearance:button}.cmp-app_gdpr [type=button]::-moz-focus-inner,.cmp-app_gdpr [type=reset]::-moz-focus-inner,.cmp-app_gdpr [type=submit]::-moz-focus-inner,.cmp-app_gdpr button::-moz-focus-inner{border-style:none;padding:0}.cmp-app_gdpr [type=button]:-moz-focusring,.cmp-app_gdpr [type=reset]:-moz-focusring,.cmp-app_gdpr [type=submit]:-moz-focusring,.cmp-app_gdpr button:-moz-focusring{outline:1px dotted ButtonText}.cmp-app_gdpr fieldset{padding:.35em .75em .625em}.cmp-app_gdpr legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}.cmp-app_gdpr progress{display:inline-block;vertical-align:baseline}.cmp-app_gdpr textarea{overflow:auto}.cmp-app_gdpr [type=checkbox],.cmp-app_gdpr [type=radio]{box-sizing:border-box;padding:0}.cmp-app_gdpr [type=number]::-webkit-inner-spin-button,.cmp-app_gdpr [type=number]::-webkit-outer-spin-button{height:auto}.cmp-app_gdpr [type=search]{-webkit-appearance:textfield;outline-offset:-2px}.cmp-app_gdpr [type=search]::-webkit-search-cancel-button,.cmp-app_gdpr [type=search]::-webkit-search-decoration{-webkit-appearance:none}.cmp-app_gdpr ::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.cmp-app_gdpr details,.cmp-app_gdpr menu{display:block}.cmp-app_gdpr summary{display:list-item}.cmp-app_gdpr canvas{display:inline-block}.cmp-app_gdpr [hidden],.cmp-app_gdpr template{display:none}.cmp-app_gdpr *{box-sizing:border-box}.cmp-app_gdpr a{text-decoration:none;color:#6549cb;cursor:pointer}.cmp-app_gdpr a:hover{color:#3b2787}.cmp-app_gdpr table{margin:0}.cmp-app_gdpr input:not([type]),.cmp-app_gdpr input[type=password],.cmp-app_gdpr input[type=text]{box-sizing:border-box;box-shadow:inset 0 3px 3px rgba(0,0,0,.05);background-color:#fff;border-radius:4px;border:1px solid #c5c5c5;color:#333;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:1em;margin:0;padding:0 9px;height:28px}</style><style type="text/css">.cmp-popup_popup{display:none;z-index:99999;justify-content:center;align-items:center}.cmp-popup_overlay,.cmp-popup_popup{position:fixed;top:0;bottom:0;left:0;right:0}.cmp-popup_overlay{background-color:rgba(0,0,0,.5)}.cmp-popup_content{width:700px;height:500px;background:#fff;display:flex;align-items:center;position:relative}@media only screen and (min-device-width:320px) and (max-device-width:480px){.cmp-popup_content{width:98%;height:98%}}</style><style type="text/css">div.cmp-intro_intro{display:block;padding:0 8%;max-height:100%}div.cmp-intro_intro .cmp-intro_title{font-size:30px;font-weight:700;text-align:center}div.cmp-intro_intro .cmp-intro_description{margin:4% 0;overflow:auto;height:270px}div.cmp-intro_intro .cmp-intro_options{display:flex;flex-shrink:0;width:100%;padding-bottom:10px}div.cmp-intro_intro .cmp-intro_rejectAll{flex:1;margin-right:10px}div.cmp-intro_intro .cmp-intro_acceptAll{flex:1}</style><style type="text/css">button.cmp-button_button,input[type=button].cmp-button_button{cursor:pointer;outline:none;padding:1em;background:#6549cb;color:#fff;border:none;border-radius:4px;font-size:1em;font-weight:700;text-transform:uppercase}button.cmp-button_button:hover,input[type=button].cmp-button_button:hover{color:#3b2787}button.cmp-button_button.cmp-button_invert,input[type=button].cmp-button_button.cmp-button_invert{background:#fff;border:2px solid #6549cb;color:#6549cb}button.cmp-button_button.cmp-button_invert:hover,input[type=button].cmp-button_button.cmp-button_invert:hover{color:#a898e2}</style><style type="text/css">.cmp-closebutton_closeButton{fill:#6549cb;width:30px;height:30px;cursor:pointer;position:absolute;top:-10px;right:-10px}.cmp-closebutton_closeButton.cmp-closebutton_hasBorder{background-color:#fff;border-radius:50%;box-shadow:0 0 0 3px #6549cb}</style><style type="text/css">.cmp-details_details{display:flex;flex-direction:column;flex:1;height:100%}.cmp-details_details .cmp-details_header{display:flex;align-items:center;justify-content:center;text-transform:uppercase;font-weight:700;border-bottom:1px solid #eaeaea;flex:0 0 60px}.cmp-details_details .cmp-details_body{flex:1;display:flex;min-height:0}.cmp-details_details .cmp-details_footer{display:flex;align-items:center;justify-content:flex-end;flex:0 1 80px;border-top:1px solid #eaeaea}.cmp-details_details .cmp-details_save{margin-right:20px;width:205px}.cmp-details_details .cmp-details_cancel{margin-right:25px}</style><style type="text/css">.cmp-purposes_purposes{display:flex;flex:1}.cmp-purposes_purposes .cmp-purposes_purposeList{font-size:12px;font-weight:700;flex:1;max-width:200px;border-right:1px solid #eaeaea;overflow-y:auto;overflow-x:hidden}.cmp-purposes_purposes .cmp-purposes_purposeItem{display:flex;align-items:center;height:50px;padding-left:10px;background-color:#eaeaea;border-bottom:1px solid #fff;cursor:pointer}.cmp-purposes_purposes .cmp-purposes_purposeItem:last-child{border-bottom:1px solid #eaeaea}.cmp-purposes_purposes .cmp-purposes_purposeItem.cmp-purposes_selectedPurpose{background-color:#fff;cursor:auto}.cmp-purposes_purposes .cmp-purposes_purposeDescription{flex:1;padding:20px;overflow:auto}.cmp-purposes_purposes .cmp-purposes_purposeDetail .cmp-purposes_detailHeader{display:flex;flex-wrap:wrap}.cmp-purposes_purposes .cmp-purposes_purposeDetail .cmp-purposes_title{font-size:24px;font-weight:700;flex:1 1 auto}@media only screen and (min-device-width:320px) and (max-device-width:480px){.cmp-purposes_purposes .cmp-purposes_purposeDetail .cmp-purposes_title{font-size:20px;padding-bottom:5px}}.cmp-purposes_purposes .cmp-purposes_purposeDetail .cmp-purposes_active{color:#6549cb;font-weight:700;display:flex;align-items:center}@media only screen and (min-device-width:320px) and (max-device-width:480px){.cmp-purposes_purposes .cmp-purposes_purposeDetail .cmp-purposes_active{flex:1 1 auto}}.cmp-purposes_purposes .cmp-purposes_purposeDetail .cmp-purposes_body{margin:5% 0}.cmp-purposes_purposes .cmp-purposes_vendorLink{display:block;margin-top:30px;font-size:12px}</style><style type="text/css">.cmp-switch_switch{cursor:pointer;display:inline-block;height:28px;position:relative;user-select:none;width:50px}.cmp-switch_switch .cmp-switch_isDisabled{cursor:not-allowed}.cmp-switch_switch .cmp-switch_native{opacity:0}.cmp-switch_switch .cmp-switch_visualizationContainer{background-color:#eaeaea;border-radius:11px;height:22px;left:3px;position:absolute;top:3px;transition:.1s linear;width:44px}.cmp-switch_switch .cmp-switch_visualizationGlow{background-color:#6549cb;border-radius:9px;height:18px;left:5px;opacity:0;position:absolute;top:5px;transition:.1s linear;width:18px}.cmp-switch_switch .cmp-switch_visualizationHandle{background-color:#fff;border-radius:8px;height:16px;left:6px;position:absolute;top:6px;transition:.1s linear;width:16px}.cmp-switch_switch:hover .cmp-switch_visualizationGlow{opacity:.3;transform:scale(1.556)}.cmp-switch_switch:hover .cmp-switch_visualizationHandle{transform:scale(1.125)}.cmp-switch_switch.cmp-switch_isSelected .cmp-switch_visualizationContainer{background-color:#6549cb}.cmp-switch_switch.cmp-switch_isSelected .cmp-switch_visualizationGlow,.cmp-switch_switch.cmp-switch_isSelected .cmp-switch_visualizationHandle{transform:translate(22px)}.cmp-switch_switch.cmp-switch_isSelected:hover .cmp-switch_visualizationGlow{transform:translate(22px) scale(1.556)}.cmp-switch_switch.cmp-switch_isSelected:hover .cmp-switch_visualizationHandle{transform:translate(22px) scale(1.125)}</style><style type="text/css">div.cmp-vendors_vendors{display:flex;flex-direction:column;padding:2%;overflow:scroll;-webkit-overflow-scrolling:touch}div.cmp-vendors_vendors .cmp-vendors_header{display:flex;flex-shrink:0}@media only screen and (min-device-width:320px) and (max-device-width:480px){div.cmp-vendors_vendors .cmp-vendors_header{flex-direction:column;align-items:center}}div.cmp-vendors_vendors .cmp-vendors_title{flex:1;font-size:24px;font-weight:700}@media only screen and (min-device-width:320px) and (max-device-width:480px){div.cmp-vendors_vendors .cmp-vendors_title{text-align:center;padding-bottom:5px}}div.cmp-vendors_vendors .cmp-vendors_button{min-width:140px;padding:8px;white-space:nowrap}div.cmp-vendors_vendors .cmp-vendors_button:first-child{margin-right:10px}@media only screen and (min-device-width:320px) and (max-device-width:480px){div.cmp-vendors_vendors .cmp-vendors_button{flex:1}}div.cmp-vendors_vendors .cmp-vendors_options{display:flex}@media only screen and (min-device-width:320px) and (max-device-width:480px){div.cmp-vendors_vendors .cmp-vendors_options{width:100%}}div.cmp-vendors_vendors .cmp-vendors_description{margin:20px 0;flex-shrink:0}div.cmp-vendors_vendors .cmp-vendors_vendorHeader{display:flex;flex-shrink:0}div.cmp-vendors_vendors .cmp-vendors_vendorContent{display:flex}div.cmp-vendors_vendors .cmp-vendors_vendorList{border:1px solid #eaeaea}div.cmp-vendors_vendors .cmp-vendors_vendorName{min-height:30px;display:flex;align-items:center}div.cmp-vendors_vendors table{width:100%;border-collapse:collapse}div.cmp-vendors_vendors table thead tr{background-color:#f7f7f7;border:1px solid #eaeaea;text-transform:uppercase}div.cmp-vendors_vendors table tr{min-height:40px}div.cmp-vendors_vendors table tr th{font-weight:700}div.cmp-vendors_vendors table tr td,div.cmp-vendors_vendors table tr th{text-align:left;padding:5px}div.cmp-vendors_vendors table tr td:first-child,div.cmp-vendors_vendors table tr th:first-child{width:100%}div.cmp-vendors_vendors table tr td:last-child,div.cmp-vendors_vendors table tr th:last-child{padding-right:25px}div.cmp-vendors_vendors table tr.cmp-vendors_even{background-color:#f7f7f7}</style><style type="text/css">.cmp-footer_footer{position:fixed;left:0;right:0;bottom:0;z-index:99999;height:60px;display:none;align-items:center;justify-content:center;background:#fff;border-top:2px solid #6549cb}.cmp-footer_footer .cmp-footer_openConsent{margin-left:3px}.cmp-footer_footer .cmp-footer_close{right:0;top:0}</style><script type="text/javascript" src="onet_pliki/pulsembed.js" async="" defer="defer"></script></head>
    <body class="rem40" data-run-module="local/main.renderBoxBody" data-static-gradient-best-big="https://ocdn.eu/images/pulscms/ODU7MDA_/274c1d6467082c3e6dfe9d09f4a6df6b.png" data-static-gradient-best-small="https://ocdn.eu/images/pulscms/NTU7MDA_/d82c1d8478432c012f59203ae4478e61.png" data-static-gradient-vignette="https://ocdn.eu/images/pulscms/NTM7MDA_/71e18f003aaa58975202af5948ff6fc1.png" data-static-logoutsympatia="https://ocdn.eu/onetmobilemainpage/mainpage_desktop/logout/logoutsympatia.png" data-static-logoutnk="https://ocdn.eu/onetmobilemainpage/mainpage_desktop/logout/logoutnk.png" data-static-logoutzapytaj="https://ocdn.eu/onetmobilemainpage/mainpage_desktop/logout/logoutzapytaj.png" data-static-closedblog="https://ocdn.eu/onetmobilemainpage/mainpage_desktop/404/blog_404.png" data-static-closedrepublika="https://ocdn.eu/onetmobilemainpage/mainpage_desktop/404/republika_404.png" id="pageMainContainer" data-run-module-isrun="1">
        <noscript>
            <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-P85SF2J" height="0" width="0" style="display:none;visibility:hidden"></iframe>
        </noscript>
        <noscript>
            <img height="1" width="1" src="https://kropka.onet.pl/_s/kropka/1?DV=www" alt=""/>
        </noscript>
    <svg class="mainIconPack" version="1.1" xmlns="http://www.w3.org/2000/svg">
    <defs>
        <symbol id="menuOpenIcon" viewBox="0 0 24 24">
            <path transform="matrix(1 0 0 1 4.9999999999999964 5)" width="4" height="4" stroke-width="0" stroke-miterlimit="3" stroke="#000000" fill="#000000" d="M0,2.000000000000001 C0,0.8954303999999986 0.8954303999999986,0 2,0 C3.104569599999998,0 4,0.8954303999999986 4,2.000000000000001 C4,3.1045696000000014 3.104569599999998,4 2,4 C0.8954303999999986,4 0,3.1045696000000014 0,2.000000000000001 Z "></path>
            <path transform="matrix(1 0 0 1 9.999999999999996 5)" width="4" height="4" stroke-width="0" stroke-miterlimit="3" stroke="#000000" fill="#000000" d="M0,2.000000000000001 C0,0.8954303999999986 0.8954303999999986,0 2,0 C3.104569599999998,0 4,0.8954303999999986 4,2.000000000000001 C4,3.1045696000000014 3.104569599999998,4 2,4 C0.8954303999999986,4 0,3.1045696000000014 0,2.000000000000001 Z "></path>
            <path transform="matrix(1 0 0 1 15 5)" width="4" height="4" stroke-width="0" stroke-miterlimit="3" stroke="#000000" fill="#000000" d="M0,2.000000000000001 C0,0.8954303999999986 0.8954303999999986,0 2,0 C3.104569599999998,0 4,0.8954303999999986 4,2.000000000000001 C4,3.1045696000000014 3.104569599999998,4 2,4 C0.8954303999999986,4 0,3.1045696000000014 0,2.000000000000001 Z "></path>
            <path transform="matrix(1 0 0 1 4.9999999999999964 10.100000000000001)" width="4" height="4" stroke-width="0" stroke-miterlimit="3" stroke="#000000" fill="#000000" d="M0,2.000000000000001 C0,0.8954303999999986 0.8954303999999986,0 2,0 C3.104569599999998,0 4,0.8954303999999986 4,2.000000000000001 C4,3.1045696000000014 3.104569599999998,4 2,4 C0.8954303999999986,4 0,3.1045696000000014 0,2.000000000000001 Z "></path>
            <path transform="matrix(1 0 0 1 9.999999999999996 10.000000000000002)" width="4" height="4" stroke-width="0" stroke-miterlimit="3" stroke="#000000" fill="#000000" d="M0,2.000000000000001 C0,0.8954303999999986 0.8954303999999986,0 2,0 C3.104569599999998,0 4,0.8954303999999986 4,2.000000000000001 C4,3.1045696000000014 3.104569599999998,4 2,4 C0.8954303999999986,4 0,3.1045696000000014 0,2.000000000000001 Z "></path>
            <path transform="matrix(1 0 0 1 15 10)" width="4" height="4" stroke-width="0" stroke-miterlimit="3" stroke="#000000" fill="#000000" d="M0,2.000000000000001 C0,0.8954303999999986 0.8954303999999986,0 2,0 C3.104569599999998,0 4,0.8954303999999986 4,2.000000000000001 C4,3.1045696000000014 3.104569599999998,4 2,4 C0.8954303999999986,4 0,3.1045696000000014 0,2.000000000000001 Z "></path>
            <path transform="matrix(1 0 0 1 4.9999999999999964 15)" width="4" height="4" stroke-width="0" stroke-miterlimit="3" stroke="#000000" fill="#000000" d="M0,2.000000000000001 C0,0.8954303999999986 0.8954303999999986,0 2,0 C3.104569599999998,0 4,0.8954303999999986 4,2.000000000000001 C4,3.1045696000000014 3.104569599999998,4 2,4 C0.8954303999999986,4 0,3.1045696000000014 0,2.000000000000001 Z "></path>
            <path transform="matrix(1 0 0 1 9.999999999999996 15)" width="4" height="4" stroke-width="0" stroke-miterlimit="3" stroke="#000000" fill="#000000" d="M0,2.000000000000001 C0,0.8954303999999986 0.8954303999999986,0 2,0 C3.104569599999998,0 4,0.8954303999999986 4,2.000000000000001 C4,3.1045696000000014 3.104569599999998,4 2,4 C0.8954303999999986,4 0,3.1045696000000014 0,2.000000000000001 Z "></path>
        </symbol>
        <symbol id="menuCloseIcon" viewBox="0 0 24 24">
            <path d="M294,95.01a12,12,0,1,1,12-12A12.014,12.014,0,0,1,294,95.01Zm0-23.144A11.143,11.143,0,1,0,305.144,83.01,11.157,11.157,0,0,0,294,71.867Zm-5.012,7.1,0.5-.525,9.522,8.592-0.5.525Zm9.216-.976,0.549,0.5-8.962,9.521-0.549-.5Z" transform="translate(-282 -71)"></path>
        </symbol>
        <symbol id="poweredByGoogle" viewBox="0 0 259.33 40.91">
            <defs>
                <style data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">
                    .google1 {
                        fill: #ea4335;
                        fill-opacity: 0.8;
                    }

                    .google2 {
                        fill: #fbbc05;
                        fill-opacity: 0.8;
                    }

                    .google3 {
                        fill: #4285f4;
                        fill-opacity: 0.8;
                    }

                    .google4 {
                        fill: #34a853;
                        fill-opacity: 0.8;
                    }

                    .google5 {
                        fill: #c8c8c8;
                        fill-opacity: 0.8;
                    }
                </style>
            </defs>
            <path class="google1" d="M190.9,49.85a10.26,10.26,0,1,1-10.26-10.22A10.1,10.1,0,0,1,190.9,49.85Zm-4.49,0a5.78,5.78,0,1,0-11.53,0A5.78,5.78,0,1,0,186.41,49.85Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google2" d="M213,49.85a10.26,10.26,0,1,1-10.26-10.22A10.1,10.1,0,0,1,213,49.85Zm-4.49,0a5.78,5.78,0,1,0-11.53,0A5.78,5.78,0,1,0,208.54,49.85Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google3" d="M234.23,40.24V58.6c0,7.55-4.45,10.63-9.72,10.63a9.74,9.74,0,0,1-9.06-6l3.91-1.63a5.65,5.65,0,0,0,5.15,3.63c3.37,0,5.46-2.08,5.46-6V57.74h-0.16a7,7,0,0,1-5.38,2.32,10.23,10.23,0,0,1,0-20.44,7.08,7.08,0,0,1,5.38,2.29H230V40.25h4.26Zm-3.95,9.64c0-3.6-2.4-6.23-5.46-6.23a5.91,5.91,0,0,0-5.69,6.23A5.87,5.87,0,0,0,224.83,56C227.88,56,230.28,53.45,230.28,49.88Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google4" d="M241.26,29.48v30h-4.38v-30h4.38Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google1" d="M258.32,53.21l3.48,2.32a10.18,10.18,0,0,1-8.52,4.53,10,10,0,0,1-10.15-10.22c0-6.08,4.37-10.22,9.64-10.22s7.9,4.22,8.75,6.5L262,47.28l-13.67,5.66a5.2,5.2,0,0,0,5,3.1,5.83,5.83,0,0,0,5-2.83h0ZM247.6,49.53l9.14-3.79a4,4,0,0,0-3.79-2.17A5.61,5.61,0,0,0,247.6,49.53Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google3" d="M153.81,47.19V42.85h14.62a14.37,14.37,0,0,1,.22,2.62c0,3.25-.89,7.28-3.76,10.15a14.52,14.52,0,0,1-11.07,4.45,16.1,16.1,0,0,1-16.11-15.87,16.1,16.1,0,0,1,16.11-15.87,15.13,15.13,0,0,1,10.88,4.37l-3.06,3.06a11.06,11.06,0,0,0-7.82-3.1,11.54,11.54,0,0,0,0,23.07,10.62,10.62,0,0,0,8-3.18,9,9,0,0,0,2.35-5.37H153.81Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M12.08,54.26H4.79a4.45,4.45,0,0,0,1,2.78,2.77,2.77,0,0,0,2.13.89,4.64,4.64,0,0,0,1.52-.24,6.16,6.16,0,0,0,1.45-.76l0.87,1.19a6.32,6.32,0,0,1-4,1.43A4.63,4.63,0,0,1,4,58a6.4,6.4,0,0,1-1.33-4.29,8.14,8.14,0,0,1,.57-3.16,5,5,0,0,1,1.65-2.16,4.18,4.18,0,0,1,2.53-.78,4.24,4.24,0,0,1,3.49,1.5,6.4,6.4,0,0,1,1.21,4.14Q12.12,53.74,12.08,54.26Zm-1.93-1.6a4.23,4.23,0,0,0-.67-2.58,2.37,2.37,0,0,0-2-.89q-2.45,0-2.67,3.6h5.36V52.65Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M23.23,48.53a3.58,3.58,0,0,1,.88,2.56v8.2h-2V51.37a2.54,2.54,0,0,0-.46-1.71,1.73,1.73,0,0,0-1.34-.5,2.6,2.6,0,0,0-1.6.52,5.41,5.41,0,0,0-1.3,1.5v8.11h-2V47.86h1.71l0.17,1.69a4.51,4.51,0,0,1,1.51-1.43,3.9,3.9,0,0,1,2-.52A3.19,3.19,0,0,1,23.23,48.53Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M35.94,48.53a3.58,3.58,0,0,1,.88,2.56v8.2h-2V51.37a2.5,2.5,0,0,0-.47-1.71,1.77,1.77,0,0,0-1.36-.5,2.56,2.56,0,0,0-1.58.52,5.49,5.49,0,0,0-1.3,1.47v8.13h-2v-16l2-.22v6.38A4,4,0,0,1,33.5,47.6,3.19,3.19,0,0,1,35.94,48.53Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M48.77,57.65a1.46,1.46,0,0,0,.72.51L49,59.55A3.05,3.05,0,0,1,47.6,59a2.29,2.29,0,0,1-.8-1.21,3.83,3.83,0,0,1-3.4,1.71,3.65,3.65,0,0,1-2.67-1,3.33,3.33,0,0,1-1-2.49,3.28,3.28,0,0,1,1.31-2.8,6.14,6.14,0,0,1,3.72-1h1.76V51.48a2.22,2.22,0,0,0-.59-1.74,2.65,2.65,0,0,0-1.8-.52,10.07,10.07,0,0,0-3.08.61l-0.5-1.45a11.5,11.5,0,0,1,3.95-.78,4.12,4.12,0,0,1,3,1,3.78,3.78,0,0,1,1,2.81v5.23A1.79,1.79,0,0,0,48.77,57.65Zm-2.23-1.38V53.65H45q-3.17,0-3.17,2.34a2.14,2.14,0,0,0,.5,1.54,2,2,0,0,0,1.47.52A3,3,0,0,0,46.53,56.27Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M60.45,48.53a3.58,3.58,0,0,1,.88,2.56v8.2h-2V51.37a2.54,2.54,0,0,0-.46-1.71,1.73,1.73,0,0,0-1.34-.5,2.6,2.6,0,0,0-1.6.52,5.41,5.41,0,0,0-1.3,1.5v8.11h-2V47.86h1.71l0.17,1.69A4.51,4.51,0,0,1,56,48.12a3.9,3.9,0,0,1,2-.52A3.19,3.19,0,0,1,60.45,48.53Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M71.36,47.89a5.2,5.2,0,0,1,1.63.94l-1,1.3a4.59,4.59,0,0,0-1.15-.67,3.56,3.56,0,0,0-1.28-.22,2.48,2.48,0,0,0-2.16,1.11,5.73,5.73,0,0,0-.77,3.27,5.41,5.41,0,0,0,.76,3.2,2.53,2.53,0,0,0,2.17,1,3.39,3.39,0,0,0,1.25-.22,5,5,0,0,0,1.2-.72l1,1.37a5.43,5.43,0,0,1-3.49,1.26A4.55,4.55,0,0,1,65.84,58a6.43,6.43,0,0,1-1.33-4.31,7.78,7.78,0,0,1,.61-3.19,4.89,4.89,0,0,1,1.72-2.13,4.61,4.61,0,0,1,2.66-.76A5.67,5.67,0,0,1,71.36,47.89Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M84.07,54.26H76.78a4.45,4.45,0,0,0,1,2.78,2.77,2.77,0,0,0,2.13.89,4.64,4.64,0,0,0,1.52-.24,6.16,6.16,0,0,0,1.45-.76l0.87,1.19a6.32,6.32,0,0,1-4,1.43A4.63,4.63,0,0,1,76,58a6.4,6.4,0,0,1-1.33-4.29,8.14,8.14,0,0,1,.57-3.16,5,5,0,0,1,1.65-2.16,4.18,4.18,0,0,1,2.53-.78,4.24,4.24,0,0,1,3.49,1.5,6.4,6.4,0,0,1,1.21,4.14Q84.11,53.74,84.07,54.26Zm-1.93-1.6a4.23,4.23,0,0,0-.67-2.58,2.37,2.37,0,0,0-2-.89q-2.45,0-2.67,3.6h5.36V52.65Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M96.26,59.29H94.5l-0.2-1.58a4.13,4.13,0,0,1-1.41,1.36,3.93,3.93,0,0,1-5.06-1.12,7.32,7.32,0,0,1-1.14-4.31,8.42,8.42,0,0,1,.54-3.12,4.83,4.83,0,0,1,1.56-2.14,3.84,3.84,0,0,1,2.39-.77A4.1,4.1,0,0,1,94.26,49V43l2,0.24v16ZM93,57.54a4.88,4.88,0,0,0,1.26-1.27V50.68a4.33,4.33,0,0,0-1.2-1.12,2.77,2.77,0,0,0-1.44-.38,2.31,2.31,0,0,0-2,1.11,6.05,6.05,0,0,0-.73,3.3,6.38,6.38,0,0,0,.67,3.3A2.14,2.14,0,0,0,91.44,58,2.81,2.81,0,0,0,93,57.54Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M114.45,49.17a7.32,7.32,0,0,1,1.15,4.39,8.39,8.39,0,0,1-.54,3.13,4.68,4.68,0,0,1-1.56,2.1,3.93,3.93,0,0,1-2.39.75,3.78,3.78,0,0,1-3-1.52l-0.2,1.26h-1.76v-16l2-.24v6.27a3.82,3.82,0,0,1,3.23-1.69A3.64,3.64,0,0,1,114.45,49.17Zm-1.75,7.72a5.89,5.89,0,0,0,.75-3.33,6.18,6.18,0,0,0-.69-3.35,2.24,2.24,0,0,0-2-1A3.23,3.23,0,0,0,108.12,51v5.46a3.53,3.53,0,0,0,1.12,1.13,2.6,2.6,0,0,0,1.4.41A2.39,2.39,0,0,0,112.71,56.89Z" transform="translate(-2.67 -28.32)"></path>
            <path class="google5" d="M121.49,62.51a5.67,5.67,0,0,1-3.44,1.4l-0.22-1.56a5.87,5.87,0,0,0,1.8-.56,3.11,3.11,0,0,0,1.07-.94,6.62,6.62,0,0,0,.75-1.55h-0.67l-3.84-11.43h2.12l3.06,10,3-10h2.06l-3.82,11.49A7.71,7.71,0,0,1,121.49,62.51Z" transform="translate(-2.67 -28.32)"></path>
        </symbol>
        <symbol id="videoIconBig" viewBox="0 0 29 29">
            <path d="M137.436,559.513l-10.764,6.214V553.3Zm-6.936,14.5a14.5,14.5,0,1,1,14.5-14.5A14.517,14.517,0,0,1,130.5,574.012Zm0-27.965a13.466,13.466,0,1,0,13.466,13.466A13.481,13.481,0,0,0,130.5,546.047Z" transform="translate(-116 -545)"></path>
        </symbol>
        <symbol id="photoIconBig" viewBox="0 0 29 29">
            <path d="M291.5,575.013a14.5,14.5,0,1,1,14.5-14.5A14.517,14.517,0,0,1,291.5,575.013Zm0-27.966a13.465,13.465,0,1,0,13.466,13.466A13.481,13.481,0,0,0,291.5,547.047Zm5.764,19.062h-11.3a1.246,1.246,0,0,1-1.256-1.227V558.13a1.245,1.245,0,0,1,1.256-1.227h1.883l1-1.842h5.53l1,1.842h1.883a1.245,1.245,0,0,1,1.256,1.227v6.752A1.246,1.246,0,0,1,297.264,566.109Zm-5.649-7.978a2.762,2.762,0,1,0,2.825,2.762A2.794,2.794,0,0,0,291.615,558.131Z" transform="translate(-277 -546)"></path>
        </symbol>
        <symbol id="videoIconSmall" viewBox="0 0 16 16">
            <path d="M157,1988a8,8,0,1,0,8,8A8,8,0,0,0,157,1988Zm-2.237,11.61v-7.22l6.249,3.61Z" transform="translate(-149 -1988)"></path>
        </symbol>
        <symbol id="photoIconSmall" viewBox="0 0 17 14">
            <path d="M121.136,2132.33h2.319a1.556,1.556,0,0,1,1.545,1.56v8.55a1.556,1.556,0,0,1-1.545,1.56h-13.91a1.556,1.556,0,0,1-1.545-1.56v-8.55a1.556,1.556,0,0,1,1.545-1.56h2.319m0,0L113.1,2130H119.9l1.233,2.33m-1.159,5.06a3.477,3.477,0,1,0-3.477,3.5A3.49,3.49,0,0,0,119.977,2137.39Z" transform="translate(-108 -2130)"></path>
        </symbol>
        <symbol id="iconMail" viewBox="0 0 16.97 13">
            <path d="M1333.79,162v13h16.98V162h-16.98Zm15.45,1.5v0.842l-0.11-.2-6.85,3.669-6.86-3.669-0.11.2V163.5h13.93Zm-13.93,10v-7.707l6.97,3.727,6.96-3.727V173.5h-13.93Z" transform="translate(-1333.78 -162)"></path>
        </symbol>
        <symbol id="iconSympatia" viewBox="0 0 426.61 402.8">
			<path d="M423.89,91c-7.32-34.38-28.47-62.69-58-77.67A122.14,122.14,0,0,0,310.17,0c-37.34,0-72.25,16.78-96.91,46.31C188.6,16.78,153.68,0,116.34,0A122,122,0,0,0,64.46,11.51C33.61,25.87,11.28,54.24,3.18,89.34c-8.51,36.88.29,76,23.53,104.62L185.13,389.18a35.87,35.87,0,0,0,56.27,0L399.86,193.91C422.64,165.83,431.63,127.37,423.89,91ZM219.66,371.53a7.9,7.9,0,0,1-12.79,0L48.45,176.32c-17.85-22-24.57-52.14-18-80.68C36.61,69,53.31,47.59,76.28,36.9A94.23,94.23,0,0,1,116.34,28c34.18,0,65.95,18.53,85,49.57a14,14,0,0,0,23.87,0c19-31,50.8-49.57,85-49.57a94.39,94.39,0,0,1,43.05,10.35c22,11.13,37.73,32.47,43.28,58.53,6,28.13-.88,57.81-18.39,79.39Z"></path>
        </symbol>
        <symbol id="iconShopping" viewBox="0 0 500.44 423.63">
			<path d="M657.34,189.6a91.27,91.27,0,0,0-86.45,62.3l-2.77,8.31H192.2a17.65,17.65,0,0,0-16.74,23.24L234.4,460a17.71,17.71,0,0,0,14.36,11.9l259,35.3a20.51,20.51,0,0,1,7.33,2.31,14.75,14.75,0,0,1,5.94,6.06,19.25,19.25,0,0,1,2.15,9,21,21,0,0,1-1.22,7.1,18,18,0,0,1-2.34,4.46,14.7,14.7,0,0,1-5.31,4.57,19.36,19.36,0,0,1-9,1.92H251.14a17.65,17.65,0,1,0,0,35.3h8a35.3,35.3,0,0,0,70.6,0H443.5a35.3,35.3,0,1,0,70.6,0c0-.22,0-.42,0-.64a53,53,0,0,0,13.81-4,49.93,49.93,0,0,0,13.49-8.8A52,52,0,0,0,554.3,546a56.18,56.18,0,0,0,4.21-21.39,55.5,55.5,0,0,0-2.77-17.36,50.9,50.9,0,0,0-15.3-22.93,49.5,49.5,0,0,0-8-5.54l72-215.67a56,56,0,0,1,53-38.17,17.65,17.65,0,1,0,0-35.3ZM216.71,295.51H556.34l-58.28,174.7L264.41,438.36Z" transform="translate(-174.56 -189.6)"></path>
		</symbol>
		<symbol id="iconZumi" viewBox="250 274 300 211.76">
			<path d="M506.7,237.47c-29.51-30.29-67.4-47-106.7-47s-77.19,16.68-106.7,47c-28,28.72-44,65.48-44,100.86,0,67.06,38.68,136,71.14,182a664.86,664.86,0,0,0,70.31,83.92l9.27,9,9.26-9a659.25,659.25,0,0,0,70.32-83.92c32.45-46,71.14-114.95,71.14-182C550.72,303,534.67,266.19,506.7,237.47ZM400,217.12c32.36,0,63.66,14.12,88.15,39.75,22.51,23.57,36,54,36,81.46,0,97.59-95.48,206.73-124.1,237.25-28.62-30.52-124.1-139.67-124.1-237.25,0-27.44,13.44-57.89,36-81.46C336.34,231.23,367.64,217.12,400,217.12Z"></path>
			<path d="M400,415.84a80.54,80.54,0,1,0-80.54-80.54A80.63,80.63,0,0,0,400,415.84Zm0-134.46a53.92,53.92,0,1,1-53.92,53.92A54,54,0,0,1,400,281.39Z"></path>
		</symbol>
		<symbol id="iconVod" viewBox="0 0 535 535.01">
			<polygon points="191.21 152.87 191.21 382.14 389.79 267.51 191.21 152.87"></polygon>
			<path d="M267.5,0C120,0,0,120,0,267.52S120,535,267.5,535,535,415,535,267.52,415,0,267.5,0ZM501.06,267.52c0,128.76-104.77,233.53-233.56,233.53S33.93,396.28,33.93,267.52,138.71,34,267.5,34,501.06,138.73,501.06,267.52Z"></path>
		</symbol>
		<symbol id="iconGry" viewBox="0 0 283.5 268.6">
			<ellipse transform="matrix(0.2419 -0.9703 0.9703 0.2419 1.8019 354.3722)" cx="227.7" cy="176" rx="13.8" ry="13.8"></ellipse>
			<ellipse transform="matrix(0.2419 -0.9703 0.9703 0.2419 -35.5818 340.0114)" cx="199.8" cy="192.8" rx="13.8" ry="13.8"></ellipse>
			<ellipse transform="matrix(0.2419 -0.9703 0.9703 0.2419 -12.5514 391.7656)" cx="244.4" cy="203.9" rx="13.8" ry="13.8"></ellipse>
			<ellipse transform="matrix(0.2419 -0.9703 0.9703 0.2419 -49.935 377.4048)" cx="216.6" cy="220.7" rx="13.8" ry="13.8"></ellipse>
			<path d="M95.1,153.5l-13.7-3.4l3.4-13.5c0.5-1.8-0.6-3.6-2.3-4.1c0,0-0.1,0-0.1,0L64.5,128c-1.8-0.5-3.7,0.6-4.2,2.4  c0,0,0,0,0,0.1L56.9,144l-13.5-3.4c-1.9-0.5-3.8,0.7-4.3,2.6L34.6,161c-0.4,1.9,0.7,3.8,2.6,4.3l13.5,3.4l-3.4,13.5  c-0.4,1.9,0.7,3.7,2.6,4.2c0,0,0,0,0,0l17.8,4.4c1.8,0.5,3.6-0.6,4.1-2.4c0,0,0-0.1,0-0.1l3.4-13.5l13.7,3.4  c1.9,0.4,3.8-0.7,4.3-2.6l4.4-17.9C98.1,155.9,97,154,95.1,153.5z"></path>
			<path d="M273.4,164.1c-4.7-7.6-10.8-14.3-18-19.6c-7.5-5.5-16-9.5-25-11.8l-64.3-16c5.1-8.1,11.4-21.5,7.8-35  c-3.3-12.6-14.1-22.2-32.2-28.5c-9.3-3.2-16.6-7.1-21.6-11.5c-3.6-3-6.3-7-7.6-11.4c-3.2-12,6.6-23.6,6.7-23.7L111.8,0  c-0.6,0.6-13.4,15.6-8.8,32.8c3.4,12.8,15.4,22.9,35.6,29.9c14.7,5.1,23.4,12.3,25.8,21.5c3,11.5-4.3,24-8.5,29.9L86.4,96.8  c-17.7-4.6-36.6-2.1-52.5,7C17.9,112.9,6.5,128.2,2.2,146c-2.3,9.1-2.7,18.5-1.3,27.8c1.4,9,4.4,17.6,9,25.4  c4.6,7.8,10.6,14.7,17.8,20.2c7.4,5.7,16,9.8,25,12c20.8,5.2,41.8,1.3,58.2-10.8l39.6,9.9c4.1,8.5,10.1,16,17.6,21.9  c8.5,6.7,18.4,11.5,28.9,14.1c9,2.3,18.4,2.7,27.6,1.4c8.9-1.3,17.4-4.2,25.1-8.8c32.7-19.3,43.5-61.4,24.2-94.1  C273.8,164.7,273.6,164.4,273.4,164.1z M243.3,248.1c-13,7.6-28.6,9.8-43.2,6c-8.8-2.1-17-6-24.1-11.6c-6.6-5.2-11.9-12.1-15.2-19.9  l-1.2-2.9L108,206.9l-2.5,2c-13.6,11-31.7,14.8-49.7,10.3c-7.4-1.8-14.3-5.2-20.4-9.8c-5.9-4.5-10.9-10.1-14.6-16.5  c-3.8-6.4-6.3-13.5-7.4-20.9c-1.2-7.6-0.8-15.3,1-22.8c3.5-14.4,12.8-26.8,25.7-34.2c13.1-7.4,28.5-9.4,43.1-5.6l144.1,35.9  c14.7,3.5,27.3,12.7,35.3,25.6c16.1,26.4,7.8,60.9-18.6,77C243.7,247.9,243.5,248,243.3,248.1L243.3,248.1z"></path>
		</symbol>
        <symbol id="logoOnet" viewBox="0 0 77 24">
            <defs>
                <style data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">
                    .logoOnet1 {
                        fill: #1e1e1e;
                    }
                    .logoOnet1, .logoOnet2 {
                        fill-rule: evenodd;
                    }
                    .logoOnet2 {
                        fill: #ffd200;
                    }
                </style>
            </defs>
            <path class="logoOnet1" d="M50.315,89.332a6.345,6.345,0,1,1,6.4-6.344,6.291,6.291,0,0,1-6.4,6.344m0-9.6a3.258,3.258,0,1,0,3.225,3.258,3.124,3.124,0,0,0-3.225-3.258M66.217,89V82.009a2.187,2.187,0,0,0-2.337-2.422,2.892,2.892,0,0,0-2.6,1.663V89H58.105V77h2.777V78.23a5.009,5.009,0,0,1,3.934-1.586,4.468,4.468,0,0,1,3.25,1.293,5.155,5.155,0,0,1,1.325,3.691V89H66.217Zm23.611,0.21a4.277,4.277,0,0,1-3.139-1.03,4.077,4.077,0,0,1-1-3.022V79.994H83.7V77h1.984V74.2l3.174-.751V77H92v3H88.86v5.2c0,0.47.272,1.069,1.566,1.069,0.568,0,1.542-.119,1.542-0.119v2.816a10.862,10.862,0,0,1-2.14.247M77.4,89.332c-3.895,0-6.615-2.609-6.615-6.345a6.244,6.244,0,1,1,12.486,0,7.048,7.048,0,0,1-.121,1.274l-0.006.031H74.112a3.115,3.115,0,0,0,3.333,2.168,3.351,3.351,0,0,0,2.527-1.023l2.6,1.441a6.119,6.119,0,0,1-5.18,2.453m2.687-7.506a2.864,2.864,0,0,0-2.927-2.334,2.96,2.96,0,0,0-3.095,2.334h6.022Z" transform="translate(-15 -71)"></path>
            <path class="logoOnet2" d="M39.117,83A12.059,12.059,0,1,1,27.058,71,12.029,12.029,0,0,1,39.117,83" transform="translate(-15 -71)"></path>
        </symbol>
        <symbol id="loupe" viewBox="0 0 16 16">
            <path transform="matrix(1 0 0 1 0.6947637292464943 0.6947637292464885)" width="11.994891443167306" height="12.019515705164753" stroke-width="1.5" stroke-miterlimit="3" stroke="#000000" fill="#FFFFFF" fill-opacity="0" d="M0,6.009757852582376 C0,2.69065993892049 2.68514761072797,-2.220446049250313e-16 5.997445721583654,-2.220446049250313e-16 C9.30974383243934,-2.220446049250313e-16 11.994891443167306,2.69065993892049 11.994891443167306,6.009757852582376 C11.994891443167306,9.328855766244265 9.30974383243934,12.019515705164753 5.997445721583654,12.019515705164753 C2.68514761072797,12.019515705164753 0,9.328855766244265 0,6.009757852582376 Z "></path>
            <path transform="matrix(1 0 0 1 10.964091122638077 10.963732332481126)" width="4.485863949916055" height="4.506656967403778" stroke-width="1.5" stroke-miterlimit="3" stroke="#000000" fill="#FFFFFF" fill-opacity="0" d="M0,0 L4.485863949916055,4.506656967403778 "></path>
        </symbol>
    </defs>

    <symbol id="businessRightLogo" viewBox="0 0 266 18">
        <defs><style data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">.cls-1-business,.cls-2-business{fill:#185f7d;}.cls-2-business{fill-rule:evenodd;}</style></defs>
        <title>Artboard 1</title>
        <rect id="SVGID" class="cls-1-business" x="147.31" y="0.78" width="2.78" height="16.35"></rect><polygon id="SVGID-2" data-name="SVGID" class="cls-2-business" points="158.04 17.11 160.71 17.11 160.71 6.47 171.94 17.36 171.94 0.75 169.28 0.75 169.28 11.21 158.04 0.5 158.04 17.11"></polygon><path id="SVGID-3" data-name="SVGID" class="cls-2-business" d="M179.07,13a8.22,8.22,0,0,0,5.18,1.89c1.86,0,3.17-.66,3.17-2.13,0-1.28-.83-1.78-2.29-2.34l-2.36-.85c-2.18-.8-3.84-2-3.84-4.66,0-2.88,2.51-4.44,5.51-4.44a8.86,8.86,0,0,1,4.82,1.33V4.68a7.57,7.57,0,0,0-4.76-1.76c-1.65,0-2.88.64-2.88,2s.77,1.68,2.13,2.16l2.63,1c2.55.93,3.72,2.37,3.72,4.74,0,3-2.53,4.63-5.86,4.63A9.31,9.31,0,0,1,179.07,16Z"></path><rect id="SVGID-4" data-name="SVGID" class="cls-1-business" x="197.29" y="0.78" width="2.77" height="16.35"></rect><path id="SVGID-5" data-name="SVGID" class="cls-2-business" d="M208.17.78h6.26c4.82,0,7.94,3.2,7.94,8.17s-3.12,8.18-7.94,8.18h-6.26Zm6.16,13.88c3.43,0,5.26-2.21,5.26-5.71s-1.83-5.72-5.26-5.72h-3.39V14.66Z"></path><polygon id="SVGID-6" data-name="SVGID" class="cls-2-business" points="238.14 0.78 238.14 3.23 230.95 3.23 230.95 7.16 237.4 7.16 237.4 9.58 230.95 9.58 230.95 14.66 238.14 14.66 238.14 17.13 228.23 17.13 228.23 0.78 238.14 0.78"></polygon><path id="SVGID-7" data-name="SVGID" class="cls-2-business" d="M249.19,10.5v6.63h-2.76V.78h5.92c3.38,0,5.56,1.7,5.56,4.9,0,2.74-1.21,4.31-3.8,4.71L260,17.13h-3.14l-5.69-6.63Zm0-2.31h3.11c1.84,0,2.88-1,2.88-2.5s-1-2.5-2.88-2.5h-3.11Z"></path><path id="SVGID-8" data-name="SVGID" class="cls-2-business" d="M123,16a9.39,9.39,0,0,0,5.23,1.45c3.35,0,5.9-1.66,5.9-4.66,0-2.38-1.18-3.83-3.75-4.77l-2.65-1c-1.37-.48-2.14-1-2.14-2.17s1.23-2,2.89-2a7.63,7.63,0,0,1,4.8,1.77V1.84A8.87,8.87,0,0,0,128.38.5c-3,0-5.55,1.58-5.55,4.47,0,2.71,1.66,3.89,3.86,4.69l2.38.86c1.47.56,2.3,1.07,2.3,2.36,0,1.47-1.31,2.14-3.19,2.14a8.29,8.29,0,0,1-5.23-1.9Zm-16.83,0a9.39,9.39,0,0,0,5.23,1.45c3.35,0,5.9-1.66,5.9-4.66,0-2.38-1.18-3.83-3.75-4.77l-2.65-1c-1.37-.48-2.14-1-2.14-2.17s1.23-2,2.89-2a7.63,7.63,0,0,1,4.8,1.77V1.84A8.87,8.87,0,0,0,111.55.5C108.52.5,106,2.08,106,5c0,2.71,1.66,3.89,3.86,4.69l2.38.86c1.47.56,2.3,1.07,2.3,2.36,0,1.47-1.31,2.14-3.19,2.14a8.29,8.29,0,0,1-5.23-1.9ZM99.65.78V3.25H92.42v4H98.9V9.64H92.42v5.1h7.24v2.49h-10V.78ZM68.25,17.21h2.68V6.51l11.3,11V.75H79.56V11.28L68.25.5ZM60.3.78H57.51V17.23H60.3ZM39.22,16.05a9.39,9.39,0,0,0,5.23,1.45c3.35,0,5.9-1.66,5.9-4.66,0-2.38-1.18-3.83-3.75-4.77l-2.65-1c-1.37-.48-2.14-1-2.14-2.17s1.23-2,2.89-2a7.63,7.63,0,0,1,4.8,1.77V1.85A8.87,8.87,0,0,0,44.63.51c-3,0-5.55,1.58-5.55,4.47,0,2.71,1.66,3.89,3.86,4.69l2.38.86c1.47.56,2.3,1.07,2.3,2.36,0,1.47-1.31,2.14-3.19,2.14a8.29,8.29,0,0,1-5.23-1.9ZM26.07,17.5c3.94,0,6.59-2.3,6.59-6.81V.78H29.87v9.59c0,3.16-1.34,4.64-3.81,4.64s-3.81-1.47-3.81-4.64V.78H19.48v9.89C19.48,15.2,22.15,17.5,26.07,17.5ZM4.33,10H7.87c1.88,0,2.89.91,2.89,2.41s-1,2.41-2.89,2.41H4.33Zm0-2.3V3.19h3c1.9,0,2.92.67,2.92,2.22s-1,2.28-2.92,2.28Zm6.48,1A3.53,3.53,0,0,0,13,5.25C13,2.31,10.82.78,7.39.78H1.63V17.23h6.3c3.43,0,5.57-1.63,5.57-4.72A4,4,0,0,0,10.82,8.74Z"></path>
    </symbol>

</svg>
    <!-- best offer  -->
    
    <!-- wiem offer  -->
    
    <!-- wiadomosci offer -->
    
    <!-- film offer  -->
    
    <!-- podroze offer  -->
    
    <!-- technologie offer  -->
    
    <!-- moto offer  -->
    
    <!-- oferty inspiracje offer  -->
    
    <!-- styl z offer  -->
    
    <!-- zycie g offer  -->
    
    <!-- vod offer  -->
    
    <!-- biznes offer  -->
    
    <!-- sport offer  -->
    
    <!-- noizz offer  -->
    

    
    <div data-section="ad-flat-belkagorna" id="qffwgsp" class="nvfwzzpbkbfk" data-slot-name="flat-belkagorna" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-belkagorna","onet-ad-flat-belkagorna").setCollapseEmpty(true);
            });
        </script>
        
    </div>

    <header data-section="pagenavtop" class="pageHeader" data-run-module="local/main.renderBoxHeader" data-run-module-isrun="1">

<div class="pageAligment">
    <h1 class="onetLogo">
        <a href="https://www.onet.pl/">
            <svg>
                <use xlink:href="#logoOnet">Onet</use>
            </svg>
        </a>
    </h1>
    <div class="servicesMenu">
        <div class="searchBar">
            <form action="https://szukaj.onet.pl/wyniki.html" method="get" id="searchForm" class="searchForm">
                <div class="searchQueryHolder">
                    <input type="search" name="qt" id="searchQuery" autocomplete="off" x-webkit-speech="" placeholder="" class="searchQueryInput switch">
                    <svg>
                        <use xlink:href="#poweredByGoogle"></use>
                    </svg>
                </div>
                <input type="submit" id="searchSubmit" class="searchSubmit" value="Szukaj">
                <svg>
                    <use xlink:href="#loupe"></use>
                </svg>
            </form>
        </div>

        <nav class="headerNav">
            <ul>
                <li class="headerNavItem">
                    <a href="http://sympatia.onet.pl/?utm_source=onet.pl&amp;utm_medium=banner&amp;utm_campaign=ikona">
                        <svg class="serviceIcon itemSympatia">
                            <use xlink:href="#iconSympatia"></use>
                        </svg>
                        <span class="serviceName">Sympatia</span>
                    </a>
                </li>
                <li class="headerNavItem">
                    <a href="https://www.skapiec.pl/?utm_source=onet.pl&amp;utm_medium=banner&amp;utm_campaign=ikona">
                        <svg class="serviceIcon itemShopping">
                            <use xlink:href="#iconShopping"></use>
                        </svg>
                        <span class="serviceName">Zakupy</span>
                    </a>
                </li>
                <li class="headerNavItem">
                    <a href="http://www.zumi.pl/?utm_source=onet.pl&amp;utm_medium=banner&amp;utm_campaign=ikona">
                        <svg class="serviceIcon itemZumi">
                            <use xlink:href="#iconZumi"></use>
                        </svg>
                        <span class="serviceName">Zumi</span>
                    </a>
                </li>
                <li class="headerNavItem">
                    <a href="http://gameplanet.onet.pl/?utm_source=onet.pl&amp;utm_medium=banner&amp;utm_campaign=ikona">
                        <svg class="serviceIcon itemGames">
                            <use xlink:href="#iconGry"></use>
                        </svg>
                        <span class="serviceName">Gry</span>
                    </a>
                </li>
                <li class="headerNavItem">
                    <a href="https://vod.pl/?utm_source=onet.pl&amp;utm_medium=banner&amp;utm_campaign=ikona">
                        <svg class="serviceIcon itemVod">
                            <use xlink:href="#iconVod"></use>
                        </svg>
                        <span class="serviceName">VOD</span>
                    </a>
                </li>

                <li class="headerNavItem mail">
                    <a href="http://poczta.onet.pl/">
                        <svg class="serviceIcon">
                            <use xlink:href="#iconMail"></use>
                        </svg>
                        <strong class="emailCount hide"></strong>
                        <span class="serviceName">E-MAIL</span>
                    </a>
                </li>
            </ul>

            <div class="servicesSubmenu">
                <svg class="menuIconOpen">
                    <use xlink:href="#menuOpenIcon"></use>
                </svg>
                <svg class="menuIconClose">
                    <use xlink:href="#menuCloseIcon"></use>
                </svg>
                <div class="servicesSubmenuPopup">
                    <div class="userLogin"><div class="userNotLogged"><img src="onet_pliki/9be7522db389ef68ee30e26add4b098c.png" alt=""><div class="userData"><span>Skorzystaj w pełni z wszystkich funkcjonalności strony</span><a class="loginButton" href="https://authorisation.grupaonet.pl/login.html?client_id=authorisation.grupaonet.pl.front">Zaloguj się</a></div></div></div>
                </div>
            </div>
        </nav>
    </div>
</div>

<script type="text/javascript">try{document.querySelector('header.nojs').classList.remove('nojs');}catch(e){}</script>

</header>
    
    <nav class="siteNavigation">
        <div id="siteNavigation" class="siteNavigation" data-section="sitenavigation" data-run-module="local/main.renderBoxMenu" data-run-module-isrun="1">
            <div id="tabMenu">
                <div class="firstLevel" style="width: 1260px;">
                    <ul class="mainMenu" style="overflow: visible;">
                        
                            
                                <li class="" style="display: inline-block;">
                                    <a href="https://wiadomosci.onet.pl/">
                                        Wiadomości
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: inline-block;">
                                    <a href="https://sport.onet.pl/">
                                        Sport
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: inline-block;">
                                    <a href="https://businessinsider.com.pl/">
                                        Biznes
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="pinned alsm" style="display: inline-block;">
                                    <a href="#">
                                        Regionalne
                                        
                                            <span class="moreArrow"></span>
                                        
                                    </a>
                                    
                                        <div class="bubbleGroup" style="">
                                            
                                                <ul style="width: 441px;"><ul class="subli subli1" style="width: 147px;"><li>
                                                        <a href="https://bialystok.onet.pl/"><span>Białystok <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://kujawsko-pomorskie.onet.pl/"><span>Kujawsko-Pomorskie <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://lodz.onet.pl/"><span>Łódź <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://poznan.onet.pl/"><span>Poznań <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://slask.onet.pl/"><span>Śląsk <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://wroclaw.onet.pl/"><span>Wrocław <span class="info"></span></span></a>
                                                    </li></ul><ul class="subli subli2" style="width: 147px;"><li>
                                                        <a href="https://kielce.onet.pl/"><span>Kielce <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://lublin.onet.pl/"><span>Lublin <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://olsztyn.onet.pl/"><span>Olsztyn <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://rzeszow.onet.pl/"><span>Rzeszów <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://trojmiasto.onet.pl/"><span>Trójmiasto <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://wbi.onet.pl/"><span>W. Brytania i Irlandia <span class="info"></span></span></a>
                                                    </li></ul><ul class="subli subli3" style="width: 147px;"><li>
                                                        <a href="https://krakow.onet.pl/"><span>Kraków <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://lubuskie.onet.pl/"><span>Lubuskie <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://opole.onet.pl/"><span>Opole <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://szczecin.onet.pl/"><span>Szczecin <span class="info"></span></span></a>
                                                    </li><li>
                                                        <a href="https://warszawa.onet.pl/"><span>Warszawa <span class="info"></span></span></a>
                                                    </li></ul></ul>
                                            
                                        </div>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: inline-block;">
                                    <a href="https://kultura.onet.pl/">
                                        Kultura
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: inline-block;">
                                    <a href="https://kobieta.onet.pl/">
                                        Styl życia
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: inline-block;">
                                    <a href="https://technologie.onet.pl/">
                                        Technologie
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: inline-block;">
                                    <a href="https://moto.onet.pl/">
                                        Motoryzacja
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="pinned imgs highlight" style="display: inline-block;">
                                    <a href="https://vod.pl/programy-onetu">
                                        Programy Onetu
                                        
                                            <span class="moreArrow"></span>
                                        
                                    </a>
                                    
                                        <div class="bubbleGroup">
                                            
                                                <ul>
                                                
                                                    
                                                    <li>
                                                        <a href="https://vod.pl/onet-rano"><span><span class="img" data-original="https://ocdn.eu/onetmobilemainpage/navigation/v2/h_vod_onetrano_jksg.jpg"></span>Poranny program, z którym warto rozpocząć dzień.  <span class="info"><span>Onet Rano</span> | <span>Jarosław Kuźniar</span></span></span></a>
                                                    </li>
                                                    
                                                
                                                    
                                                    <li>
                                                        <a href="https://vod.pl/tomasz-lis-program"><span><span class="img" data-original="https://ocdn.eu/onetmobilemainpage/navigation/v2/h_vod_tomasz_lis_tlsg.jpg"></span>Będę mówił to, co myślę. Prosto w oczy. <span class="info"><span>Tomasz Lis.</span> | <span>Tomasz Lis</span></span></span></a>
                                                    </li>
                                                    
                                                
                                                    
                                                
                                                    
                                                    <li>
                                                        <a href="https://vod.pl/rezerwacja-katarzyny-janowskiej"><span><span class="img" data-original="https://ocdn.eu/onetmobilemainpage/navigation/v2/h_vod_rezerwacja_kjsg.jpg"></span>Przegląd najnowszych wydarzeń kulturalnych. <span class="info"><span>Rezerwacja</span> | <span>Katarzyna Janowska</span></span></span></a>
                                                    </li>
                                                    
                                                
                                                    
                                                    <li>
                                                        <a href="https://vod.pl/onet-opinie"><span><span class="img" data-original="https://ocdn.eu/onetmobilemainpage/navigation/v2/h_vod_onet_opinie_bwsg.jpg"></span>Aktualne sprawy polityczne i społeczne. <span class="info"><span>Onet opinie</span> | <span>Bartosz Węglarczyk</span></span></span></a>
                                                    </li>
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                    
                                                
                                                
                                                    <li>
                                                     <a href="https://vod.pl/programy-onetu"><span class="tabMore">Wszystkie programy Onetu</span></a>
                                                     </li>
                                                
                                                </ul>
                                            
                                        </div>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: none;">
                                    <a href="http://podroze.onet.pl/">
                                        Podróże
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: none;">
                                    <a href="https://plejada.pl/">
                                        Życie gwiazd
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: none;">
                                    <a href="https://programtv.onet.pl/">
                                        Program TV
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                                <li class="" style="display: none;">
                                    <a href="https://gotowanie.onet.pl/">
                                        Gotowanie
                                        
                                    </a>
                                    
                                </li>
                            
                        
                            
                        
                            
                        
                        <li class="more" style="visibility: visible; display: inline-block; position: relative;">
                            <a href="#" class="bubbleMenuHamburger">...</a>
                            <div class="bubbleMenu" style="width: 138px;"><ul class="subli subli1" style="width: 138px;"><li class="" style="display: block;">
                                    <a href="http://podroze.onet.pl/">
                                        Podróże
                                        
                                    </a>
                                    
                                </li><li class="" style="display: block;">
                                    <a href="https://plejada.pl/">
                                        Życie gwiazd
                                        
                                    </a>
                                    
                                </li><li class="" style="display: block;">
                                    <a href="https://programtv.onet.pl/">
                                        Program TV
                                        
                                    </a>
                                    
                                </li><li class="" style="display: block;">
                                    <a href="https://gotowanie.onet.pl/">
                                        Gotowanie
                                        
                                    </a>
                                    
                                </li></ul></div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>

    
    

    <div id="mainPageBody0" class="lv1c lv1w">
        
        <script type="text/javascript">
            if(window.location.hash && window.location.hash.indexOf("#e404") === 0) {
                var mainPageBody = document.getElementById('mainPageBody0');
                if(mainPageBody) {
                    var newBox = document.createElement("div");
                    newBox.className = 'e404Box';
                    newBox.innerHTML = '<a href="#onet"><img src="' + (window.location.hash.indexOf("#e404digart") === 0 ? 'https://ocdn.eu/onetmobilemainpage/mainpage_desktop/404/digart_404.png' : 'https://ocdn.eu/strona404onetpl/static/src/www_sg_404.png') + '"></a>';
                    mainPageBody.insertBefore(newBox, mainPageBody.firstChild);
                }
            } else if(window.location.hash && window.location.hash.indexOf("#odblokuj") === 0) {
                (function (mainPageBody0) {
                    if (mainPageBody0) {
                        mainPageBody0.setAttribute('data-run-module', 'local/main.renderBoxYtCommunicate');
                    }
                })(document.getElementById('mainPageBody0'));
            }
        </script>
    </div>
    

    
        
            
                


    <div data-section="ad-top" id="mztwznxst" class="lv1c lv1w nvfwzzpbkbfk" data-slot-name="top" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("top","onet-ad-top").setCollapseEmpty(true);
            });
        </script>
        
    </div>



            
        

        <div id="mainPageBody" class="content lv1c lv1w">
            
            <div class="container-top">
                
                    






<div class="hpLiveNew" id="eventBox" data-section="extendedeventbox">

<div class="boxHeader hpLiveHeadersponsored">
    <h1 title="Paweł Adamowicz nie żyje">
        <span>Paweł Adamowicz nie żyje</span>
    </h1>
</div>
    <article class="hpLive hpLiveextended hpLivesponsored">
        <section class="hpLiveSection">
            <div class="hpLiveColumn hpLiveColumnLeft">
            
                
                    



























    


<a data-uuid-ui="d9525663-0266-491b-8d47-958799855b12" data-params-element-type="t_hp_1" class="itemBox itemBox_hp_1 s1_254 
     
    " data-gtm="hpLive_1" href="https://wiadomosci.onet.pl/kraj/atak-na-pawla-adamowicza-w-czasie-finalu-wosp/tx3frnc">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/SgMktkqTURBXy9jNTFmOGRkNjY0YzhkYjJiOGVkMDc2MTcwN2Q5Y2E1YS5qcGVnk5UDAM0BRs0FLs0C65MFzQIuzP6VB9kyL3B1bHNjbXMvTURBXy8yNzRjMWQ2NDY3MDgyYzNlNmRmZTlkMDlmNGE2ZGY2Yi5wbmcAwgA">        
        <img alt="" src="onet_pliki/SgMktkqTURBXy9jNTFmOGRkNjY0YzhkYjJiOGVkMDc2MTcwN2Q5Y2E1YS5q.jpeg">
    </span>

</span>
    

    

    
        
            
                <span class="newsSpec">NA ŻYWO</span>
            
        
    

	<span class="layerTextBottom
    
        
            layerTextBottomYellow
        
    
    
    ">

        <span class="tWrp"><span class="title">Z całego świata spływają kondolencje po śmierci prezydenta Gdańska</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>




                
            
                
                    
<div class="wdgImage">
    <a href="https://wiadomosci.onet.pl/atak-na-pawla-adamowicza" data-gtm="hpLive_imageWidget">
        <img src="onet_pliki/273100f785f059fabb0855c3c852991c.jpg" alt="" width="100%">
    </a>
</div>

                
            
                
                    <div class="widgetLinks">

</div>
                
            
            </div>

            <div class="hpLiveColumn hpLiveColumnMiddle">
            
                
                    



















    











    


<a data-uuid-ui="edbc54b7-8726-4647-9489-b03ed254e07d" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_155 
     
    " data-gtm="hpLive_3" href="https://wiadomosci.onet.pl/kraj/pawel-adamowicz-nie-zyje-donald-tusk-zegna-prezydenta-gdanska/fy3mtny">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/gj7ktkqTURBXy81NGVkNmE0NDJkM2NmZTI4MTRhYjg2MzQzN2FlMzMwZC5qcGVnk5UDPibNApnNAXeTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA">        
        <img alt="" src="onet_pliki/gj7ktkqTURBXy81NGVkNmE0NDJkM2NmZTI4MTRhYjg2MzQzN2FlMzMwZC5q.jpeg">
    </span>

<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Poruszony Donald Tusk żegna prezydenta Gdańska</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>































    


<a data-uuid-ui="fad5d94f-065a-42bd-8436-4e6e84306b07" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_155 
     
    " data-gtm="hpLive_4" href="https://wiadomosci.onet.pl/kraj/jurek-owsiak-nie-jest-szefem-wosp/t92nh4f">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/h4uktkqTURBXy9kMmI4NzMyMjgwNDk0MjdmNzAzM2Y2NjUxMTQ2M2RkZC5qcGVnk5UDY80Dk80Yss0N7ZMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA">        
        <img alt="" src="onet_pliki/h4uktkqTURBXy9kMmI4NzMyMjgwNDk0MjdmNzAzM2Y2NjUxMTQ2M2RkZC5q.jpeg">
    </span>

</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Owsiak zrezygnował z szefowania WOŚP po tragedii w Gdańsku</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>






                
            
            </div>

            <div class="hpLiveColumn hpLiveColumnRight">
            
                
                    
<div class="bookmarksWidget" data-run-module="local/main.renderBookmarksWidget" data-run-module-isrun="1">
    <div class="bookmarksWidget bookmarksWidgetNav numberOfBookmarks_1">
    
        <span class="bookmark bookmark-news" data-bookmark-name="news_0" data-active="true">Wiadomości</span>
    
    </div>

    <div class="bookmarksWidget bookmarksWidgetContent">
    
        <div class="news_0 news" data-bookmark-name="news_0" data-active="true">
            
    
        
        <a href="https://wiadomosci.onet.pl/kraj/pawel-adamowicz-nie-zyje-w-calej-polsce-zbieraja-sie-mieszkancy/rlf3vz9" class="newsItemWithImage " data-gtm="hpLive_5">
            


    
        
            


    
        
            <img alt="Mieszkańcy całej Polski składają hołd Adamowiczowi" src="onet_pliki/4z9ktkqTURBXy82ZDliNjFmMDg4NmY3MmU1ZTI3MDFhNmNhNzExZjc0NS5q.jpeg" width="95" height="59">
        
    

        
    

            <div class="newsTitle">
                
                    <span class="title"> Mieszkańcy całej Polski składają hołd Adamowiczowi</span>
                
                <div class="source">
                
                 </div>
            </div>

        </a>
        
    
        
        <a href="https://wiadomosci.onet.pl/kraj/narada-na-nowogrodzkiej-po-smierci-pawla-adamowicza/pt7yqy1" class="newsItemWithImage " data-gtm="hpLive_6">
            


    
        
            


    
        
            <img alt="Narada na Nowogrodzkiej po śmierci Pawła Adamowicza" src="onet_pliki/vbpktkqTURBXy8yMTcyNWUyNWRmZGFkZjI3NzgwOWJkYzZmODEzN2IwNC5q.jpeg" width="95" height="59">
        
    

        
    

            <div class="newsTitle">
                
                    <span class="title"> Narada na Nowogrodzkiej po śmierci Pawła Adamowicza</span>
                
                <div class="source">
                
                 </div>
            </div>

        </a>
        
    
        
        <a href="https://wiadomosci.onet.pl/kraj/ostatnie-przemowienie-pawla-adamowicza-gdansk-jest-najcudowniejszym-miastem-na/sl3rvwx" class="newsItemWithImage " data-gtm="hpLive_7">
            


    
        
            


    
        
            <img alt="Ostatnie przemówienie Pawła Adamowicza" src="onet_pliki/nwNktkqTURBXy9iNDg1ODM5Mzc0YTA1NWE1YWQ4OGQ3NTQxNTliM2U2Ny5q.jpeg" width="95" height="59">
        
    

        
    

            <div class="newsTitle">
                
                    <span class="title"> Ostatnie przemówienie Pawła Adamowicza</span>
                
                <div class="source">
                
                 </div>
            </div>

        </a>
        
    
        
        <a href="https://wiadomosci.onet.pl/opinie/pawel-adamowicz-nie-zyje-komentarz-bartosza-weglarczyka/y9ww2x9" class="newsItemWithImage " data-gtm="hpLive_8">
            


    
        
            


    
        
            <img alt="Bartosz Węglarczyk: dziś nienawiść zagraża nam jako narodowi" src="onet_pliki/FrHktkqTURBXy9iOTRhZmJmNmRkYzQ4Y2Q2YTlkYjZlOWFlMzFlYjA3Ny5q.jpeg" width="95" height="59">
        
    

        
    

            <div class="newsTitle">
                
                    <span class="title"> Bartosz Węglarczyk: dziś nienawiść zagraża nam jako narodowi</span>
                
                <div class="source">
                
                 </div>
            </div>

        </a>
        
    
        
        <a href="https://wiadomosci.onet.pl/kraj/pawel-adamowicz-nie-zyje-abp-stanislaw-gadecki-komentuje/pg1635l" class="newsItemWithImage " data-gtm="hpLive_9">
            


    
        
            


    
        
            <img alt="Abp Stanisław Gądecki: to jest mroczne zaćmienie człowieka" src="onet_pliki/dqFktkqTURBXy8wZTZiMGE2ZDkxMjcwNTRhNzQ2Yzc3NjJjMjVmMjVlMy5q.jpeg" width="95" height="59">
        
    

        
    

            <div class="newsTitle">
                
                    <span class="title"> Abp Stanisław Gądecki: to jest mroczne zaćmienie człowieka</span>
                
                <div class="source">
                
                 </div>
            </div>

        </a>
        
    


        </div>
    
    </div>
</div>

                
            
            </div>
        </section>
    </article>
    
        <div class="nvfwzzpbkbfk kbqvrzkfnmjk" id="kwvdhwngpdp" data-slot="onet-ad-flat-player-branding-sg" data-section="ad-flat-player-branding-sg-1" data-opt-kwrd="sponsored"></div>
    
</div>

                <style data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">
                    .hpLiveNew .hpLiveHeadersponsored h1:before {
                        content: " " attr(title) " " !important;
                        background-color: #7f7f7f !important;
                        color:  #ffffff;
                        padding-left: 14px;
                        box-sizing: border-box;
                        z-index: 2 !important;
                        overflow: hidden;
                    }
                    .hpLive.hpLivesponsored {
                        background-color: #1e1e1e;
                    }
                    .hpLive.hpLivesponsored a {
                        color: #ffffff;
                    }
                    .hpLive.hpLivesponsored .bookmarksWidget .bookmarksWidgetNav .bookmark {
                        background-color: #7f7f7f;
                        color: #ffffff;
                    }
                    .hpLive.hpLivesponsored .bookmarksWidget .bookmarksWidgetNav .bookmark[data-active="true"] {
                        background-color: #7f7f7f;
                        color: #ffffff;
                    }
                    .hpLive.hpLivesponsored .hpLiveColumnRight .widgetLinks a {
                        border-right-color: #7f7f7f;
                    }
                    .hpLive.hpLivesponsored .hpLiveColumnLeft .itemBox.mainPlayer .layerTextBottom {
                        background-color: #7f7f7f;
                        color: #ffffff;
                    }
                 </style>
            





<script>
    var dataLayer = window.dataLayer || {};
    dataLayer.push( {"hpliveLayoutType": "extended"}) ;
</script>





                
                    




                
                    


    <div data-section="flat-top-bar" id="snpzssmwf" class="nvfwzzpbkbfk" data-slot-name="flat-topbar" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-topbar","flat-top-bar").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
            </div>
            

            
            <div class="container-content-left mainPageContent">
                
                    


    <div data-section="flat-pasekart" id="xfcnvscz" class="nvfwzzpbkbfk" data-slot-name="flat-pasekart" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-pasekart","onet-ad-flat-pasekart").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    
        
        
        
        <article data-section="thematicsection">
            
            
            <section class="mosaic sectionType3">
                <div class="boxHeader">

    <h1>
     
        <span>Politycy, ludzie kultury i sportu żegnają Adamowicza</span>
     
    </h1>

</div>



                <div class="items">
                    
                    
                        
                            
                                <div class="sectionLine sectionLineMax">
                                
                                    
                                    


























    


<a data-uuid-ui="960b002a-bfc8-4c6d-b2b5-2adda29a34a7" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="sek_tem_1" href="https://kultura.onet.pl/wiadomosci/ludzie-kultury-o-tragicznej-smierci-prezydenta-pawla-adamowicza-bezprzykladny-akt/n0q1st1">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/yvxktkqTURBXy8yYjAzMTI5MzYwY2MzZjYyMWVhMmNlMGEyNjcxOTBiMi5qcGVnk5UDAs0B0s0U880Lw5MFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA">        
        <img alt="" src="onet_pliki/yvxktkqTURBXy8yYjAzMTI5MzYwY2MzZjYyMWVhMmNlMGEyNjcxOTBiMi5q.jpeg">
    </span>

</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Maciej Stuhr: to mógł być każdy z nas. Tusk, Kaczyński, Duda, Janda, Stuhr, Owsiak</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                
                                    
                                    


























    


<a data-uuid-ui="2ef5c05b-77a6-4a2f-ad4d-944620a4a45a" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="sek_tem_2" href="https://wiadomosci.onet.pl/tylko-w-onecie/pawel-adamowicz-nie-zyje-frasyniuk-nie-prezydent-a-prezes-pis-powinien-zorganizowac/zxgyk86">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/EXxktkqTURBXy8zZjRmNmM1NmZmZmNkYjEzMmU0MTg5OTY3MmYxOTE5NS5qcGVnk5UDACnNB9DNBGOTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA">        
        <img alt="" src="onet_pliki/EXxktkqTURBXy8zZjRmNmM1NmZmZmNkYjEzMmU0MTg5OTY3MmYxOTE5NS5q.jpeg">
    </span>

</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Frasyniuk: nóż, który przebił serce Adamowicza, ugodził także Owsiaka</span>

            

        </span>


         


        
        

            
                
                    <span class="info">Magdalena Gałczyńska</span>
                
            

        

	</span>
</a>



                                
                                    
                                    


























    


<a data-uuid-ui="0b0c0673-2e08-4711-9a61-56c18a1ad72b" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="sek_tem_3" href="https://wiadomosci.onet.pl/kraj/pawel-adamowicz-nie-zyje-lech-walesa-wspomina/rtgr0nf">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/adLktkqTURBXy82MmU3YWZhY2QzZWY3N2Q3Zjg0MzE0MTVkMWUyNGVkZS5qcGVnk5UDAMzqzQXBzQM7kwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA">        
        <img alt="" src="onet_pliki/adLktkqTURBXy82MmU3YWZhY2QzZWY3N2Q3Zjg0MzE0MTVkMWUyNGVkZS5q.jpeg">
    </span>

</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Lech Wałęsa: różnego rodzaju chorzy ludzie posuwają się do takich czynów</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                
                                </div>
                            
                        
                    
                </div>
            </section>
        </article>
        
    



                
                    


    

        
        
        
        <article data-section="cyclermagazine">
            
            
            <section class="mosaic sectionType3">

                    <div class="boxHeader">

    <h1>
     
        <span>#WIEM Z ONET</span>
     
    </h1>

</div>




                <div class="items">
                    
                        
                        
                         
                            

                            <div class="sectionLine sectionLineMax">
                            
                                
                                



























<a data-uuid-ui="3f6e556c-1231-4d5d-b68e-bca5c041226d" data-params-element-type="t_3_2" class="itemBox itemBox_3_2 s1_260" id="jkkvhgxh" data-gtm="bestof_1" href="https://wiadomosci.onet.pl/kraj/michal-rachon-odsuniety-od-prowadzenia-minela-20-i-woronicza-17-w-tvp-info/cetdgcd">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/s8MktkqTURBXy9kN2JhYWEwMzdiZWNmNGM3ZGYxOWMxODg5NjlkYTZiZC5qcGVnk5UDzQEsVc0GI80CyZMFzQI8zQEElQfZMi9wdWxzY21zL01EQV8vMjc0YzFkNjQ2NzA4MmMzZTZkZmU5ZDA5ZjRhNmRmNmIucG5nAMIA">        
        <img alt="" src="onet_pliki/s8MktkqTURBXy9kN2JhYWEwMzdiZWNmNGM3ZGYxOWMxODg5NjlkYTZiZC5q.jpeg">
    </span>

</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Michał Rachoń odsunięty od prowadzenia "Minęła 20" i "Woronicza 17" w TVP Info</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-nattop", "ad-flat-nattop1", {"pos":"1"});  slot.imgTransform("resizecropauto", { width: 572, height: 260});  });</script>



                            
                                
                                


























    


<a data-uuid-ui="b15190fc-83fa-4f56-b619-1398b1882488" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" data-run-module="local/main.renderBoxDataAlternate" data-vtf-uuid="cc45c4de-274c-4b95-b61c-d47f3d2907fa" data-vtf-boxver="test" data-vtf-mid="ae7463021ebebe4d03e6af9e018eee57" data-gtm="bestof_2" href="http://vod.pl/programy-onetu/tomasz-lis-radoslaw-sikorski-zbigniew-holdys-krystyna-starczewska-1401/psskp5y" data-run-module-isrun="1" data-alternate-x="||t::0|Sikorski: mamy tragedię ludzką, zróbmy wszystko, aby nie było tragedii politycznej|t::1|Radosław Sikorski: dołączamy do krajów, gdzie przemoc polityczna się dzieje |t::2|Radosław Sikorski: powinniśmy przestać dzielić Polaków na dwa plemiona |t::3|Zbigniew Hołdys: decyzja Jurka Owsiaka o rezygnacji mnie nie zaskakuje |i::3| io-//ocdn.eu/pulscms-transforms/1/9ssktkqTURBXy82N2RlZmNmMDE0MWFhZjk0ZmY2MmMyNmFmNzYxOWUyOS5qcGVnk5UDAADNAyXNAcSTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA,">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/cSxktkqTURBXy85ODI5ZWU3ZmRkMzg2ODhjZThkMjJkMTM4M2ZjMGM4My5qcGVnk5UDAADNAyvNAceTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA">        
        <img alt="" src="onet_pliki/cSxktkqTURBXy85ODI5ZWU3ZmRkMzg2ODhjZThkMjJkMTM4M2ZjMGM4My5q.jpeg">
    </span>

<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Sikorski: mamy tragedię ludzką, zróbmy wszystko, aby nie było tragedii politycznej</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                            
                            </div>
                        
                        
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="ef33485a-b9b4-4e86-8324-536f77ee8eb2" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="bestof_3" href="https://wiadomosci.onet.pl/kraj/pawel-adamowicz-nie-zyje-andrzej-duda-sklada-kondolencje/rjxq4ve">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/ZhaktkqTURBXy9hOTUzNDI3N2U1MzcwOWY4MjMxMWRkOWRiODhhNzY4Ni5qcGVnk5UDcwDNBnnNA6OTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA">        
        <img alt="" src="onet_pliki/ZhaktkqTURBXy9hOTUzNDI3N2U1MzcwOWY4MjMxMWRkOWRiODhhNzY4Ni5q.jpeg">
    </span>

</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Andrzej Duda składa kondolencje. "Modlę się za jego duszę i rodzinę"</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="ad700bd9-b3bd-4015-a865-94809d0b6a2e" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="bestof_4" href="https://sport.onet.pl/alpinizm/rosyjska-wyprawa-dotarla-do-bazy-pod-k/4c1yzbh">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/X54ktkqTURBXy83ZDk4NDY4NjY2NzU3ZGNlNzcyYzIyZDU5OGMxZDg5MS5qcGVnk5UDABLNAeDNAQ2TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA">        
        <img alt="" src="onet_pliki/X54ktkqTURBXy83ZDk4NDY4NjY2NzU3ZGNlNzcyYzIyZDU5OGMxZDg5MS5q.jpeg">
    </span>

</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Dwóch Polaków spróbuje zdobyć K2 zimą. Pierwsza ekipa dotarła do bazy</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="3f955e69-2847-4ca3-8f3c-7a33f15cab23" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="bestof_5" href="https://facet.onet.pl/rafal-betlejewski-wraz-z-adamowiczem-umiera-owsiak-i-wosp-komentarz/wr4fkd1">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/fsFktkqTURBXy9hNjdjMzJkNjdiMjVhZDdmYmI2ZGQyMWM0ZjUyYzJiMy5qcGVnk5UDAMyFzQfPzQRikwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA">        
        <img alt="" src="onet_pliki/fsFktkqTURBXy9hNjdjMzJkNjdiMjVhZDdmYmI2ZGQyMWM0ZjUyYzJiMy5q.jpeg">
    </span>

</span>
    

    

    
        
            
                <span class="newsSpec">KOMENTARZ</span>
            
        
    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Betlejewski: ktoś ostatecznie zabił moją nadzieję, że coś nas jeszcze łączy</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="2275a495-5b32-4149-a754-c929c4058c95" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="bestof_6" href="https://wiadomosci.onet.pl/kraj/co-dzieje-sie-w-przypadku-smierci-prezydenta-miasta-w-trakcie-jego-urzedowania/0y2r5rx">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/JubktkqTURBXy84NTk5YjQ5NzdhZTYyOTBlYmEwNDJmOThlZGM1Yzc0Zi5qcGVnk5UDAMyrzQY_zQOBkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA">        
        <img alt="" src="onet_pliki/JubktkqTURBXy84NTk5YjQ5NzdhZTYyOTBlYmEwNDJmOThlZGM1Yzc0Zi5q.jpeg">
    </span>

</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Co dzieje się w przypadku śmierci prezydenta miasta w trakcie jego urzędowania?</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="f80a0f31-cf1c-4f3b-bdce-be46588e14ff" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155  showAuthorOrSourceImage
     
    " data-gtm="bestof_7" href="https://businessinsider.com.pl/wiadomosci/pawel-adamowicz-prezydent-gdanska-w-latach-1998-2019/2kscr7p">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/Ed2ktkqTURBXy83MDhmYzc5ZjU1Y2NlM2JhMWI1YjUwZjZhNWE4MWM1Mi5qcGVnk5UDAMyHzQfPzQRikwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA">        
        <img alt="" src="onet_pliki/Ed2ktkqTURBXy83MDhmYzc5ZjU1Y2NlM2JhMWI1YjUwZjZhNWE4MWM1Mi5q.jpeg">
    </span>

</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Paweł Adamowicz odmienił Gdańsk. Osiągnięcia prezydenta w liczbach</span>

            

        </span>


         


        
        

            
                <span class="info">Business Insider</span>
            

        

	</span>
</a>



                                    
                                        
                                        



























<a data-uuid-ui="dad4029d-8d3a-41af-bf94-0da744354cbf" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 showAuthorOrSourceImage" id="fjzzz" data-gtm="bestof_8" href="https://wiadomosci.onet.pl/tylko-w-onecie/pawel-adamowicz-nie-zyje-sylwetka-prezydenta-gdanska/ybkes5g">

    
        <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/Ch_ktkqTURBXy8zZTU1ZDgyNTdjMDU0NTZlM2U0MmVkYjg0ZTVlNjVmNy5qcGVnk5UDAEnNDazNB62TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA">        
        <img alt="" src="onet_pliki/Ch_ktkqTURBXy8zZTU1ZDgyNTdjMDU0NTZlM2U0MmVkYjg0ZTVlNjVmNy5q.jpeg">
    </span>

<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Paweł Adamowicz był przez ponad 20 lat prezydentem Gdańska</span>

            

        </span>


         


        
        

            

            
                <span class="imageContainer sourceImg horizontally">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/MXdktkqTURBXy8xMGMwY2EzY2EzY2ZlOTZhYWQzYzQxNjBkOTg5NDQ5Mi5qcGVnkZQCAB7C">        
        <img alt="" src="onet_pliki/MXdktkqTURBXy8xMGMwY2EzY2EzY2ZlOTZhYWQzYzQxNjBkOTg5NDQ5Mi5q.jpeg">
    </span>

</span>
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-nattop", "ad-flat-nattop4", {"pos":"11"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                    </div>
                                
                            
                        
                    
                </div>
            </section>
        </article>
        
    



                
                    


    
        
            <!-- off -->
        
    



                
                    


    <div data-section="ad-flat-magazyn" id="hqrfrjzmrhw" class="nvfwzzpbkbfk" data-slot-name="flat-magazyn" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-magazyn","onet-ad-flat-magazyn").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
            </div>
            

            
            <div class="container-content-right sideBar sideBar2">
                
                    


    
        <div class="sideBarItem" data-scroll="wiadomosci">
            <article class="newsBox">
                <section data-section="news">
                    
    

    
<div class="boxHeader">
    <h1>
        
            <a class="titleHeaderLink" href="http://wiadomosci.onet.pl/">
                
                    Wiadomości
                
            </a>
        

        
    </h1>

    
</div>

    
    
    

    <div class="boxContent">
        
        <ul>
            
                

                    
                    
                    

                    

                    <li class="item-1 bigItem">

    <a href="https://wiadomosci.onet.pl/kraj/atak-na-pawla-adamowicza-w-czasie-finalu-wosp/tx3frnc" data-uuid-ui="d9525663-0266-491b-8d47-958799855b12" data-gtm="wiadomosci_1">

        
            <span class="imageContainer itemMedia">
    <span class="itemCollage cl-1 lastCorrect" data-original="//ocdn.eu/pulscms-transforms/1/U2jktkuTURBXy85NzkwZThkMi00MDdlLTQzOGItOGRmZS03ZTczNTc0MjI0ZDkuanBlZ5KVA80ChM0B0s0JC80FF5MFXzs">        
        <img alt="" src="onet_pliki/U2jktkuTURBXy85NzkwZThkMi00MDdlLTQzOGItOGRmZS03ZTczNTc0MjI0.jpeg">
    </span>

</span>
        

        

        

            
                
                    <span class="newsSpec">RELACJA</span>
                
            

            <span class="title">

                
                    Donald Tusk na wiecu w Gdańsku: Pawle, przyrzekamy ci to
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-2">

    <a href="https://wiadomosci.onet.pl/kraj/stefan-w-zostal-aresztowany/s3n1ep2" data-uuid-ui="e2873cb6-12ea-4128-8b9f-b035a3171cab" data-gtm="wiadomosci_2">

        

        

        

            

            <span class="title">

                
                    Sąd zdecydował o areszcie dla Stefana W.
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-3">

    <a href="https://wiadomosci.onet.pl/kraj/pawel-adamowicz-nie-zyje-andrzej-duda-sklada-kondolencje/rjxq4ve" data-uuid-ui="ef33485a-b9b4-4e86-8324-536f77ee8eb2" data-gtm="wiadomosci_3">

        

        

        

            

            <span class="title">

                
                    Andrzej Duda: nie będziemy organizowali marszu
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-4">

    <a href="https://wiadomosci.onet.pl/kraj/pawel-adamowicz-nie-zyje-prezydent-gdanska-mial-53-lata/mspzq7j" data-uuid-ui="59fd96a8-29ea-4d8d-b838-a770bcafea5d" data-gtm="wiadomosci_4">

        

        

        

            

            <span class="title">

                
                    Zmarł prezydent Gdańska Paweł Adamowicz
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-5">

    <a href="https://wiadomosci.onet.pl/tylko-w-onecie/jurek-owsiak-nie-jest-szefem-wosp-walter-chelstowski-komentuje/hq9hcpw" data-uuid-ui="a19d02d2-3861-4e4e-a20c-684fc586b541" data-gtm="wiadomosci_5">

        

        

        

            

            <span class="title">

                
                    Współzałożyciel WOŚP komentuje decyzję Owsiaka
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-6">

    <a href="https://trojmiasto.onet.pl/nie-zyje-pawel-adamowicz-wyjatkowe-zdjecie-z-dzisiejszego-wiecu-ku-pamieci-prezydenta/vhpkjz1" data-uuid-ui="09bffc81-b567-4a32-b73f-d443d4ba4d19" data-gtm="wiadomosci_6">

        

        

        

            

            <span class="title">

                
                    Wiec w Gdańsku. Wyjątkowe ujęcie z drona
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-7">

    <a href="https://wiadomosci.onet.pl/kraj/narada-na-nowogrodzkiej-po-smierci-pawla-adamowicza/pt7yqy1" data-uuid-ui="420beb72-d21c-461b-bb9b-37ce16382a5d" data-gtm="wiadomosci_7">

        

        

        

            

            <span class="title">

                
                    Narada na Nowogrodzkiej w siedzibie PiS
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-8">

    <a href="https://wiadomosci.onet.pl/tylko-w-onecie/pawel-adamowicz-nie-zyje-warszawa-protest-stop-nienawisci/dgf9vl7" data-uuid-ui="c81b0736-a26b-417e-a803-036cba73014f" data-gtm="wiadomosci_8">

        

        

        

            

            <span class="title">

                
                    Wielki protest w Warszawie. Płoną znicze
                

                

                <svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-9">

    <a href="https://wiadomosci.onet.pl/tylko-w-onecie/pawel-adamowicz-nie-zyje-wiec-ku-czci-pawla-adamowicza/x64d934" data-uuid-ui="c5e59391-6cfb-4cff-bf8c-c1296070707b" data-gtm="wiadomosci_9">

        

        

        

            

            <span class="title">

                
                    Około 16 tys. uczestników wiecu w Gdańsku
                

                

                <svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-10">

    <a href="https://olsztyn.onet.pl/olsztyn-mezczyzna-grozil-prezydentowi-miasta/mgzstl4" data-uuid-ui="bbe2c4c9-b09b-46a5-a141-629978f4051b" data-gtm="wiadomosci_10">

        

        

        

            

            <span class="title">

                
                    Mężczyzna groził prezydentowi Olsztyna
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-11">

    <a href="https://wiadomosci.onet.pl/kraj/pawel-adamowicz-nie-zyje-donald-tusk-zegna-prezydenta-gdanska/fy3mtny" data-uuid-ui="edbc54b7-8726-4647-9489-b03ed254e07d" data-gtm="wiadomosci_11">

        

        

        

            

            <span class="title">

                
                    Tusk: obronimy naszą Polskę i naszą Europę
                

                

                <svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-12">

    <a href="https://wiadomosci.onet.pl/kraj/smierc-pawla-adamowicza-rafal-grupinski-to-nie-jest-czas-na-szukanie-winnych/rfj1z91" data-uuid-ui="af840582-57f3-4c9c-962f-d7d8f61e226d" data-gtm="wiadomosci_12">

        

        

        

            

            <span class="title">

                
                    Grupiński: to nie czas na szukanie winnych
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-13">

    <a href="https://wiadomosci.onet.pl/kraj/sikorski-dolaczamy-do-krajow-w-ktorych-dzieje-sie-przemoc-polityczna/975zwpz" data-uuid-ui="c08f2ad7-5c4d-41ba-80b3-47458f7f4612" data-gtm="wiadomosci_13">

        

        

        

            

            <span class="title">

                
                    Radosław Sikorski: dołączamy do tych krajów
                

                

                <svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-14">

    <a href="https://wiadomosci.onet.pl/kraj/pawel-adamowicz-nie-zyje-zabojca-byl-w-wiezieniu-leczony-psychiatrycznie/353z8jk" data-uuid-ui="57871159-f5c3-4099-82bb-727d46d0a7fa" data-gtm="wiadomosci_14">

        

        

        

            

            <span class="title">

                
                    Nowe fakty ws. zabójcy Pawła Adamowicza
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-15">

    <a href="https://wiadomosci.onet.pl/tylko-w-onecie/jurek-owsiak-nie-jest-szefem-wosp-janina-ochojska-komentuje/w5ke7pd" data-uuid-ui="45d4fe67-e609-4275-9725-59f8c025f305" data-gtm="wiadomosci_15">

        

        

        

            

            <span class="title">

                
                    Janina Ochojska apeluje do Jurka Owsiaka
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-16">

    <a href="https://wiadomosci.onet.pl/opinie/pawel-adamowicz-nie-zyje-komentarz-bartosza-weglarczyka/y9ww2x9" data-uuid-ui="c2e713e0-7277-49a6-8f5f-ed15baf9d334" data-gtm="wiadomosci_16">

        

        
			
				
			
        

        

            

            <span class="title">

                
                    Węglarczyk: ta dymisja to zwycięstwo hejterów
                

                

                </span>

        

        
            <div class="authorContainer">
                
                    
                
            </div>
        
    </a>
    
</li>

                    
                        
    
        
            <li class="sponsored hide">
                <span class="nvfwzzpbkbfk kbqvrzkfnmjk" id="ctdnmjxkq" data-add-label="1"></span>
            </li>
        
    

                    
                
            
        </ul>
        
    </div>

                </section>
                <section data-section="news2">
                    
    
    
    <ul class="moreNews">
        
            
                <li class="item-1">
                <span>Więcej:</span>
                <ul>
                
                <li><a href="https://wiadomosci.onet.pl/kraj">Polska</a></li>
                
                <li><a href="https://wiadomosci.onet.pl/swiat">Świat</a></li>
                
                <li><a href="http://politico.onet.pl/">POLITICO</a></li>
                
                <li><a href="https://wiadomosci.onet.pl/religia">Religia</a></li>
                
                <li><a href="https://wiadomosci.onet.pl/opinie">Opinie</a></li>
                
                <li class="item-last"><a href="https://wiadomosci.onet.pl/newsletter">Newsletter Onetu - zapisz się już dziś!</a></li>
                
                </ul>
                </li>
            
        
    </ul>
    

                </section>
            </article>
        </div>
    



                
                    


            <link rel="stylesheet" type="text/css" href="onet_pliki/style-rm.css">
            <div class="newsBox dailyNeeds" data-section="dailyneedsnav" data-run-module="dailyneeds/main.multiwidget" data-run-module-isrun="1">
    <svg class="mainIconPack" version="1.1" xmlns="http://www.w3.org/2000/svg">
    <defs>
        <symbol id="menuCloseIconPopup" viewBox="0 0 24 24">
            <path class="cls-1" d="M294,95.01a12,12,0,1,1,12-12A12.014,12.014,0,0,1,294,95.01Zm0-23.144A11.143,11.143,0,1,0,305.144,83.01,11.157,11.157,0,0,0,294,71.867Zm-5.012,7.1,0.5-.525,9.522,8.592-0.5.525Zm9.216-.976,0.549,0.5-8.962,9.521-0.549-.5Z" transform="translate(-282 -71)"></path>
        </symbol>
        <symbol id="geoIcon" viewBox="0 0 24 24">
            <path d="M0 0h24v24H0z" fill="none"></path>
            <path d="M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"></path>
        </symbol>
              
        <symbol id="weather" viewBox="0 0 70 70">
            <rect x="28" y="14" class="weather" width="2" height="6"></rect>
            <rect x="37.9" y="21.1" transform="matrix(0.7071 -0.7071 0.7071 0.7071 -3.6771 35.5301)" class="weather" width="6.3" height="2.2"></rect>
            <rect x="16.5" y="19.1" transform="matrix(0.7071 -0.7071 0.7071 0.7071 -10.5434 18.9554)" class="weather" width="2.2" height="6.3"></rect>
            <rect x="10" y="33" class="weather" width="6" height="2"></rect>
            <rect x="14.5" y="44.5" transform="matrix(0.7071 -0.7071 0.7071 0.7071 -27.1193 25.8199)" class="weather" width="6.3" height="2.2"></rect>
            <path class="weather" d="M50.8,37.4c-0.5,0-0.9,0-1.4,0.1c-1.5-4.3-5.5-7.3-10.2-7.3c-0.3,0-0.5,0-0.7,0c-1.6-4.2-6-6.9-10.7-6.1 c-4.2,0.7-7.6,4.4-7.9,8.7c-0.3,4.6,2.6,8.7,6.9,9.9c-2.6,1.7-4.1,4.9-3,8.3c1,3,3.9,4.9,7,4.9h19.7c4.7,0,8.8-3.3,9.5-7.9 C60.9,42.3,56.4,37.4,50.8,37.4z M22,33.9c0-4.1,3.4-7.5,7.5-7.5c3,0,5.7,1.8,6.8,4.5c-4.6,1.3-7.9,5.4-7.9,10.4 c-0.2,0-0.5-0.1-0.7-0.1C24.3,40.4,22,37.4,22,33.9z M51.9,54h-22c-1.1,0-2.1-0.4-2.8-1.2c-3.2-3.6-0.9-8,2.7-8.6l1.1-0.2l-0.2-1.1 c-0.1-0.5-0.2-1.1-0.2-1.6c0-6.5,7.3-11.4,14.2-6.8c1.3,0.9,2.2,2.3,2.6,3.8l0.5,2.2l1.1-0.3c0.6-0.2,1.3-0.3,1.9-0.3 c5.5,0,9.6,6.3,5.4,12.1C55.2,53.2,53.6,54,51.9,54z"></path>
        </symbol>
        <symbol id="jakdojade" viewBox="0 0 70 70">        
            <path class="jakdojade" d="M53.1,26.5c-3.6,0-6.5-2.8-6.5-6.3c0-3.5,2.9-6.3,6.5-6.3c3.6,0,6.5,2.8,6.5,6.3C59.7,23.6,56.7,26.5,53.1,26.5 L53.1,26.5z M53.1,16.9c-1.8,0-3.3,1.4-3.3,3.2c0,1.8,1.5,3.2,3.3,3.2c1.8,0,3.3-1.4,3.3-3.2C56.5,18.4,55,16.9,53.1,16.9L53.1,16.9 L53.1,16.9z M50.2,27.4c-1.3,0.9-2.9,1.9-4.5,3.2c-6.1,4.8-10.9,14.2-12.8,18.5c-0.7-0.7-1.6-1.2-2.6-1.4c1.3-3.6,4.7-11,12.1-20.7	c1.3-1.7,2.3-3.1,3.1-4.3C46.4,24.9,48.1,26.6,50.2,27.4z M33.3,52.1c0,2.1-1.8,3.9-4,3.9c-2.2,0-4-1.7-4-3.9c0-2.1,1.8-3.9,4-3.9h0	C31.5,48.3,33.2,50,33.3,52.1L33.3,52.1z M29.3,51.1c-0.9,0-1.6,0.7-1.6,1.5c0,0.8,0.7,1.5,1.6,1.5c0.9,0,1.6-0.7,1.6-1.5 C30.8,51.8,30.1,51.1,29.3,51.1L29.3,51.1z M17.7,45.1c-1-1.2-1.9-2.3-2.7-3.3c0.2,0,0.3,0,0.5,0c1.4,0,2.8-0.5,3.9-1.3 c0.1,0.5,0.2,1,0.4,1.5c0.9,2.5,3.4,5.1,5.9,7.2c-0.7,0.7-1.2,1.6-1.4,2.5C21.9,49.7,19.7,47.5,17.7,45.1z M15.4,40.6	c-2.8,0-5.1-2.3-5.1-5c0-2.8,2.3-5,5.2-5c2.8,0,5.1,2.2,5.1,5C20.6,38.4,18.3,40.6,15.4,40.6L15.4,40.6z M15.4,33.3	c-1.3,0-2.3,1-2.3,2.3c0,1.3,1.1,2.3,2.4,2.3c1.3,0,2.3-1,2.3-2.3C17.8,34.3,16.7,33.3,15.4,33.3L15.4,33.3z"></path>
        </symbol>
        <symbol id="lotto" viewBox="0 0 70 70">
            <path class="lotto" d="M21,56v-3h27v3H21z M33.6,26.5c0.7-0.3,1.5-0.5,2.5-0.5c4.1,0,6.1,3,6.1,8.9c0,3.3-0.6,5.8-1.8,7.7 c-1.2,1.9-3.1,2.8-5.8,2.8c-2.5,0-4.4-0.9-5.7-2.8c-1.3-1.9-1.9-4.3-1.9-7.3V24.4c0-3.3,0.6-5.9,1.7-7.8c1.1-1.9,3.1-2.8,5.9-2.8 c2.5,0,4.3,0.6,5.4,1.9c1.2,1.3,1.8,3.2,1.8,5.8l0,0.5h-4.8c0-1.5-0.2-2.5-0.5-3.2c-0.3-0.6-1-1-2-1c-1,0-1.6,0.5-2,1.4 c-0.4,1-0.6,2.6-0.6,4.9v3.7C32.3,27.3,32.9,26.8,33.6,26.5z M32,36.7c0,3.2,0.9,4.8,2.8,4.8c1,0,1.8-0.5,2.1-1.4 c0.4-0.9,0.6-2.3,0.6-4.1c0-1.4-0.1-2.4-0.2-3.2c-0.1-0.8-0.3-1.4-0.7-1.9c-0.4-0.5-1-0.7-1.8-0.7c-0.6,0-1.2,0.2-1.7,0.5 c-0.5,0.3-0.9,0.7-1.1,1.1V36.7z"></path>
        </symbol>
        <symbol id="air" viewBox="0 0 64 64">           
            <path class="air" d="M49.6,46.1C49.6,46.1,49.6,46,49.6,46.1c-0.2-0.1-0.3-0.2-0.4-0.2l-5.4-1.7
                c-0.3-0.1-0.6-0.3-0.8-0.6c-1.9-3.7-5.8-9.8-10.6-9.8c-4.8,0-8.7,6.1-10.6,9.8c-0.2,0.3-0.4,0.5-0.8,0.6l-5.3,1.7
                c-0.1,0-0.3,0.1-0.3,0.2c0,0-0.1,0-0.1,0c-1.1,0.7-1.7,2-1.6,3.9c0.1,1.6,0.7,3.5,1.7,5.2c1.7,3,4.3,5,6.4,5c0.5,0,1-0.1,1.4-0.4
                l3.6-2.5c0.4-0.2,0.8-0.3,1.3-0.1c2.8,1.2,5.8,1.1,8.6,0c0.4-0.2,0.9-0.1,1.3,0.1l3.6,2.5l0.1,0c0.4,0.2,0.9,0.4,1.4,0.4
                c2.1,0,4.6-2,6.4-5C51.7,51.3,51.8,47.3,49.6,46.1z M22.8,57.6c-0.1,0.3-0.3,0.5-0.4,0.6l0,0c-0.2,0.1-0.4,0.1-0.7,0.1
                c-1.1-0.1-3.1-1.4-4.6-4.1c-0.9-1.5-1.4-3.1-1.5-4.4c0-0.8,0.1-1.5,0.4-1.9c0.1-0.1,0.2-0.2,0.3-0.3c0,0,0.1,0,0.1,0
                c0,0,0.1,0,0.1,0c0,0,0.1,0,0.1,0c0.1,0,0.1,0,0.2,0c0.1,0,0.3,0,0.5,0.1c1,0.3,2.8,1.5,4.2,4c0.9,1.5,1.4,3.1,1.5,4.4
                C23.1,56.7,23,57.2,22.8,57.6L22.8,57.6z M43.4,51.6c0.9-1.5,2-2.7,3.1-3.5c0.4-0.2,0.7-0.4,1.1-0.5l0.1,0c0.2,0,0.3-0.1,0.5-0.1
                c0.1,0,0.1,0,0.2,0c0,0,0.1,0,0.1,0c0,0,0.1,0,0.1,0c0.1,0,0.1,0,0.1,0c0.1,0.1,0.2,0.2,0.3,0.3c0.7,0.9,0.5,3.5-1.1,6.3
                c-1.5,2.7-3.5,4-4.6,4.1c-0.3,0-0.5,0-0.7-0.1l0,0c-0.2-0.1-0.3-0.3-0.4-0.6C42,57.2,41.9,56.7,42,56C42,54.7,42.6,53.1,43.4,51.6z
                 M40.1,56.5l-3.4-2.3c-0.4-0.2-0.6-0.9-0.5-1.7c0.1-1.1,0.5-2.4,1.2-3.7c1.3-2.2,3-3.4,4-3.4c0.1,0,0.2,0,0.3,0l3.8,1.2
                c0,0-0.1,0-0.1,0.1c-0.6,0.4-1.3,1-1.9,1.7c-0.7,0.7-1.2,1.5-1.8,2.4c-0.7,1.2-1.2,2.5-1.5,3.7c-0.1,0.6-0.2,1.1-0.2,1.5
                C40.1,56.1,40.1,56.3,40.1,56.5z M30.6,52.4c-0.1-1.4-0.6-3-1.5-4.5c-1-1.8-2.4-3.2-3.8-3.9c-0.3-0.2-0.6-0.5-0.7-0.8
                c-0.1-0.3-0.1-0.7,0.1-1c1.8-3,4.7-6.7,7.8-6.7c3.1,0,5.9,3.6,7.8,6.7c0.2,0.3,0.2,0.7,0.1,1c-0.1,0.4-0.3,0.6-0.7,0.8
                c-1.4,0.7-2.7,2.1-3.8,3.9c-0.9,1.5-1.4,3.1-1.5,4.5c-0.1,1.5,0.4,2.7,1.2,3.3c-2.1,0.8-4.3,0.8-6.3,0
                C30.2,55.1,30.7,53.9,30.6,52.4z M24.6,54.5c-0.3-1.3-0.8-2.6-1.5-3.8c-0.5-0.9-1.2-1.8-1.8-2.5c-0.6-0.7-1.3-1.2-1.9-1.6l3.9-1.2
                c0.9-0.3,2.8,1,4.2,3.4c0.7,1.3,1.2,2.6,1.2,3.7c0.1,0.9-0.1,1.5-0.6,1.8l-3.3,2.3c0-0.2,0-0.4,0-0.6
                C24.8,55.5,24.8,55.1,24.6,54.5z"></path>
            <path class="air" d="M27.9,32.1c0.1,0,0.2,0.1,0.2,0.1c0.1,0,0.2,0.1,0.3,0.1c0.1,0,0.2,0.1,0.3,0.1l0.5,0.2
                c0.3,0.1,0.4,0.2,0.4,0.2l0.4,0.1l-0.2-0.3c0,0-0.1-0.1-0.2-0.4L29.5,32c-0.2-0.2-0.4-0.6-0.8-0.9c0,0-0.1-0.1-0.1-0.1
                c-0.2-0.1-0.3-0.3-0.6-0.4c-0.1,0-0.2-0.1-0.2-0.1c-0.2-0.1-0.4-0.2-0.6-0.3c-0.1,0-0.2-0.1-0.3-0.1c-0.2-0.1-0.5-0.2-0.7-0.2
                c-0.4-0.1-0.8-0.1-1.1,0c-0.7,0.1-1.4,0.3-2,0.6c-0.5,0.3-1,0.6-1.4,1c-0.7,0.7-1,1.4-1,1.4l-0.1,0.3l1.8-0.7l0,0
                c0.3-0.1,0.7-0.3,1.1-0.4c0,0.2-0.1,0.4-0.1,0.6c0,0.5,0.3,1,0.7,1.4c0.4,0.3,0.9,0.5,1.4,0.5c0,0,0.1,0,0.1,0c0.5,0,1-0.3,1.4-0.7
                c0.4-0.4,0.5-0.9,0.5-1.5c0-0.2,0-0.4-0.1-0.5c0.1,0,0.1,0,0.2,0C27.6,32,27.8,32,27.9,32.1z"></path>
            <path class="air" d="M44.5,33.2l-0.1-0.3c0,0-0.3-0.7-1-1.4c-0.4-0.4-0.9-0.8-1.4-1c-0.6-0.3-1.3-0.5-2-0.6
                c-0.3,0-0.7,0-1.1,0c-0.3,0-0.5,0.1-0.8,0.2c-0.1,0-0.2,0.1-0.3,0.1c-0.2,0.1-0.5,0.2-0.6,0.3c-0.1,0-0.2,0.1-0.2,0.1
                c-0.2,0.1-0.4,0.3-0.6,0.4c0,0-0.1,0.1-0.1,0.1c-0.4,0.3-0.6,0.6-0.8,0.9l-0.1,0.1c-0.2,0.2-0.2,0.4-0.2,0.4L35,32.8l0.4-0.1
                c0,0,0.2-0.1,0.4-0.2l0.5-0.2c0.1,0,0.2-0.1,0.3-0.1c0.1,0,0.2-0.1,0.3-0.1c0.1,0,0.2-0.1,0.2-0.1c0.1,0,0.3-0.1,0.4-0.1
                c0.1,0,0.1,0,0.2,0c-0.1,0.2-0.1,0.4-0.1,0.5c0,0.5,0.2,1.1,0.5,1.5c0.4,0.4,0.9,0.6,1.4,0.7c0,0,0.1,0,0.1,0c0.5,0,1-0.2,1.4-0.5
                c0.4-0.4,0.6-0.9,0.7-1.4c0-0.2,0-0.4-0.1-0.6c0.4,0.1,0.8,0.3,1.1,0.4L44.5,33.2z"></path>
            <path class="air" d="M54.6,30.2c-0.5-0.9-1.3-1.6-2.2-2c1.5-3.9,2.4-9.8-1.3-16c-3.5-5.9-7.8-5.9-9.6-5.5
                C38.7,2.8,29.3,2.4,22,5.8c-4.2,1.9-13.6,8-9.8,22.2c-2.4,1-3.9,3.9-3.5,7c0.2,1.7,1,3.3,2.2,4.4c1.1,1,2.3,1.5,3.6,1.5
                c0.2,0,0.4,0,0.6,0c0.5-0.1,0.9-0.5,0.8-1c-0.1-0.5-0.5-0.8-1-0.8c-1,0.1-1.9-0.2-2.8-1c-0.9-0.8-1.4-2-1.6-3.3
                c-0.3-2.2,0.6-4.2,2.2-5c0.5,1.5,1.1,3,1.8,4.5c0.1,0.3,0.5,0.5,0.9,0.5c0.4,0,0.7-0.2,0.8-0.6c0-0.1,2.5-6.3,6.9-8
                c2.4-1,14.5-5.9,17.5-10.2c0,0,0,0,0,0c0.3,0,1.8,0.7,3.9,3.3c3.4,4.1,3.6,13.1,3.6,13.5c0,0.4,0.3,0.7,0.6,0.9
                c0.4,0.1,0.8,0,1-0.3c0,0,1-1.3,2-3.5c0.5,0.3,1,0.7,1.4,1.3c0.6,1,0.9,2.3,0.7,3.6c-0.2,1.3-0.7,2.5-1.6,3.3
                c-0.8,0.8-1.8,1.1-2.8,1c-0.5-0.1-1,0.3-1,0.8c-0.1,0.5,0.3,1,0.8,1c0.2,0,0.4,0,0.6,0c1.3,0,2.6-0.5,3.6-1.5
                c1.2-1.1,1.9-2.7,2.2-4.4C55.8,33.2,55.4,31.5,54.6,30.2z M49.5,13.1c3.4,5.7,2.5,11.1,1.1,14.7c-0.2,0.5-0.4,0.9-0.6,1.3
                c-0.1,0.3-0.3,0.6-0.4,0.8c-0.3-3.3-1.2-8.7-3.8-11.8c-1.2-1.5-3.6-3.9-5.4-3.9c0,0-0.1,0-0.1,0c-0.6,0-1.1,0.3-1.4,0.8
                c-2,3-10.2,7-16.6,9.6c-3.5,1.4-5.8,5-7,7.1c-0.4-0.9-0.7-1.9-1-2.8c-0.1-0.3-0.2-0.6-0.3-1c-1.2-4.4-2.7-15.1,8.7-20.4
                c3-1.4,6.5-2.2,9.8-2.2c3.9,0,6.9,1.1,7.6,2.7c0.2,0.4,0.7,0.6,1.2,0.5C41.4,8.5,45.8,6.9,49.5,13.1z"></path>
        </symbol>
        <symbol id="horoscope" viewBox="0 0 70 70">
            <path class="horoscope" d="M10.6,35L10.6,35c0,2.1,0.7,4,2.1,5.6c1.5,1.8,3.6,2.9,5.9,3.1c0.3,0,0.5,0,0.8,0c2,0,4-0.7,5.6-2 c1.8-1.5,2.9-3.6,3.1-5.9c0.2-2.3-0.5-4.6-2-6.4c-1.5-1.8-3.6-2.9-5.9-3.1c-1.7-0.1-3.3,0.2-4.8,1c3.5-6.3,11-10.7,19.7-10.7 c5.3,0,10.4,1.6,14.3,4.6l1.6-2.1c-4.4-3.3-10.1-5.1-15.9-5.1C21.5,13.9,10.6,23.4,10.6,35z M19.3,29c0.2,0,0.4,0,0.5,0 c1.6,0.1,3.1,0.9,4.1,2.1c1,1.2,1.5,2.8,1.4,4.4c-0.1,1.6-0.9,3.1-2.1,4.1c-1.2,1-2.8,1.5-4.4,1.4c-1.6-0.1-3.1-0.9-4.1-2.1 c-1-1.2-1.5-2.8-1.4-4.4c0.1-1.6,0.9-3.1,2.1-4.1C16.5,29.5,17.9,29,19.3,29z"></path>
            <path class="horoscope" d="M59.4,35L59.4,35c0-2.1-0.7-4-2.1-5.6c-1.5-1.8-3.6-2.9-5.9-3.1c-4.8-0.4-9,3.1-9.5,7.9 c-0.4,4.8,3.1,9,7.9,9.5c0.3,0,0.5,0,0.8,0c1.4,0,2.8-0.3,4-1C51.3,49,43.7,53.4,35,53.4c-5.3,0-10.4-1.6-14.3-4.6L19.1,51 c4.4,3.3,10.1,5.1,15.9,5.1C48.5,56.1,59.4,46.6,59.4,35z M50.2,41.1c-3.3-0.3-5.8-3.2-5.5-6.6c0.3-3.3,3.2-5.8,6.6-5.5 c1.6,0.1,3.1,0.9,4.1,2.1c1,1.2,1.5,2.8,1.4,4.4c-0.1,1.6-0.9,3.1-2.1,4.1C53.4,40.7,51.8,41.2,50.2,41.1z"></path>
        </symbol>
        <symbol id="tv" viewBox="0 0 70 70">
            <path class="tv" d="M37.5,22.7l8.8-6.2L45,14.7l-10,7l-10-7l-1.3,1.8l8.8,6.2H12.2v27.7h45.5V22.7H37.5z M55.5,48.2H14.5V24.9 h41.1V48.2z"></path>
            <rect x="20" y="53.8" class="tv" width="27.7" height="2.2"></rect>
        </symbol>
    </defs>
</svg>

<svg class="airPollutionIconPack" style="display: none" version="1.1" xmlns="http://www.w3.org/2000/svg">
    <defs>
        <symbol id="airlyLogo" viewBox="0 0 98.6 55.3">
            <path style="fill:#51A0DD;" d="M39.3,45c-0.3-0.5-0.2-1-0.2-1.5c0-3.3,0-6.6,0-9.8c0-0.9-0.3-1.3-1.2-1.2c-0.2,0-0.5,0-0.7,0
		c-0.9-0.1-1.1,0.2-1.1,1.1c0,4.2,0,8.4,0,12.6c0,0.9-0.3,1.3-1,1.7C21.5,54.9,4.8,46.3,2.9,31c0-0.1,0-0.2,0-0.2
		c-0.6-2.4,0.3-3.9,2.1-5.5c4.7-4,9.4-7.9,15.1-10.4c2.9-1.3,5.9-2.1,9-2.9c-5.1-1.5-9.9-0.6-14.5,1.7c-4.6,2.2-8.2,5.6-11.2,9.8
		C5,14.4,13.1,7.1,22,6.1c5-0.6,9.7,0.4,14.1,2.8c0.8,0.4,1.1,0.7,0.3,1.6c-3.3,3.9-7.7,5.7-12.6,6.7c-0.6,0.1-1.2,0.3-1.9,0.4
		c-0.2,0-0.5,0.1-1,0.2c4.4,1.1,8.3,0.7,12-1.5c2.1-1.2,3.7-2.9,4.8-5.1c0.4-0.9,0.7-0.8,1.3-0.2c9.4,7.5,10.8,22.3,2.8,31.4
		C41.2,43.3,40.4,44.3,39.3,45z"></path>
            <path style="fill:#51A0DD;" d="M89.8,46.3c-1,0.6-2,1.2-3.2,1.4c-5,1-9.4-2.6-9.6-7.7c-0.1-2.2,0-4.3,0-6.5c0-0.8,0.2-1,1-1
		c2.3,0.1,2-0.3,2,1.9c0,1.8,0,3.7,0,5.5c0,2.7,1.9,4.7,4.5,4.8c2.8,0.1,4.9-1.5,5.2-4.3c0.3-2.2,0.1-4.5,0.1-6.7
		c0-1,0.2-1.3,1.3-1.3c2,0.1,1.7-0.2,1.7,1.7c0,4.3,0,8.6,0,13c0,1.2-0.3,2.4-0.8,3.5c-0.2,0.5-0.5,0.6-0.9,0.3
		c-0.1-0.1-0.3-0.2-0.4-0.2c-1.1-0.4-1.7-0.9-1.1-2.3C90,47.8,90,47,89.8,46.3z"></path>
            <path style="fill:#51A0DD;" d="M48,42.6c0.1-1.3-0.2-2.9,0.2-4.4c0.8-3.4,3.6-5.8,7-6.1c3.2-0.3,6.4,1.6,7.9,4.6
		c0.5,1,0.2,1.3-0.8,1.6c-1.1,0.3-1.7,0.3-2.3-0.9c-1-2-3.3-2.7-5.5-2.2c-2.1,0.5-3.6,2.5-3.6,5c0,2-0.1,4,0,6
		c0,0.9-0.2,1.3-1.2,1.2c-2.1-0.1-1.7,0.2-1.8-1.8C47.9,44.6,48,43.7,48,42.6z"></path>
            <path style="fill:#52A1DD;" d="M70.7,38.5c0,2.6,0,5.1,0,7.7c0,1-0.3,1.3-1.2,1.2c-0.4,0-0.7,0-1.1,0c-0.6,0-0.8-0.2-0.7-0.8
		c0-5.4,0-10.8,0-16.2c0-0.6,0.2-0.8,0.8-0.8c2.2-0.1,2.2-0.1,2.2,2.1C70.7,33.9,70.7,36.2,70.7,38.5z"></path>
            <path style="fill:#FEFEFE;" d="M26.9,46.2c-3.2,2.1-6.3,2.3-9.4,0.2c-3-2-4.2-6-2.9-9.3c1.4-3.4,5-5.5,8.3-5c4,0.7,6.7,3.5,6.8,7.3
		c0.1,2.4,0,4.8,0.1,7.2c0,0.5-0.1,0.7-0.7,0.7c-0.4,0-0.9,0-1.3,0C27,47.5,26.7,47.1,26.9,46.2z"></path>
            <path style="fill:#FCFDFD;" d="M38,21.9c-2.3,0-3.9,0.7-5.2,2.1c-0.3,0.3-0.5,0.8-1,0.4c-0.5-0.4-0.1-0.8,0.2-1.1
		c2.9-3.4,8.4-3.4,11.4,0.1c0.3,0.3,0.8,0.6,0.3,1.1c-0.5,0.5-0.8-0.1-1.1-0.4C41,22.5,39.7,21.9,38,21.9z"></path>
            <path style="fill:#FAFCFD;" d="M37.7,22.9c1.5,0,2.8,0.6,3.9,1.7c0.2,0.3,0.5,0.6,0.1,0.9c-0.4,0.4-0.6,0.1-0.9-0.1
		c-2.3-1.9-3.8-1.9-6.1-0.2c-0.3,0.3-0.7,0.5-1,0.1c-0.3-0.4,0.1-0.7,0.3-0.9C35,23.4,36.3,23,37.7,22.9z"></path>
            <path style="fill:#FCFDFD;" d="M39.4,29.6c0,1-0.7,1.7-1.6,1.7c-1,0-1.8-0.8-1.8-1.7c0-0.9,0.8-1.7,1.8-1.7
		C38.7,27.9,39.4,28.6,39.4,29.6z"></path>
            <path style="fill:#FCFDFD;" d="M37.6,25.2c0.8,0,1.6,0.2,2.2,0.8c0.2,0.2,0.4,0.5,0.2,0.7c-0.2,0.3-0.5,0.3-0.7,0.2
		c-1.1-0.8-2.1-0.9-3.2,0c-0.2,0.2-0.5,0.1-0.7-0.2c-0.2-0.3,0-0.5,0.2-0.7C36.1,25.5,36.8,25.2,37.6,25.2z"></path>
            <path style="fill:#51A0DD;" d="M26.8,40c0,2.7-2.3,5-5,4.9c-2.7,0-4.9-2.3-4.9-5c0-2.7,2.3-4.9,4.9-4.9C24.6,35,26.9,37.2,26.8,40z
		"></path>
        </symbol>
        <symbol id="mood_0" viewBox="0 0 32 32">
            <circle cx="9.75" cy="12.5" r="2.75"></circle>
            <circle cx="22.25" cy="12.5" r="2.75"></circle>
            <path d="M25.809,20.459 7,24 7,23 25.809,19.459z"></path>
        </symbol>
        <symbol id="mood_1_2" viewBox="0 0 32 32">
            <circle cx="9.75" cy="12.5" r="2.75"></circle>
            <circle cx="22.25" cy="12.5" r="2.75"></circle>
            <path d="M16.583,25.917c-4.313,0-8.209-2.728-9.695-6.786l0.939-0.344c1.342,3.666,4.861,6.13,8.756,6.13
	c3.895,0,7.413-2.464,8.756-6.13l0.939,0.344C24.791,23.189,20.896,25.917,16.583,25.917z"></path>
        </symbol>
        <symbol id="mood_3" viewBox="0 0 32 32">
            <circle cx="9.75" cy="12.5" r="2.75"></circle>
            <circle cx="22.25" cy="12.5" r="2.75"></circle>
            <rect x="6.596" y="20.459" width="18.809" height="1.5"></rect>
        </symbol>
        <symbol id="mood_4" viewBox="0 0 32 32">
            <circle cx="9.75" cy="12.5" r="2.75"></circle>
            <circle cx="22.25" cy="12.5" r="2.75"></circle>
            <path d="M23.735,22.82c-1.78-2.137-4.388-3.362-7.152-3.362s-5.372,1.226-7.152,3.362L8.663,22.18
	c1.971-2.365,4.858-3.722,7.92-3.722s5.949,1.356,7.92,3.722L23.735,22.82z"></path>
        </symbol>
        <symbol id="mood_5_6" viewBox="0 0 32 32">
            <path d="M26.167,13.229c0,2.221-1.803,4.021-4.021,4.021c-2.223,0-4.021-1.8-4.021-4.021c0-0.583,7.214-2.317,7.478-2.054
	C26.098,11.67,26.167,12.479,26.167,13.229z"></path>
            <path d="M6.126,13.229c0,2.22,1.803,4.021,4.021,4.021c2.223,0,4.021-1.801,4.021-4.021c0-0.583-7.214-2.317-7.478-2.054
	C6.195,11.67,6.126,12.479,6.126,13.229z"></path>
        </symbol>
    </defs>
</svg>
    

<ul class="dn-menu">
    <li>
        <a class="weather active" href="https://pogoda.onet.pl/" data-tab="weather">
            <svg><use xlink:href="#weather"></use></svg>
            <span>Pogoda</span>
        </a>
    </li>
    
    <li>
        <a class="air" href="#" data-tab="air">
            <svg><use xlink:href="#air"></use></svg>
            Stan powietrza
        </a>
    </li>
    
    <li>
        <a class="tv" href="https://programtv.onet.pl/" data-tab="tv">
            <svg><use xlink:href="#tv"></use></svg>
            <span>Program TV</span>
        </a>
    </li>
    <li>
        <a class="horoscope" href="http://magia.onet.pl/horoskop/" data-tab="horoscope">
            <svg><use xlink:href="#horoscope"></use></svg>
            <span>Horoskop</span>
        </a>
    </li>
    <li>
        <a class="jakdojade" href="https://jakdojade.pl/" data-tab="jakdojade" data-offline="forward">
            <svg><use xlink:href="#jakdojade"></use></svg>
            <span>Jak dojadę</span>
        </a>
    </li>
    <li class="lastItem">
        <a class="lotto" href="http://lotto.onet.pl/" data-tab="lotto">
            <svg><use xlink:href="#lotto"></use></svg>
            <span>Lotto</span>
        </a>
    </li>
</ul>

<div class="menuSeparator"></div>
<svg class="menuSeparatorSvg" style="display: none" width="100%" height="100%" xmlns="http://www.w3.org/2000/svg">
 <g>
  <line stroke="#f3f3f3" stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_1" y2="78.999995" x2="29.435164" y1="1.975314" x1="0.123419" fill="none"></line>
  <line stroke="#f3f3f3" transform="rotate(-137.8317108154297 14.854377746582031,118.03594970703125) " stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_2" y2="157.607113" x2="30.936892" y1="78.464779" x1="-1.228136" fill="none"></line>
 </g>
</svg>
    
    <div class="dn-tabs">
        
            
<div class="dn-tab dn-tab-weather active dn-tab-weatherWithAir" data-tab="weather">
    <section>
        <div class="popup">
            <span class="loc">Warszawa</span>
            <svg class="popupClose"><use xlink:href="#menuCloseIconPopup"></use></svg>

            <form class="searchCity" action="#" method="GET">
                <input type="text" placeholder="Wyszukaj miasto...">
                <input type="submit" value="OK">
            </form>

            <ul class="predefinedCities">
            
                <li><span data-now-temp="-5" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="-3" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/17.svg" data-tomorrow-description="Pochmurno z opadami śniegu" data-weather-id="351446" data-location-name="Suwałki" data-air-id="351446" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/suwalki-351446">Suwałki</span></li>
            
                <li><span data-now-temp="0" data-now-icon="https://ocdn.eu/weather/weather_state_icons/9.svg" data-now-description="Zachmurzenie umiarkowane" data-tomorrow-temp="2" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/2.svg" data-tomorrow-description="Przejaśnienia, zachmurzenie umiarkowane" data-weather-id="351892" data-location-name="Szczecin" data-air-id="351892" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/szczecin-351892">Szczecin</span></li>
            
                <li><span data-now-temp="0" data-now-icon="https://ocdn.eu/weather/weather_state_icons/9.svg" data-now-description="Zachmurzenie umiarkowane" data-tomorrow-temp="2" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-tomorrow-description="Pochmurno" data-weather-id="355171" data-location-name="Toruń" data-air-id="355171" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/torun-355171">Toruń</span></li>
            
                <li><span data-now-temp="-2" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="-1" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-tomorrow-description="Pochmurno" data-weather-id="325715" data-location-name="Olsztyn" data-air-id="325715" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/olsztyn-325715">Olsztyn</span></li>
            
                <li><span data-now-temp="-2" data-now-icon="https://ocdn.eu/weather/weather_state_icons/9.svg" data-now-description="Zachmurzenie umiarkowane" data-tomorrow-temp="1" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/16.svg" data-tomorrow-description="Zachmurzenie umiarkowane z opadami śniegu" data-weather-id="325985" data-location-name="Opole" data-air-id="325985" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/opole-325985">Opole</span></li>
            
                <li><span data-now-temp="-4" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="-1" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-tomorrow-description="Pochmurno" data-weather-id="311624" data-location-name="Lublin" data-air-id="311624" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/lublin-311624">Lublin</span></li>
            
                <li><span data-now-temp="-5" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="0" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/17.svg" data-tomorrow-description="Pochmurno z opadami śniegu" data-weather-id="299998" data-location-name="Katowice" data-air-id="299998" data-pollution-level="2" data-location-url="https://pogoda.onet.pl/prognoza-pogody/katowice-299998">Katowice</span></li>
            
                <li><span data-now-temp="-1" data-now-icon="https://ocdn.eu/weather/weather_state_icons/9.svg" data-now-description="Zachmurzenie umiarkowane" data-tomorrow-temp="2" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/13.svg" data-tomorrow-description="Zachmurzenie umiarkowane z opadami deszczu ze śniegiem" data-weather-id="362450" data-location-name="Wrocław" data-air-id="362450" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/wroclaw-362450">Wrocław</span></li>
            
                <li><span data-now-temp="-5" data-now-icon="https://ocdn.eu/weather/weather_state_icons/9.svg" data-now-description="Zachmurzenie umiarkowane" data-tomorrow-temp="-1" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-tomorrow-description="Pochmurno" data-weather-id="300882" data-location-name="Kielce" data-air-id="300882" data-pollution-level="2" data-location-url="https://pogoda.onet.pl/prognoza-pogody/kielce-300882">Kielce</span></li>
            
                <li><span data-now-temp="-3" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="-2" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/17.svg" data-tomorrow-description="Pochmurno z opadami śniegu" data-weather-id="342624" data-location-name="Rzeszów" data-air-id="342624" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/rzeszow-342624">Rzeszów</span></li>
            
                <li><span data-now-temp="0" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="2" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-tomorrow-description="Pochmurno" data-weather-id="335979" data-location-name="Poznań" data-air-id="335979" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/poznan-335979">Poznań</span></li>
            
                <li><span data-now-temp="1" data-now-icon="https://ocdn.eu/weather/weather_state_icons/9.svg" data-now-description="Zachmurzenie umiarkowane" data-tomorrow-temp="2" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/2.svg" data-tomorrow-description="Przejaśnienia, zachmurzenie umiarkowane" data-weather-id="304806" data-location-name="Koszalin" data-air-id="304806" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/koszalin-304806">Koszalin</span></li>
            
                <li><span data-now-temp="1" data-now-icon="https://ocdn.eu/weather/weather_state_icons/8.svg" data-now-description="Bezchmurnie" data-tomorrow-temp="1" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/2.svg" data-tomorrow-description="Przejaśnienia, zachmurzenie umiarkowane" data-weather-id="287788" data-location-name="Gdańsk" data-air-id="287788" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/gdansk-287788">Gdańsk</span></li>
            
                <li><span data-now-temp="-4" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="0" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/17.svg" data-tomorrow-description="Pochmurno z opadami śniegu" data-weather-id="306020" data-location-name="Kraków" data-air-id="306020" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/krakow-306020">Kraków</span></li>
            
                <li><span data-now-temp="-3" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="0" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-tomorrow-description="Pochmurno" data-weather-id="313660" data-location-name="Łódź" data-air-id="313660" data-pollution-level="2" data-location-url="https://pogoda.onet.pl/prognoza-pogody/lodz-313660">Łódź</span></li>
            
                <li><span data-now-temp="-3" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="0" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-tomorrow-description="Pochmurno" data-weather-id="357732" data-location-name="Warszawa" data-air-id="357732" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/warszawa-357732">Warszawa</span></li>
            
                <li><span data-now-temp="0" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="1" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/2.svg" data-tomorrow-description="Przejaśnienia, zachmurzenie umiarkowane" data-weather-id="289581" data-location-name="Gorzów Wielkopolski" data-air-id="289581" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/gorzow-wielkopolski-289581">Gorzów Wielkopolski</span></li>
            
                <li><span data-now-temp="-9" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="-5" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/17.svg" data-tomorrow-description="Pochmurno z opadami śniegu" data-weather-id="365801" data-location-name="Zakopane" data-air-id="365801" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/zakopane-365801">Zakopane</span></li>
            
                <li><span data-now-temp="-4" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="-2" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-tomorrow-description="Pochmurno" data-weather-id="270085" data-location-name="Białystok" data-air-id="270085" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/bialystok-270085">Białystok</span></li>
            
                <li><span data-now-temp="-1" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="2" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/13.svg" data-tomorrow-description="Zachmurzenie umiarkowane z opadami deszczu ze śniegiem" data-weather-id="368720" data-location-name="Zielona Góra" data-air-id="368720" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/zielona-gora-368720">Zielona Góra</span></li>
            
                <li><span data-now-temp="1" data-now-icon="https://ocdn.eu/weather/weather_state_icons/3.svg" data-now-description="Pochmurno" data-tomorrow-temp="2" data-tomorrow-icon="https://ocdn.eu/weather/weather_state_icons/2.svg" data-tomorrow-description="Przejaśnienia, zachmurzenie umiarkowane" data-weather-id="276560" data-location-name="Bydgoszcz" data-air-id="276560" data-pollution-level="1" data-location-url="https://pogoda.onet.pl/prognoza-pogody/bydgoszcz-276560">Bydgoszcz</span></li>
            
            </ul>
            <ul class="ajaxItems"></ul>

            <div class="popupFooter useGeolocation">
                <span class="detectLocation">
                    <svg>
                        <use xlink:href="#geoIcon"></use>
                    </svg>
                    Automatycznie (na podstawie lokalizacji)
                </span>
                <span class="errorMessage"></span>
            </div>
        </div>

        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
            <span class="locationName">
                <svg>
                    <use xlink:href="#geoIcon"></use>
                </svg>
                <span>Warszawa</span>
            </span>

            <div class="weatherBox">
                <a data-href="https://pogoda.onet.pl/prognoza-pogody/[CITYSEO]-[LOCATIONID]" href="https://pogoda.onet.pl/prognoza-pogody/warszawa-357732">
                    <span class="weatherToday" data-weather="today">
                        <span class="when">Dzisiaj</span>
                        <img class="iconNow" src="onet_pliki/3.svg" alt="Pochmurno" title="Pochmurno">

                        <span class="temp tempNow">
                        
                            <span class="deg">-3</span>°
                        
                        </span>
                    </span>

                    <span class="weatherTomorrow" data-weather="tomorrow">
                        <span class="when">Jutro</span>

                        <img class="iconTomorrow" src="onet_pliki/3.svg" alt="Pochmurno" title="Pochmurno">

                        <span class="temp tempTomorrow">
                        
                            <span class="deg">0</span>°
                        
                        </span>
                    </span>
                        </a>
                    <div class="air-state">
                        <div class="air-state__header">
                            <span class="air-state__description">Stan powietrza</span>
                            <a href="https://airly.eu/pl/" target="_blank" rel="nofollow" data-weather="logo">
                                <svg class="air-state__logo air-state__logo_airly">
                                    <use xlink:href="#airlyLogo"></use>
                                </svg>
                            </a>
                        </div>

                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        <div class="air-state__content">
                                <a class="airLink" href="https://pogoda.onet.pl/prognoza-pogody/warszawa-357732" data-weather="airLink">
                            <svg class="air-state__logo air-state__logo_state air-state__logo_state_pollution-level_1">

                                
                                
                                    <use xlink:href="#mood_1_2"></use>
                                
                                
                                
                                
                                
                            </svg>
                            <span class="air-state__state" data-descriptions="{&quot;lev0&quot;:&quot;Brak danych&quot;,&quot;lev1&quot;:&quot;Dobry&quot;,&quot;lev2&quot;:&quot;Dobry&quot;,&quot;lev3&quot;:&quot;Umiarkowany&quot;,&quot;lev4&quot;:&quot;Zły&quot;,&quot;lev5&quot;:&quot;Bardzo zły&quot;,&quot;lev6&quot;:&quot;Bardzo zły&quot;}">
                            
                                Dobry
                            
                            </span>
                            </a>
                        </div>
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                    </div>
            </div>
            <a class="fullWeatherLink" data-href="https://pogoda.onet.pl/prognoza-pogody/dlugoterminowa/[CITYSEO]-[LOCATIONID]" href="https://pogoda.onet.pl/prognoza-pogody/dlugoterminowa/warszawa-357732" data-weather="link">
                <span>Prognoza długoterminowa</span>
            </a>
        
        
        
        
        
        
        
        
        
        
        
        
    </section>
</div>

        
            
<div class="dn-tab dn-tab-air" data-tab="air">
    <section>
        <div class="popup">
            <span class="loc">Warszawa</span>
            <svg class="popupClose"><use xlink:href="#menuCloseIconPopup"></use></svg>

            <form class="searchCity" action="#" method="GET">
                <input type="text" placeholder="Wyszukaj miasto...">
                <input type="submit" value="OK">
            </form>

            <ul class="predefinedCities">
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="42" data-pm10-limit-percentage="33" data-locality="Suwałki" data-route="Skłodowskiej-Curie" data-street-number="7" data-air-id="351446" data-location-url="https://pogoda.onet.pl/prognoza-pogody/suwalki-351446" data-location-name="Suwałki 
                    ">                    
                    Suwałki                    
                    </span></li>
                
                <li><span data-vendor="GIOŚ" data-pollution-level="1" data-pm25-limit-percentage="42" data-pm10-limit-percentage="" data-locality="Szczecin" data-route="Marszałka Józefa Piłsudskiego" data-street-number="1A" data-air-id="351892" data-location-url="https://pogoda.onet.pl/prognoza-pogody/szczecin-351892" data-location-name="Szczecin 
                    ">                    
                    Szczecin                    
                    </span></li>
                
                <li><span data-vendor="GIOŚ" data-pollution-level="1" data-pm25-limit-percentage="" data-pm10-limit-percentage="11" data-locality="Toruń" data-route="Wały Gen. Sikorskiego 12" data-street-number="" data-air-id="355171" data-location-url="https://pogoda.onet.pl/prognoza-pogody/torun-355171" data-location-name="Toruń 
                    ">                    
                    Toruń                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="22" data-pm10-limit-percentage="15" data-locality="Olsztyn" data-route="Wyzwolenia" data-street-number="30" data-air-id="325715" data-location-url="https://pogoda.onet.pl/prognoza-pogody/olsztyn-325715" data-location-name="Olsztyn 
                    ">                    
                    Olsztyn                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="25" data-pm10-limit-percentage="20" data-locality="Opole" data-route="Krakowska 31" data-street-number="" data-air-id="325985" data-location-url="https://pogoda.onet.pl/prognoza-pogody/opole-325985" data-location-name="Opole 
                    ">                    
                    Opole                    
                    </span></li>
                
                <li><span data-vendor="GIOŚ" data-pollution-level="1" data-pm25-limit-percentage="43" data-pm10-limit-percentage="22" data-locality="Lublin" data-route="Kleniewskich" data-street-number="3" data-air-id="311624" data-location-url="https://pogoda.onet.pl/prognoza-pogody/lublin-311624" data-location-name="Lublin 
                    ">                    
                    Lublin                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="2" data-pm25-limit-percentage="107" data-pm10-limit-percentage="87" data-locality="Katowice" data-route="3 Maja 21" data-street-number="" data-air-id="299998" data-location-url="https://pogoda.onet.pl/prognoza-pogody/katowice-299998" data-location-name="Katowice 
                    ">                    
                    Katowice                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="38" data-pm10-limit-percentage="29" data-locality="Wrocław" data-route="Św.Mikołaja 72" data-street-number="" data-air-id="362450" data-location-url="https://pogoda.onet.pl/prognoza-pogody/wroclaw-362450" data-location-name="Wrocław 
                    ">                    
                    Wrocław                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="2" data-pm25-limit-percentage="63" data-pm10-limit-percentage="46" data-locality="Kielce" data-route="Św Leonarda 1/31" data-street-number="" data-air-id="300882" data-location-url="https://pogoda.onet.pl/prognoza-pogody/kielce-300882" data-location-name="Kielce 
                    ">                    
                    Kielce                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="42" data-pm10-limit-percentage="33" data-locality="Rzeszów" data-route="T. Rejtana 23" data-street-number="" data-air-id="342624" data-location-url="https://pogoda.onet.pl/prognoza-pogody/rzeszow-342624" data-location-name="Rzeszów 
                    ">                    
                    Rzeszów                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="27" data-pm10-limit-percentage="21" data-locality="Poznań" data-route="Arcybiskupa Antoniego Baraniaka 88b bud. C" data-street-number="" data-air-id="335979" data-location-url="https://pogoda.onet.pl/prognoza-pogody/poznan-335979" data-location-name="Poznań 
                    ">                    
                    Poznań                    
                    </span></li>
                
                <li><span data-vendor="GIOŚ" data-pollution-level="1" data-pm25-limit-percentage="" data-pm10-limit-percentage="42" data-locality="Koszalin" data-route="Aleja Armii Krajowej" data-air-id="304806" data-location-url="https://pogoda.onet.pl/prognoza-pogody/koszalin-304806" data-location-name="Koszalin 
                    ">                    
                    Koszalin                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="30" data-pm10-limit-percentage="21" data-locality="Gdańsk" data-route="Pocztowa" data-street-number="118" data-air-id="287788" data-location-url="https://pogoda.onet.pl/prognoza-pogody/gdansk-287788" data-location-name="Gdańsk 
                    ">                    
                    Gdańsk                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="39" data-pm10-limit-percentage="36" data-locality="Kraków" data-route="Mikołajska" data-street-number="4B" data-air-id="306020" data-location-url="https://pogoda.onet.pl/prognoza-pogody/krakow-306020" data-location-name="Kraków 
                    ">                    
                    Kraków                    
                    </span></li>
                
                <li><span data-vendor="GIOŚ" data-pollution-level="2" data-pm25-limit-percentage="72" data-pm10-limit-percentage="47" data-locality="Łódź" data-route="Legionów" data-street-number="14A" data-air-id="313660" data-location-url="https://pogoda.onet.pl/prognoza-pogody/lodz-313660" data-location-name="Łódź 
                    ">                    
                    Łódź                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="46" data-pm10-limit-percentage="33" data-locality="Warszawa" data-route="Świętokrzyska" data-street-number="18" data-air-id="357732" data-location-url="https://pogoda.onet.pl/prognoza-pogody/warszawa-357732" data-location-name="Warszawa 
                    ">                    
                    Warszawa                    
                    </span></li>
                
                <li><span data-vendor="GIOŚ" data-pollution-level="1" data-pm25-limit-percentage="" data-pm10-limit-percentage="17" data-locality="Gorzów Wielkopolski" data-route="Kosynierów Gdyńskich" data-street-number="71A" data-air-id="289581" data-location-url="https://pogoda.onet.pl/prognoza-pogody/gorzow-wielkopolski-289581" data-location-name="Gorzów Wielkopolski 
                    ">                    
                    Gorzów Wielkopolski                    
                    </span></li>
                
                <li><span data-vendor="GIOŚ" data-pollution-level="1" data-pm25-limit-percentage="" data-pm10-limit-percentage="44" data-locality="Zakopane" data-route="Henryka Sienkiewicza" data-street-number="24i" data-air-id="365801" data-location-url="https://pogoda.onet.pl/prognoza-pogody/zakopane-365801" data-location-name="Zakopane 
                    ">                    
                    Zakopane                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="19" data-pm10-limit-percentage="13" data-locality="Białystok" data-route="Warszawska 44/1" data-street-number="" data-air-id="270085" data-location-url="https://pogoda.onet.pl/prognoza-pogody/bialystok-270085" data-location-name="Białystok 
                    ">                    
                    Białystok                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="14" data-pm10-limit-percentage="12" data-locality="Zielona Góra" data-route="Podgórna 2" data-street-number="" data-air-id="368720" data-location-url="https://pogoda.onet.pl/prognoza-pogody/zielona-gora-368720" data-location-name="Zielona Góra 
                    ">                    
                    Zielona Góra                    
                    </span></li>
                
                <li><span data-vendor="Airly" data-pollution-level="1" data-pm25-limit-percentage="24" data-pm10-limit-percentage="19" data-locality="Bydgoszcz" data-route="Rejtana 2" data-street-number="" data-air-id="276560" data-location-url="https://pogoda.onet.pl/prognoza-pogody/bydgoszcz-276560" data-location-name="Bydgoszcz 
                    ">                    
                    Bydgoszcz                    
                    </span></li>
                
            </ul>

            <ul class="ajaxItems"></ul>
        </div>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
               
        <span class="locationName">
            <span>            
                
                    Warszawa, Świętokrzyska 18
                
            </span>
        </span>
        
        <span class="partnerBox">Partner: 
            <a class="partnerLogo" href="https://airly.eu/pl/" target="_blank" rel="nofollow" data-air="logo">
                <svg>
                    <use xlink:href="#airlyLogo"></use>
                </svg>
            </a>
        </span>

        <div class="airBox">
            <a class="airLink" href="https://pogoda.onet.pl/prognoza-pogody/warszawa-357732">
                <span class="pollutionIconWrapper" data-air="pollutionLevel">
                    <span class="pollutionIcon pollutionIcon1">
                        <svg>
                            
                                
                                
                                
                                    <use xlink:href="#mood_1_2"></use>
                                
                                
                                
                                                                
                            
                            
                        </svg>
                    </span>
                    <span class="pollutionIconDesc" data-descriptions="{&quot;lev0&quot;:&quot;Brak danych&quot;,&quot;lev1&quot;:&quot;Dobry&quot;,&quot;lev2&quot;:&quot;Dobry&quot;,&quot;lev3&quot;:&quot;Umiarkowany&quot;,&quot;lev4&quot;:&quot;Zły&quot;,&quot;lev5&quot;:&quot;Bardzo zły&quot;,&quot;lev6&quot;:&quot;Bardzo zły&quot;}">
                        
                            Dobry
                        
                    </span>
                </span>

                <span class="pmBox pm10" data-air="pollutionData">
                    <span class="label">PM<i>10</i></span>
                    <span class="value">
                    
                        33%
                    
                    </span>
                </span>
                <span class="pmBox pm25" data-air="pollutionData">
                    <span class="label">PM<i>2.5</i></span>
                    <span class="value">
                    
                        46%
                    
                    </span>
                </span>    
            </a>
            
            
            
                
                    
                        <span class="sourceInfo">
                        Źródło:  <a class="vendor" href="https://airly.eu/pl/" target="_blank" rel="nofollow" data-vendors="[{&quot;v&quot;:&quot;Airly&quot;,&quot;u&quot;:&quot;https://airly.eu/pl/&quot;},{&quot;v&quot;:&quot;GIOŚ&quot;,&quot;u&quot;:&quot;http://powietrze.gios.gov.pl/pjp/home&quot;}]" data-air="source">Airly</a>
                        </span>
                    
                
                    
                
             
            
            <a class="fullAirLink" href="https://pogoda.onet.pl/prognoza-pogody/warszawa-357732" data-air="link">Więcej informacji</a>
            
        </div>
        
        
        
        
        
        
        
        
        
        
        
        
    </section>
<div class="loadingSignalGls"><div class="loadingSignal"><div class="bar4"></div><div class="bar3"></div><div class="bar2"></div><div class="bar1"></div></div> <span>Szukamy najbliższego czujnika</span></div></div>

        
            <div class="dn-tab dn-tab-jakdojade" data-tab="jakdojade">
    <svg class="jakDojadeIconPack" version="1.1" xmlns="http://www.w3.org/2000/svg">
            <defs>
                <symbol id="poiIcon" viewBox="0 0 46 46">
                    <style data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">.cls-1 {
                        fill: #000;
                        fill-rule: evenodd;
                        background: white;
                    }</style>
                    <path class="cls-1" d="M512,684a23,23,0,1,1,23-23A23,23,0,0,1,512,684Zm0-42.991A19.991,19.991,0,1,0,531.991,661,19.991,19.991,0,0,0,512,641.009Zm-0.015,34.98-7.352-12.957a10.222,10.222,0,0,1-2.623-6.852,9.992,9.992,0,1,1,19.98,0,10.221,10.221,0,0,1-2.706,6.945ZM512,652.612a3.569,3.569,0,1,0,3.5,3.568A3.533,3.533,0,0,0,512,652.612Z" transform="translate(-489 -638)"></path>
                </symbol>
                <symbol id="stopbusIcon" viewBox="0 0 32 32">
                    <path d="m4.87 0h22.3c2.69 0 4.87 2.18 4.87 4.87v22.3c0 2.69-2.18 4.87-4.87 4.87h-22.3c-2.69 0-4.87-2.18-4.87-4.87v-22.3c0-2.69 2.18-4.87 4.87-4.87z"></path>
                    <path d="m4.87 2.09h22.3c1.54 0 2.78 1.25 2.78 2.78v22.3c0 1.54-1.25 2.78-2.78 2.78h-22.3c-1.54 0-2.78-1.25-2.78-2.78v-22.3c0-1.54 1.25-2.78 2.78-2.78z" fill="#fff"></path>
                    <path d="m5.36 10.4c-0.435 0-0.788 0.358-0.788 0.799v2.4c0 0.441 0.353 0.799 0.788 0.799s0.788-0.358 0.788-0.799v-2.4c0-0.441-0.353-0.799-0.788-0.799z"></path>
                    <path d="m26.6 10.4c-0.435 0-0.788 0.358-0.788 0.799v2.4c0 0.441 0.353 0.799 0.788 0.799s0.788-0.358 0.788-0.799v-2.4c0-0.441-0.353-0.799-0.788-0.799z"></path>
                    <path d="m23.9 5.56h-15.8c-0.87 0-1.58 0.716-1.58 1.6v16.8c0 0.441 0.353 0.799 0.788 0.799h0.788v1.6c0 0.441 0.353 0.799 0.788 0.799h1.58c0.435 0 0.788-0.358 0.788-0.799v-1.6h9.46v1.6c0 0.441 0.353 0.799 0.788 0.799h1.58c0.435 0 0.788-0.358 0.788-0.799v-1.6h0.788c0.435 0 0.788-0.358 0.788-0.799v-16.8c0-0.882-0.706-1.6-1.58-1.6zm-14.2 17.4c-0.768 0-1.39-0.623-1.39-1.39s0.623-1.39 1.39-1.39c0.768 0 1.39 0.623 1.39 1.39s-0.623 1.39-1.39 1.39zm5.56-4.2h-6.96v-8.35h6.96v8.35zm7 4.2c-0.768 0-1.39-0.623-1.39-1.39s0.623-1.39 1.39-1.39c0.768 0 1.39 0.623 1.39 1.39s-0.623 1.39-1.39 1.39zm1.4-4.2h-6.96v-8.35h6.96v8.35zm0-10h-15.3v-1.8h15.3v1.8z"></path>
                </symbol>
                <symbol id="stoptrolleyIcon" viewBox="0 0 32 32">
                    <path fill="#000" d="M4.87 0h22.261c2.689 0 4.87 2.18 4.87 4.87v22.261c0 2.689-2.18 4.87-4.87 4.87h-22.261c-2.689 0-4.87-2.18-4.87-4.87v-22.261c0-2.689 2.18-4.87 4.87-4.87z"></path>
                    <path fill="#fff" d="M4.87 2.087h22.261c1.537 0 2.783 1.246 2.783 2.783v22.261c0 1.537-1.246 2.783-2.783 2.783h-22.261c-1.537 0-2.783-1.246-2.783-2.783v-22.261c0-1.537 1.246-2.783 2.783-2.783z"></path>
                    <path fill="#000" d="M6.609 12.522c-0.384 0-0.696 0.312-0.696 0.696v2.087c0 0.384 0.312 0.696 0.696 0.696s0.696-0.312 0.696-0.696v-2.087c0-0.384-0.312-0.696-0.696-0.696z"></path>
                    <path fill="#000" d="M25.391 12.522c-0.384 0-0.696 0.312-0.696 0.696v2.087c0 0.384 0.312 0.696 0.696 0.696s0.696-0.312 0.696-0.696v-2.087c0-0.384-0.312-0.696-0.696-0.696z"></path>
                    <path fill="#000" d="M22.957 9.043h-3.478v-0.696c0-0.385-0.312-0.696-0.696-0.696h-0.696v-2.783h-1.391v2.783h-1.391v-2.783h-1.391v2.783h-0.696c-0.384 0-0.696 0.311-0.696 0.696v0.696h-3.478c-0.768 0-1.391 0.623-1.391 1.391v13.913c0 0.384 0.312 0.696 0.696 0.696h0.696v1.391c0 0.384 0.312 0.696 0.696 0.696h1.391c0.384 0 0.696-0.312 0.696-0.696v-1.391h8.348v1.391c0 0.384 0.312 0.696 0.696 0.696h1.391c0.384 0 0.696-0.312 0.696-0.696v-1.391h0.696c0.384 0 0.696-0.312 0.696-0.696v-13.913c0-0.768-0.623-1.391-1.391-1.391zM22.957 10.435v1.391h-13.913v-1.391h13.913zM10.087 23.652c-0.576 0-1.043-0.467-1.043-1.043s0.467-1.043 1.043-1.043c0.576 0 1.043 0.467 1.043 1.043s-0.467 1.043-1.043 1.043zM9.043 20.174v-6.957h6.261v6.957h-6.261zM21.913 23.652c-0.576 0-1.043-0.467-1.043-1.043s0.467-1.043 1.043-1.043c0.576 0 1.043 0.467 1.043 1.043s-0.467 1.043-1.043 1.043zM16.696 20.174v-6.957h6.261v6.957h-6.261z"></path>
                </symbol>
                <symbol id="stopbustramIcon" viewBox="0 0 32 32">
                    <path fill="#000" d="M4.87 0h22.261c2.689 0 4.87 2.18 4.87 4.87v22.261c0 2.689-2.18 4.87-4.87 4.87h-22.261c-2.689 0-4.87-2.18-4.87-4.87v-22.261c0-2.689 2.18-4.87 4.87-4.87z"></path>
                    <path fill="#fff" d="M4.87 2.087h22.261c1.537 0 2.783 1.246 2.783 2.783v22.261c0 1.537-1.246 2.783-2.783 2.783h-22.261c-1.537 0-2.783-1.246-2.783-2.783v-22.261c0-1.537 1.246-2.783 2.783-2.783z"></path>
                    <path fill="#000" d="M11.686 12.12c0-0.691-0.564-1.25-1.259-1.25h-2.765l1.365-2.347c0.171 0.166 0.277 0.396 0.277 0.652h1.314c0-1.223-1.002-2.217-2.233-2.217h-4.73c-1.232 0-2.234 0.995-2.234 2.217h1.314c0-0.255 0.106-0.486 0.277-0.652l1.365 2.347h-2.765c-0.695 0-0.191 0.56-0.191 1.25v12.5c0 0.691-1.135 1.25-0.439 1.25h10.074c0.696 0 1.259-0.56 1.259-1.25l-0.629-12.5zM4.377 8.261h3.285l-1.518 2.609h-0.25l-1.517-2.609zM10.427 12.12l0.068 1.358h-8.952l0.068-1.358h8.815zM10.888 21.304h-9.737l0.327-6.522h9.082l0.328 6.522zM2.338 24.565c-0.544 0-0.986-0.438-0.986-0.978s0.442-0.978 0.986-0.978c0.544 0 0.986 0.438 0.986 0.978s-0.442 0.978-0.986 0.978zM9.565 24.565c-0.544 0-0.986-0.438-0.986-0.978s0.441-0.978 0.986-0.978c0.544 0 0.986 0.438 0.986 0.978s-0.441 0.978-0.986 0.978z"></path>
                    <path fill="#000" d="M8.837 26.598l0.759 1.228h1.518l-0.758-1.228z"></path>
                    <path fill="#000" d="M1.144 27.826h1.518l0.758-1.228h-1.518z"></path>
                    <path fill="#000" d="M15.791 10.357c-0.435 0-0.788 0.358-0.788 0.799v2.396c0 0.441 0.353 0.799 0.788 0.799s0.788-0.358 0.788-0.799v-2.396c0-0.441-0.353-0.799-0.788-0.799z"></path>
                    <path fill="#000" d="M30.205 5.565h-11.654c-0.87 0-1.577 0.716-1.577 1.597v16.773c0 0.441 0.353 0.799 0.788 0.799h0.788v1.597c0 0.441 0.353 0.799 0.788 0.799h1.577c0.435 0 0.788-0.358 0.788-0.799v-1.597h9.289c0.435 0 0.788-0.358 0.788-0.799v-16.773c0-0.882-0.706-1.597-1.577-1.597zM20.174 22.957c-0.768 0-1.391-0.623-1.391-1.391s0.623-1.391 1.391-1.391c0.768 0 1.391 0.623 1.391 1.391s-0.623 1.391-1.391 1.391zM25.739 18.783h-6.957v-8.348h6.957v8.348zM31.583 18.783h-4.452v-8.348h4.452v8.348zM31.583 8.76h-12.8v-1.804h12.8v1.804z"></path>
                </symbol>
                <symbol id="stopmetroIcon" viewBox="0 0 32 32">
                    <path fill="#000" d="M4.87 0h22.261c2.689 0 4.87 2.18 4.87 4.87v22.261c0 2.689-2.18 4.87-4.87 4.87h-22.261c-2.689 0-4.87-2.18-4.87-4.87v-22.261c0-2.689 2.18-4.87 4.87-4.87z"></path>
                    <path fill="#fff" d="M4.87 2.087h22.261c1.537 0 2.783 1.246 2.783 2.783v22.261c0 1.537-1.246 2.783-2.783 2.783h-22.261c-1.537 0-2.783-1.246-2.783-2.783v-22.261c0-1.537 1.246-2.783 2.783-2.783z"></path>
                    <path fill="#000" d="M21.912 22.045c0 0.675-0.545 1.221-1.217 1.221s-1.217-0.547-1.217-1.221c0-0.675 0.545-1.221 1.217-1.221s1.217 0.547 1.217 1.221z"></path>
                    <path fill="#000" d="M12.522 22.045c0 0.675-0.545 1.222-1.217 1.222s-1.217-0.547-1.217-1.222c0-0.675 0.545-1.222 1.217-1.222s1.217 0.547 1.217 1.222z"></path>
                    <path fill="#000" d="M10.435 12.522h11.13v6.957h-11.13v-6.957z"></path>
                    <path fill="#000" d="M16 4.222c-6.53 0-11.826 5.469-11.826 12.217 0 5.192 3.141 9.616 7.562 11.385h8.529c4.421-1.769 7.561-6.193 7.561-11.385 0-6.748-5.293-12.217-11.826-12.217zM23.673 24.086c0 0.443-0.343 0.801-0.766 0.801h-4.586c0.843 0 1.526 0.715 1.526 1.596h-7.652c0-0.882 0.683-1.596 1.526-1.596h-4.586c-0.423 0-0.766-0.358-0.766-0.801v-15.214c0-0.023 0.017-0.045 0.037-0.067 0.37-1.272 3.636-2.267 7.615-2.267s7.246 0.996 7.615 2.267c0.020 0.022 0.037 0.044 0.037 0.067v15.214z"></path>
                    <path fill="#000" d="M10.435 9.043h11.13v2.087h-11.13v-2.087z"></path>
                </symbol>
                <symbol id="stoptrainIcon" viewBox="0 0 32 32">
                    <path fill="#000" d="M4.87 0h22.261c2.689 0 4.87 2.18 4.87 4.87v22.261c0 2.689-2.18 4.87-4.87 4.87h-22.261c-2.689 0-4.87-2.18-4.87-4.87v-22.261c0-2.689 2.18-4.87 4.87-4.87z"></path>
                    <path fill="#fff" d="M4.87 2.087h22.261c1.537 0 2.783 1.246 2.783 2.783v22.261c0 1.537-1.246 2.783-2.783 2.783h-22.261c-1.537 0-2.783-1.246-2.783-2.783v-22.261c0-1.537 1.246-2.783 2.783-2.783z"></path>
                    <path fill="#000" d="M19.172 25.739l0.837 1.391h1.674l-0.836-1.391z"></path>
                    <path fill="#000" d="M10.687 27.13h1.675l0.836-1.391h-1.673z"></path>
                    <path fill="#000" d="M23.952 6.767h0.002c-0.002-0.001-0.005-0.004-0.007-0.006-0.129-0.135-0.282-0.244-0.454-0.321-1.132-0.666-3.632-1.548-4.713-1.548h-0.025c-0.074-0.011-0.148-0.022-0.225-0.022h-4.364c-0.077 0-0.151 0.011-0.225 0.022h-0.025c-1.082 0-3.583 0.883-4.714 1.549-0.172 0.078-0.325 0.186-0.453 0.321-0.002 0.001-0.005 0.004-0.007 0.005h0.002c-0.244 0.258-0.396 0.601-0.396 0.982v15.856c0 0.795 0.652 1.439 1.455 1.439h13.091c0.803 0 1.455-0.645 1.455-1.439v-15.856c0-0.381-0.152-0.724-0.396-0.981zM16.346 6.171c0.738 0 1.335 0.583 1.335 1.302s-0.597 1.302-1.335 1.302c-0.735 0-1.332-0.584-1.332-1.302s0.596-1.302 1.332-1.302zM11.014 23.091c-0.737 0-1.333-0.584-1.333-1.302s0.596-1.302 1.333-1.302 1.333 0.583 1.333 1.302c0 0.718-0.596 1.302-1.333 1.302zM21.681 23.091c-0.737 0-1.333-0.584-1.333-1.302s0.596-1.302 1.333-1.302 1.333 0.583 1.333 1.302c0 0.718-0.596 1.302-1.333 1.302zM23.015 17.885h-13.333v-7.809h13.333v7.809z"></path>
                </symbol>
                <symbol id="stoptramIcon" viewBox="0 0 32 32">
                    <path fill="#000" d="M4.87 0h22.261c2.689 0 4.87 2.18 4.87 4.87v22.261c0 2.689-2.18 4.87-4.87 4.87h-22.261c-2.689 0-4.87-2.18-4.87-4.87v-22.261c0-2.689 2.18-4.87 4.87-4.87z"></path>
                    <path fill="#fff" d="M4.87 2.087h22.261c1.537 0 2.783 1.246 2.783 2.783v22.261c0 1.537-1.246 2.783-2.783 2.783h-22.261c-1.537 0-2.783-1.246-2.783-2.783v-22.261c0-1.537 1.246-2.783 2.783-2.783z"></path>
                    <path fill="#000" d="M22.072 10.377c0-0.737-0.598-1.334-1.334-1.334h-2.927l1.446-2.504c0.181 0.177 0.294 0.422 0.294 0.695h1.391c0-1.304-1.061-2.365-2.365-2.365h-5.009c-1.304 0-2.365 1.061-2.365 2.365h1.391c0-0.272 0.113-0.518 0.294-0.695l1.445 2.504h-2.928c-0.736 0-1.333 0.597-1.333 1.334l-0.667 13.333c0 0.737 0.597 1.334 1.334 1.334h10.666c0.737 0 1.334-0.597 1.334-1.334l-0.666-13.333zM14.333 6.261h3.478l-1.607 2.783h-0.265l-1.606-2.783zM20.738 10.377l0.072 1.449h-9.478l0.072-1.449h9.334zM21.226 20.174h-10.31l0.346-6.957h9.617l0.347 6.957zM12.174 23.652c-0.576 0-1.043-0.467-1.043-1.043s0.467-1.043 1.043-1.043c0.576 0 1.043 0.467 1.043 1.043s-0.467 1.043-1.043 1.043zM19.826 23.652c-0.576 0-1.043-0.467-1.043-1.043s0.467-1.043 1.043-1.043c0.576 0 1.043 0.467 1.043 1.043s-0.467 1.043-1.043 1.043z"></path>
                    <path fill="#000" d="M19.055 25.821l0.803 1.309h1.607l-0.803-1.309z"></path>
                    <path fill="#000" d="M10.91 27.13h1.607l0.803-1.309h-1.607z"></path>
                </symbol>
                <symbol id="logoJakDojade" viewBox="0 0 598.20475 141.69014">
                    <g transform="translate(-50.9 -547)">
                        <g transform="matrix(.273 0 0 .273 45.7 531)">
                            <g id="connectors" transform="translate(-1.63 40.7)">
                                <path d="m436 130c-9.7 14.7-21.9 32.2-37.1 52.6-88.1 118-128 208-143 252 11.8 2.4 22.6 8.3 31 17 23.1-52.1 79.6-167 152-225 19.5-15.9 37.4-28.9 53.2-39.5-25.8-10-46-30.6-55.4-56.4zm-304 233c-1.9-5.9-3.5-11.9-4.8-18-13 10-29.2 16-46 16-1.8 0-3.7-0.1-5.5-0.2l32 40.3c23.3 29.2 49.4 56 78 79.9 2.2-11.6 7.8-22.2 16.1-30.6-28.8-24.5-59.3-56.3-69.4-87.2z" class="st1" fill="#2bb8eb"></path>
                            </g>
                            <g id="bottom_circle" transform="translate(-1.63 40.7)">
                                <path d="m244 445h-0.2c-26 0.1-47 21.2-46.9 47.2s21.2 47 47.2 46.9 47-21.2 46.9-47.2c0-25.9-21.1-46.9-47-46.9zm0 65.4c-10.2 0-18.5-8.2-18.6-18.5 0-10.2 8.2-18.5 18.5-18.5 10.2 0 18.5 8.3 18.5 18.5 0.1 10.2-8.2 18.5-18.4 18.5z" class="st2" fill="#7a2984"></path>
                            </g>
                            <g id="right_circle" transform="translate(-1.63 40.7)">
                                <path d="m526 20c-42.5-0.1-77 34.2-77.1 76.7s34.2 77 76.7 77.1c42 0 77-35 77-77.1 0-42.4-34-76.8-77-76.9zm-0.2 116c-21.5 0.1-39-17.3-39-38.8-0.1-21.5 17.3-39 38.8-39s39 17.4 39 38.9c0 21.4-17.4 38.8-38.8 38.9z" class="st2" fill="#7a2984"></path>
                            </g>
                            <g id="left_circle" transform="translate(-1.63 40.7)">
                                <path d="m81.3 224c-33.5-0.1-60.8 27-60.9 60.5s27 60.8 60.5 60.9c33.6 0 60.9-27.1 60.9-60.7 0-33.4-27-60.6-60.5-60.7zm-0.2 88.5c-15.3 0-27.8-12.4-27.9-27.7 0-15.3 12.3-27.8 27.7-27.9 15.4 0 27.8 12.4 27.9 27.8 0 15.3-12.4 27.7-27.7 27.8z" class="st2" fill="#7a2984"></path>
                            </g>
                        </g>
                        <flowroot style="word-spacing:0px;letter-spacing:0px" xml:space="preserve" font-size="40px" line-height="125%" font-family="Odudo" fill="#000000"><flowregion><rect height="127" width="509" y="558" x="221"></rect></flowregion><flowpara></flowpara></flowroot>
                        <flowroot font-size="40px" xml:space="preserve" style="word-spacing:0px;letter-spacing:0px" line-height="125%" font-family="sans-serif" fill="#000000"><flowregion><rect y="544" width="531" x="207" height="137"></rect></flowregion><flowpara></flowpara></flowroot>
                        <g transform="translate(18.9 20.3)">
                            <path fill="#7a2984" d="m241 587c0 3.15-2.43 5.58-5.49 5.58s-5.58-2.34-5.58-5.4 2.43-5.58 5.58-5.58c3.06 0 5.49 2.52 5.49 5.4zm-0.99 52.1c0 9.45-4.5 16.8-13.6 21.1l-4.68-7.65c5.58-3.06 9.27-7.47 9.27-13.4v-42.7h9v42.7z"></path>
                            <path fill="#7a2984" d="m296 597h-7.74v5.67c-3.96-3.96-9.45-6.39-15.4-6.39-12.9 0-23.3 10.4-23.3 23.1 0 12.9 10.4 23.3 23.3 23.3 6.03 0 11.5-2.52 15.5-6.39v5.67h7.65v-45zm-23 36.6c-7.83 0-14.1-6.3-14.1-14.2 0-7.74 6.3-14.1 14.1-14.1 7.83 0 14.1 6.39 14.1 14.1 0 7.92-6.3 14.2-14.1 14.2z"></path>
                            <path fill="#7a2984" d="m342 642-18.7-25.8 16.8-19.2h-10.7l-14.5 16.2v-34.2h-9.09v63h9.09v-16.3l2.52-2.97 13.8 19.3h10.8z"></path>
                            <path fill="#2bb8eb" d="m367 596c-12.9 0-23.2 10.4-23.2 23.2s10.3 23.2 23.2 23.2c6.03 0 11.5-2.52 15.5-6.39v5.67h7.65v-63h-9v22.7c-3.69-3.33-8.73-5.4-14.1-5.4zm0.09 37.3c-7.74 0-14.1-6.3-14.1-14 0-7.83 6.39-14.1 14.1-14.1 7.74 0 14.1 6.3 14.1 14.1 0 7.74-6.39 14-14.1 14z"></path>
                            <path fill="#2bb8eb" d="m422 596c-12.8 0-23.2 10.4-23.2 23.2s10.4 23.2 23.2 23.2 23.2-10.4 23.2-23.2-10.4-23.2-23.2-23.2zm0 9.09c7.83 0 14.1 6.3 14.1 14.1 0 7.83-6.3 14.1-14.1 14.1-7.83 0-14.1-6.3-14.1-14.1 0-7.83 6.3-14.1 14.1-14.1z"></path>
                            <path fill="#2bb8eb" d="m466 587c0 3.15-2.43 5.58-5.49 5.58s-5.58-2.34-5.58-5.4 2.43-5.58 5.58-5.58c3.06 0 5.49 2.52 5.49 5.4zm-0.99 52.1c0 9.45-4.5 16.8-13.6 21.1l-4.68-7.65c5.58-3.06 9.27-7.47 9.27-13.4v-42.7h9v42.7z"></path>
                            <path fill="#2bb8eb" d="m521 597h-7.74v5.67c-3.96-3.96-9.45-6.39-15.4-6.39-12.9 0-23.3 10.4-23.3 23.1 0 12.9 10.4 23.3 23.3 23.3 6.03 0 11.5-2.52 15.5-6.39v5.67h7.65v-45zm-23 36.6c-7.83 0-14.1-6.3-14.1-14.2 0-7.74 6.3-14.1 14.1-14.1 7.83 0 14.1 6.39 14.1 14.1 0 7.92-6.3 14.2-14.1 14.2z"></path>
                            <path fill="#2bb8eb" d="m553 596c-12.9 0-23.2 10.4-23.2 23.2s10.4 23.2 23.2 23.2c6.03 0 11.5-2.52 15.5-6.39v5.67h7.65v-63h-9v22.7c-3.69-3.33-8.73-5.4-14.1-5.4zm0.09 37.3c-7.74 0-14.1-6.3-14.1-14 0-7.83 6.39-14.1 14.1-14.1 7.74 0 14.1 6.3 14.1 14.1 0 7.74-6.39 14-14.1 14z"></path>
                            <path fill="#2bb8eb" d="m630 622c0-15.8-9.81-26.1-22.9-26.1-12.7 0-22.8 9.72-22.8 22.6 0 12.7 9.9 23.8 23.6 23.8 6.12 0 13.1-2.34 19-8.1l-5.4-6.57c-3.06 2.97-7.92 5.94-13.5 5.94-6.57 0-12.5-4.32-14.3-11.6h36.3zm-36.2-7.2c1.08-6.75 6.84-11.1 13.2-11.1 6.75 0 12.2 4.95 13.2 11.1h-26.5z"></path>
                        </g>
                    </g>
                    <style type="text/css" data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">.st0 {
                        fill: #FFFFFF;
                    }

                    .st1 {
                        fill: #2BB8EB;
                    }

                    .st2 {
                        fill: #7A2984;
                    }</style>
                    <style type="text/css" data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">.st0 {
                        fill: #FFFFFF;
                    }

                    .st1 {
                        fill: #2BB8EB;
                    }

                    .st2 {
                        fill: #7A2984;
                    }</style>
                </symbol>
                <symbol id="reverseIcon" width="30" height="30">
                    <path d="M11.504500456154345,9.775510437786583 l6.085,-6 L18.495500456154346,4.669510437786588 L13.317500456154344,9.775510437786583 L18.495500456154346,14.881510437786574 L17.589500456154347,15.775510437786583 z" id="svg_1" transform="rotate(90 15.000000953674316,9.775512695312502) " fill="#ffffff" fill-opacity="1" stroke="#ffffff" stroke-opacity="1"></path>
                    <path d="M11.504499912261963,20.306122072041035 l6.085,-6 L18.495499912261963,15.200122072041037 L13.317499912261962,20.306122072041035 L18.495499912261963,25.41212207204103 L17.589499912261964,26.306122072041042 z" id="svg_2" transform="rotate(-90 15.000000000000002,20.306114196777344) " fill="#ffffff" fill-opacity="1" stroke="#ffffff" stroke-opacity="1"></path>
                </symbol>
            </defs>
        </svg>
    <section>
        <div class="popup">
            <span class="loc">Warszawa</span>
            <svg class="popupClose"><use xlink:href="#menuCloseIconPopup"></use></svg>
            
            <form class="searchCity" action="#" method="GET">
                <input type="text" placeholder="Wyszukaj miasto...">
                <input type="submit" value="OK">
            </form>
            
            <div class="listWrapper">
            <ul class="predefinedCities">
                
                <li><span class="noRegion" data-city-codename="bialystok" data-city-symbol="BIALYSTOK" data-city-x-coord="23.1518" data-city-y-coord="53.13318" data-city-name="Białystok">Białystok
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="bydgoszcz" data-city-symbol="BYDGOSZCZ" data-city-x-coord="18.001604" data-city-y-coord="53.122807" data-city-name="Bydgoszcz">Bydgoszcz
                    
                    </span></li>
                
                <li><span data-city-codename="bytom" data-city-symbol="BYTOM" data-city-x-coord="18.91494" data-city-y-coord="50.348878" data-city-name="Bytom">Bytom
                    
                                             <span class="province">
                                                GOP (ZTM w Katowicach)
                                             </span>
                                        
                    </span></li>
                
                <li><span data-city-codename="chorzow" data-city-symbol="CHORZOW" data-city-x-coord="18.953976" data-city-y-coord="50.297319" data-city-name="Chorzów">Chorzów
                    
                                             <span class="province">
                                                GOP (ZTM w Katowicach)
                                             </span>
                                        
                    </span></li>
                
                <li><span data-city-codename="gdansk" data-city-symbol="GDANSK" data-city-x-coord="18.64438" data-city-y-coord="54.351675" data-city-name="Gdańsk">Gdańsk
                    
                                             <span class="province">
                                                Trójmiasto (MZKZG)
                                             </span>
                                        
                    </span></li>
                
                <li><span data-city-codename="gdynia" data-city-symbol="GDYNIA" data-city-x-coord="18.52995" data-city-y-coord="54.518893" data-city-name="Gdynia">Gdynia
                    
                                             <span class="province">
                                                Trójmiasto (MZKZG)
                                             </span>
                                        
                    </span></li>
                
                <li><span data-city-codename="gliwice" data-city-symbol="GLIWICE" data-city-x-coord="18.669871" data-city-y-coord="50.29442" data-city-name="Gliwice">Gliwice
                    
                                             <span class="province">
                                                GOP (ZTM w Katowicach)
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="gniezno" data-city-symbol="GNIEZNO" data-city-x-coord="17.598197" data-city-y-coord="52.532778" data-city-name="Gniezno">Gniezno
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="gorzow" data-city-symbol="GORZOW" data-city-x-coord="15.237121" data-city-y-coord="52.732244" data-city-name="Gorzów Wlkp.">Gorzów Wlkp.
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="grudziadz" data-city-symbol="GRUDZIADZ" data-city-x-coord="18.752102" data-city-y-coord="53.483097" data-city-name="Grudziądz">Grudziądz
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="inowroclaw" data-city-symbol="INOWROCLAW" data-city-x-coord="18.255923" data-city-y-coord="52.799432" data-city-name="Inowrocław">Inowrocław
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="jelenia_gora" data-city-symbol="JELENIA_GORA" data-city-x-coord="15.759571" data-city-y-coord="50.902447" data-city-name="Jelenia Góra">Jelenia Góra
                    
                    </span></li>
                
                <li><span data-city-codename="katowice" data-city-symbol="KATOWICE" data-city-x-coord="19.023424" data-city-y-coord="50.26453" data-city-name="Katowice">Katowice
                    
                                             <span class="province">
                                                GOP (ZTM w Katowicach)
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="kielce" data-city-symbol="KIELCE" data-city-x-coord="20.6293" data-city-y-coord="50.8688" data-city-name="Kielce">Kielce
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="krakow" data-city-symbol="KRAKOW" data-city-x-coord="19.944447" data-city-y-coord="50.064158" data-city-name="Kraków">Kraków
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="leszno" data-city-symbol="LESZNO" data-city-x-coord="16.574327" data-city-y-coord="51.843224" data-city-name="Leszno">Leszno
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="lublin" data-city-symbol="LUBLIN" data-city-x-coord="22.567202" data-city-y-coord="51.24625" data-city-name="Lublin">Lublin
                    
                    </span></li>
                
                <li><span data-city-codename="lomianki" data-city-symbol="LOMIANKI" data-city-x-coord="20.886127" data-city-y-coord="52.334027" data-city-name="Łomianki">Łomianki
                    
                                             <span class="province">
                                                Warszawa
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="lodz" data-city-symbol="LODZ" data-city-x-coord="19.454699" data-city-y-coord="51.758524" data-city-name="Łódź">Łódź
                    
                    </span></li>
                
                <li><span data-city-codename="myslowice" data-city-symbol="MYSLOWICE" data-city-x-coord="19.164787" data-city-y-coord="50.206668" data-city-name="Mysłowice">Mysłowice
                    
                                             <span class="province">
                                                GOP (ZTM w Katowicach)
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="nowy_sacz" data-city-symbol="NOWY_SACZ" data-city-x-coord="20.69448" data-city-y-coord="49.62329" data-city-name="Nowy Sącz">Nowy Sącz
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="olsztyn" data-city-symbol="OLSZTYN" data-city-x-coord="20.480103" data-city-y-coord="53.77848" data-city-name="Olsztyn">Olsztyn
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="opole" data-city-symbol="OPOLE" data-city-x-coord="17.9238" data-city-y-coord="50.6659" data-city-name="Opole">Opole
                    
                    </span></li>
                
                <li><span data-city-codename="pabianice" data-city-symbol="PABIANICE" data-city-x-coord="19.354809" data-city-y-coord="51.656193" data-city-name="Pabianice">Pabianice
                    
                                             <span class="province">
                                                Łódź
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="pila" data-city-symbol="PILA" data-city-x-coord="16.736978" data-city-y-coord="53.151124" data-city-name="Piła">Piła
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="poznan" data-city-symbol="POZNAN" data-city-x-coord="16.93285" data-city-y-coord="52.40766" data-city-name="Poznań">Poznań
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="radom" data-city-symbol="RADOM" data-city-x-coord="21.146763" data-city-y-coord="51.402838" data-city-name="Radom">Radom
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="rzeszow" data-city-symbol="RZESZOW" data-city-x-coord="21.999394" data-city-y-coord="50.040975" data-city-name="Rzeszów">Rzeszów
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="slupsk" data-city-symbol="SLUPSK" data-city-x-coord="17.033261" data-city-y-coord="54.468332" data-city-name="Słupsk">Słupsk
                    
                    </span></li>
                
                <li><span data-city-codename="sopot" data-city-symbol="SOPOT" data-city-x-coord="18.559936" data-city-y-coord="54.441369" data-city-name="Sopot">Sopot
                    
                                             <span class="province">
                                                Trójmiasto (MZKZG)
                                             </span>
                                        
                    </span></li>
                
                <li><span data-city-codename="sosnowiec" data-city-symbol="SOSNOWIEC" data-city-x-coord="19.103152" data-city-y-coord="50.285455" data-city-name="Sosnowiec">Sosnowiec
                    
                                             <span class="province">
                                                GOP (ZTM w Katowicach)
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="stargard" data-city-symbol="STARGARD" data-city-x-coord="15.05016" data-city-y-coord="53.336338" data-city-name="Stargard">Stargard
                    
                    </span></li>
                
                <li><span data-city-codename="swarzedz" data-city-symbol="SWARZEDZ" data-city-x-coord="17.07868" data-city-y-coord="52.41111" data-city-name="Swarzędz">Swarzędz
                    
                                             <span class="province">
                                                Poznań
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="szczecin" data-city-symbol="SZCZECIN" data-city-x-coord="14.5484" data-city-y-coord="53.42716" data-city-name="Szczecin">Szczecin
                    
                    </span></li>
                
                <li><span data-city-codename="tarnowskie_gory" data-city-symbol="TARNOWSKIE_GORY" data-city-x-coord="18.846052" data-city-y-coord="50.436437" data-city-name="Tarnowskie Góry">Tarnowskie Góry
                    
                                             <span class="province">
                                                GOP (ZTM w Katowicach)
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="tarnow" data-city-symbol="TARNOW" data-city-x-coord="20.98832" data-city-y-coord="50.01256" data-city-name="Tarnów">Tarnów
                    
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="torun" data-city-symbol="TORUN" data-city-x-coord="18.600235" data-city-y-coord="53.013395" data-city-name="Toruń">Toruń
                    
                    </span></li>
                
                <li><span data-city-codename="tychy" data-city-symbol="TYCHY" data-city-x-coord="19.001692" data-city-y-coord="50.118495" data-city-name="Tychy">Tychy
                    
                                             <span class="province">
                                                GOP (ZTM w Katowicach)
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="warszawa" data-city-symbol="WARSZAWA" data-city-x-coord="21.009003" data-city-y-coord="52.228649" data-city-name="Warszawa">Warszawa
                    
                    </span></li>
                
                <li><span data-city-codename="wejherowo" data-city-symbol="WEJHEROWO" data-city-x-coord="18.232756" data-city-y-coord="54.60048" data-city-name="Wejherowo">Wejherowo
                    
                                             <span class="province">
                                                Trójmiasto (MZKZG)
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="wroclaw" data-city-symbol="WROCLAW" data-city-x-coord="17.03671" data-city-y-coord="51.10988" data-city-name="Wrocław">Wrocław
                    
                    </span></li>
                
                <li><span data-city-codename="zabrze" data-city-symbol="ZABRZE" data-city-x-coord="18.785319" data-city-y-coord="50.323907" data-city-name="Zabrze">Zabrze
                    
                                             <span class="province">
                                                GOP (ZTM w Katowicach)
                                             </span>
                                        
                    </span></li>
                
                <li><span data-city-codename="zgierz" data-city-symbol="ZGIERZ" data-city-x-coord="19.405069" data-city-y-coord="51.854073" data-city-name="Zgierz">Zgierz
                    
                                             <span class="province">
                                                Łódź
                                             </span>
                                        
                    </span></li>
                
                <li><span class="noRegion" data-city-codename="zielona_gora" data-city-symbol="ZIELONA_GORA" data-city-x-coord="15.505253" data-city-y-coord="51.935732" data-city-name="Zielona Góra">Zielona Góra
                    
                    </span></li>
                
            </ul>
            </div>
            
            <div class="popupFooter useGeolocation">
                <span class="detectLocation">
                    <svg>
                        <use xlink:href="#geoIcon"></use>
                    </svg>
                    Automatycznie (na podstawie lokalizacji)
                </span>
                <span class="errorMessage">
                
                </span>
            </div>
        </div>
        
        <span class="locationName">
            <svg>
                <use xlink:href="#geoIcon"></use>
            </svg>
            <span>Warszawa</span>
        </span>
        
        <form class="scheduleForm">
            <div class="tripPoint tripStart">
                <label>Z</label>
                <input class="tripLocation" placeholder="ADRES POCZĄTKOWY" type="text">
                <ul class="suggestList"></ul>
            </div>
            <div class="tripPoint tripEnd">
                <label>DO</label>
                <input class="tripLocation" placeholder="ADRES KOŃCOWY" type="text">
                <ul class="suggestList"></ul>
            </div>
            <div class="tripTime">
                <div class="dp-picker dp-picker-date"><span class="dp-button dp-button-down"></span><span class="dp-label">14.01</span><span class="dp-button dp-button-up"></span></div><input type="text" name="tripDate" style="display: none;">
                <div class="dp-picker dp-picker-time"><span class="dp-button dp-button-down"></span><span class="dp-label"><input type="text" class="dp-time-hours" maxlength="2" value="21"><span class="separator">:</span><input type="text" class="dp-time-minutes" maxlength="2" value="31"></span><span class="dp-button dp-button-up"></span></div><input type="text" name="tripTime" style="display: none;">
            </div>
            
            <a class="dn-button searchButton" href="#">
                Szukaj
            </a>            
        </form>
    </section>
</div>
        
            <div class="dn-tab dn-tab-lotto" data-tab="lotto">
    <section>        
        <span class="lotteryDate">Wyniki losowania z dnia 12-01-2019</span>

        <ul class="lotteryResults">
            
                <li>
                    <a href="http://lotto.onet.pl/" data-lotto="result">
                        2
                    </a>
                </li>
            
                <li>
                    <a href="http://lotto.onet.pl/" data-lotto="result">
                        5
                    </a>
                </li>
            
                <li>
                    <a href="http://lotto.onet.pl/" data-lotto="result">
                        10
                    </a>
                </li>
            
                <li>
                    <a href="http://lotto.onet.pl/" data-lotto="result">
                        14
                    </a>
                </li>
            
                <li>
                    <a href="http://lotto.onet.pl/" data-lotto="result">
                        15
                    </a>
                </li>
            
                <li>
                    <a href="http://lotto.onet.pl/" data-lotto="result">
                        49
                    </a>
                </li>
            
        </ul>
        
        <a class="moreResults" href="http://lotto.onet.pl/" data-lotto="link">
            Wyniki Lotto
        </a>
        
    </section>
</div>
        
            <div class="dn-tab" data-tab="horoscope">
    <section>
        <svg class="zodiacIconPack" version="1.1" xmlns="http://www.w3.org/2000/svg">
            <defs>
                <symbol id="iconAries" viewBox="0 0 36 32">
                    <path d="M19.69 32h-2.883v-22.155c0-0.004 0-0.008 0-0.012 0-3.845-3.117-6.962-6.962-6.962s-6.962 3.117-6.962 6.962c0 3.422 2.469 6.268 5.723 6.852l-0.448 2.889c-4.672-0.826-8.175-4.855-8.175-9.702 0-5.437 4.408-9.845 9.845-9.845 3.552 0 6.664 1.881 8.396 4.701 1.78-2.82 4.893-4.701 8.445-4.701 5.437 0 9.845 4.408 9.845 9.845 0 4.847-3.503 8.876-8.116 9.694l-0.549-2.874c3.296-0.591 5.766-3.436 5.766-6.859 0-3.845-3.117-6.962-6.962-6.962s-6.962 3.117-6.962 6.962c0 0.004 0 0.008 0 0.012v22.154z"></path>
                </symbol>
                <symbol id="iconGemini" viewBox="0 0 28 32">
                    <path d="M7.997 6.273h2.757v19.15h-2.757v-19.15z"></path>
                    <path d="M17.73 6.273h2.757v19.15h-2.757v-19.15z"></path>
                    <path d="M14.242 7.914c-0.018 0-0.039 0-0.060 0-5.559 0-10.582-2.291-14.178-5.98l1.967-1.934c3.103 3.183 7.433 5.156 12.224 5.156 0.016 0 0.032-0 0.049-0 0.013 0 0.031 0 0.049 0 4.789 0 9.117-1.974 12.215-5.153l1.975 1.927c-3.598 3.693-8.62 5.984-14.176 5.984-0.023 0-0.046-0-0.069-0z"></path>
                    <path d="M26.513 32c-3.119-3.186-7.464-5.162-12.271-5.162s-9.152 1.976-12.268 5.159l-1.975-1.927c3.62-3.699 8.663-5.992 14.242-5.992s10.622 2.293 14.239 5.988z"></path>
                </symbol>
                <symbol id="iconTaurus" viewBox="0 0 26 32">
                    <path d="M12.76 32c-6.051 0-10.957-4.905-10.957-10.957s4.905-10.957 10.957-10.957c6.051 0 10.957 4.905 10.957 10.957-0.007 6.048-4.908 10.95-10.956 10.957zM12.76 12.621c-4.659 0-8.435 3.776-8.435 8.435s3.776 8.435 8.435 8.435c4.659 0 8.435-3.776 8.435-8.435 0-0.004 0-0.008 0-0.013 0-4.659-3.776-8.435-8.435-8.435 0 0 0 0 0 0z"></path>
                    <path d="M12.76 12.608c-6.983-0.027-12.646-5.638-12.76-12.598l2.522-0.011c0.106 5.581 4.645 10.066 10.236 10.087 5.595-0.020 10.134-4.506 10.24-10.077l2.522-0.010c-0.113 6.97-5.777 12.581-12.757 12.608z"></path>
                </symbol>
                <symbol id="iconCapricorn" viewBox="0 0 31 32">
                    <path d="M7.858 26.742h-2.842v-18.885c0-2.77-2.246-5.016-5.016-5.016v-2.842c4.337 0.008 7.85 3.521 7.858 7.857v18.885z"></path>
                    <path d="M20.732 25.25h-2.842v-17.393c0-2.77-2.246-5.016-5.016-5.016s-5.016 2.246-5.016 5.016v12.661h-2.842v-12.661c0-4.34 3.518-7.858 7.858-7.858s7.858 3.518 7.858 7.858v17.393z"></path>
                    <path d="M24.583 32c-0.004 0-0.009 0-0.014 0-3.696 0-6.693-2.996-6.693-6.693s2.996-6.693 6.693-6.693c3.696 0 6.693 2.996 6.693 6.693-0.008 3.688-2.992 6.677-6.677 6.693zM24.583 21.456c-0.004-0-0.009-0-0.014-0-2.127 0-3.851 1.724-3.851 3.851s1.724 3.851 3.851 3.851c2.127 0 3.851-1.724 3.851-3.851 0-0 0-0 0-0 0-2.125-1.714-3.849-3.835-3.865z"></path>
                    <path d="M14.039 32v-2.842c2.123-0.008 3.843-1.727 3.851-3.85l2.842-0.001c-0.008 3.693-3 6.685-6.692 6.693z"></path>
                </symbol>
                <symbol id="iconLeo" viewBox="0 0 30 32">
                    <path d="M6.384 30.035c-3.526 0-6.384-2.858-6.384-6.384s2.858-6.384 6.384-6.384v2.711c-2.029 0-3.673 1.644-3.673 3.673s1.644 3.673 3.673 3.673c2.029 0 3.673-1.644 3.673-3.673h2.711c-0.008 3.523-2.861 6.376-6.383 6.384z"></path>
                    <path d="M24.817 32c-2.994 0-5.421-2.427-5.421-5.421 0.228-3.583 0.793-6.925 1.668-10.139 0.474-1.747 0.95-4.307 1.249-6.921 0.040-0.429 0.050-0.624 0.050-0.82 0-1.609-0.612-3.074-1.615-4.177-1.058-1.115-2.556-1.812-4.218-1.812-0.026 0-0.052 0-0.078 0.001-0.006-0-0.018-0-0.030-0-1.661 0-3.16 0.697-4.219 1.814-1.039 1.109-1.675 2.601-1.675 4.242 0 0.173 0.007 0.344 0.021 0.513 0.244 2.449 0.626 4.669 1.152 6.833 0.535 1.989 0.943 4.691 1.067 7.468l-2.708 0.085c-0.131-2.662-0.519-5.167-1.141-7.578-0.422-1.669-0.819-4.005-1.052-6.39-0.038-0.441-0.050-0.71-0.050-0.982 0-2.318 0.888-4.429 2.344-6.010 1.55-1.664 3.762-2.705 6.217-2.705 0.028 0 0.056 0 0.083 0 0.019-0 0.047-0 0.075-0 2.455 0 4.667 1.041 6.218 2.706 1.461 1.584 2.354 3.701 2.354 6.027 0 0.266-0.012 0.529-0.035 0.789-0.335 2.99-0.84 5.688-1.524 8.314-0.653 2.276-1.193 5.416-1.42 8.643-0.009 1.652 1.205 2.866 2.702 2.866s2.711-1.214 2.711-2.711h2.711c-0.031 2.971-2.446 5.367-5.421 5.367-0.005 0-0.010 0-0.015-0z"></path>
                    <path d="M12.767 23.651h-2.711c-0.008-2.025-1.648-3.665-3.672-3.673l-0.001-2.711c3.523 0.008 6.376 2.861 6.384 6.383z"></path>
                </symbol>
                <symbol id="iconVirgo" viewBox="0 0 36 32">
                    <path d="M20.007 30.551l-2.004-2.004 11.638-11.638c1.214-1.221 1.967-2.902 1.975-4.759 0-1.508-1.221-2.73-2.728-2.73s-2.728 1.221-2.728 2.728v4.149h-2.842v-4.178c0-3.076 2.494-5.57 5.57-5.57s5.57 2.494 5.57 5.57c-0.002 2.653-1.089 5.052-2.841 6.777z"></path>
                    <path d="M16.27 26.742h-2.842v-20.377c0-1.962-1.59-3.552-3.552-3.552s-3.552 1.59-3.552 3.552v20.377h-2.842v-20.377c0-3.531 2.863-6.394 6.394-6.394s6.394 2.863 6.394 6.394v20.377z"></path>
                    <path d="M29.698 32c-0 0-0 0-0 0-3.524 0-6.38-2.856-6.38-6.38 0-0.015 0-0.030 0-0.045v-19.209c0-1.962-1.59-3.552-3.552-3.552s-3.552 1.59-3.552 3.552h-2.842c0-3.531 2.863-6.394 6.394-6.394s6.394 2.863 6.394 6.394v19.211c0 1.962 1.59 3.552 3.552 3.552s3.552-1.59 3.552-3.552h2.842c0 0.013 0 0.028 0 0.043 0 3.524-2.856 6.38-6.38 6.38-0.010 0-0.020-0-0.030-0z"></path>
                    <path d="M6.366 6.366h-2.842c-0.008-1.943-1.581-3.516-3.523-3.524l-0.001-2.842c3.513 0.008 6.358 2.853 6.366 6.365z"></path>
                </symbol>
                <symbol id="iconCancer" viewBox="0 0 37 32">
                    <path d="M6.97 22.948h-0.619c-3.585-0.298-6.381-3.281-6.381-6.918 0-0.226 0.011-0.449 0.032-0.669 0.318-3.538 3.293-6.312 6.915-6.312 3.835 0 6.944 3.109 6.944 6.944 0 0.212-0.010 0.423-0.028 0.63l0.002-0.027c-0.311 3.554-3.26 6.325-6.862 6.352zM6.94 12.070c-0.001 0-0.002 0-0.003 0-2.166 0-3.923 1.756-3.923 3.923 0 2.045 1.566 3.725 3.564 3.906 0.124 0.012 0.25 0.018 0.377 0.018 2.045 0 3.724-1.565 3.906-3.562 0.011-0.119 0.016-0.24 0.016-0.363 0-2.053-1.571-3.739-3.576-3.921l-0.362-0.001z"></path>
                    <path d="M3.017 16.008h-3.017c0-8.826 8.283-16.008 18.482-16.008 0.056-0.001 0.123-0.001 0.19-0.001 4.463 0 8.589 1.443 11.937 3.888l-1.943 2.389c-2.794-2.037-6.296-3.259-10.084-3.259-0.035 0-0.070 0-0.105 0-8.519-0-15.459 5.824-15.459 12.99z"></path>
                    <path d="M30.009 22.948h-0.604c-3.564-0.329-6.334-3.305-6.334-6.927 0-0.217 0.010-0.432 0.029-0.643l-0.002 0.027c0.32-3.564 3.293-6.337 6.914-6.337 3.833 0 6.94 3.107 6.94 6.94s-3.107 6.94-6.94 6.94c-0.001 0-0.003 0-0.004 0zM26.101 15.661c-0.008 0.095-0.013 0.205-0.013 0.317 0 2.166 1.756 3.923 3.923 3.923s3.923-1.756 3.923-3.923c0-2.045-1.565-3.725-3.563-3.906-0.115-0.010-0.231-0.015-0.348-0.015-2.052 0-3.738 1.57-3.921 3.574l-0.001 0.015z"></path>
                    <path d="M18.482 32c-0.056 0.001-0.123 0.001-0.19 0.001-4.463 0-8.589-1.443-11.937-3.888l1.853-2.389c2.792 2.028 6.288 3.244 10.068 3.244 0.056 0 0.113-0 0.169-0.001 8.516 0 15.456-5.824 15.456-12.975h3.017c0.045 8.826-8.253 16.008-18.437 16.008z"></path>
                </symbol>
                <symbol id="iconPisces" viewBox="0 0 23 32">
                    <path d="M0.876 14.174h21.452v2.736h-21.452v-2.736z"></path>
                    <path d="M1.751 32l-1.751-2.107c3.991-3.333 6.512-8.312 6.512-13.879 0-0.003 0-0.005 0-0.008 0-0.004 0-0.009 0-0.014 0-5.569-2.521-10.549-6.484-13.862l1.723-2.13c4.595 3.839 7.497 9.571 7.497 15.981 0 0.009 0 0.018-0 0.027 0 0.002 0 0.006 0 0.011 0 6.41-2.902 12.142-7.464 15.954z"></path>
                    <path d="M21.452 32c-4.595-3.846-7.497-9.584-7.497-16s2.902-12.154 7.464-15.973l1.838 2.080c-3.993 3.341-6.514 8.326-6.514 13.9s2.521 10.559 6.486 13.877z"></path>
                </symbol>
                <symbol id="iconScorpio" viewBox="0 0 33 32">
                    <path d="M14.103 23.181h-2.463v-17.663c0-1.701-1.379-3.079-3.079-3.079s-3.079 1.379-3.079 3.079v17.663h-2.463v-17.663c0-3.061 2.482-5.543 5.543-5.543s5.543 2.482 5.543 5.543v17.663z"></path>
                    <path d="M28.81 27.738h-3.067c-0 0-0 0-0 0-3.054 0-5.53-2.476-5.53-5.53 0-0.013 0-0.026 0-0.039v-16.651c0-1.701-1.379-3.079-3.079-3.079s-3.079 1.379-3.079 3.079h-2.463c0-3.061 2.482-5.543 5.543-5.543s5.543 2.482 5.543 5.543v16.653c0.007 1.684 1.37 3.048 3.054 3.055h3.080v2.463z"></path>
                    <path d="M27.036 32l-1.737-1.749 3.744-3.744-3.744-3.757 1.737-1.737 5.493 5.493-5.493 5.493z"></path>
                    <path d="M5.518 5.518h-2.463c-0.007-1.684-1.37-3.048-3.054-3.055l-0.001-2.463c3.045 0.007 5.511 2.473 5.518 5.517z"></path>
                </symbol>
                <symbol id="iconSagittarius" viewBox="0 0 32 32">
                    <path d="M32 11.978h-2.904v-9.074h-9.074v-2.904h11.978v11.978z"></path>
                    <path d="M26.033 31.942h-2.904c-0.049-12.739-10.384-23.048-23.128-23.056l-0.001-2.904c14.329 0.057 25.934 11.637 26.033 25.951z"></path>
                    <path d="M2.764 27.181l26.755-26.755 2.053 2.053-26.755 26.755-2.053-2.053z"></path>
                </symbol>
                <symbol id="iconLibra" viewBox="0 0 32 32">
                    <path d="M0 29.080h31.693v2.92h-31.693v-2.92z"></path>
                    <path d="M31.693 22.861h-10.482l2.263-2.423c1.732-1.856 2.796-4.356 2.796-7.104 0-5.757-4.667-10.423-10.423-10.423s-10.423 4.667-10.423 10.423c0 2.748 1.063 5.248 2.801 7.11l2.272 2.446h-10.496v-2.92h4.263c-1.083-1.885-1.722-4.145-1.722-6.553 0-7.361 5.967-13.328 13.328-13.328 7.335 0 13.286 5.925 13.328 13.25 0 0.008 0 0.012 0 0.017 0 2.423-0.65 4.695-1.786 6.649l4.297-0.063v2.92z"></path>
                </symbol>
                <symbol id="iconAquarius" viewBox="0 0 59 32">
                    <path d="M30.707 32h-2.691l-0.584-1.231c-2.078-4.546-6.585-7.647-11.817-7.647s-9.74 3.102-11.784 7.567l-3.83-1.63c2.751-5.998 8.705-10.090 15.614-10.090 5.605 0 10.58 2.692 13.705 6.854 3.188-4.162 8.164-6.854 13.768-6.854 6.909 0 12.863 4.091 15.57 9.983l-3.753 1.817c-2.078-4.546-6.585-7.647-11.817-7.647s-9.74 3.102-11.784 7.567z"></path>
                    <path d="M30.707 13.038h-2.691l-0.584-1.231c-2.078-4.546-6.585-7.647-11.817-7.647s-9.74 3.102-11.784 7.567l-3.83-1.63c2.751-5.998 8.705-10.090 15.614-10.090 5.605 0 10.58 2.692 13.705 6.854 3.189-4.152 8.158-6.836 13.755-6.836 6.902 0 12.851 4.083 15.562 9.966l-3.753 1.817c-2.088-4.521-6.582-7.601-11.797-7.601s-9.709 3.081-11.763 7.521z"></path>
                </symbol>
            </defs>
        </svg>

        <ul class="zodiacSigns">
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/baran,619,0.html" class="zodiacLink" data-horoscope="Baran">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconAries"></use>
                    </svg>
                    <span class="zodiacName">Baran</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/byk,620,0.html" class="zodiacLink" data-horoscope="Byk">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconTaurus"></use>
                    </svg>
                    <span class="zodiacName">Byk</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/bliznieta,621,0.html" class="zodiacLink" data-horoscope="Bliźnięta">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconGemini"></use>
                    </svg>
                    <span class="zodiacName">Bliźnięta</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/rak,622,0.html" class="zodiacLink" data-horoscope="Rak">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconCancer"></use>
                    </svg>
                    <span class="zodiacName">Rak</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/lew,623,0.html" class="zodiacLink" data-horoscope="Lew">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconLeo"></use>
                    </svg>
                    <span class="zodiacName">Lew</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/panna,624,0.html" class="zodiacLink" data-horoscope="Panna">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconVirgo"></use>
                    </svg>
                    <span class="zodiacName">Panna</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/waga,625,0.html" class="zodiacLink" data-horoscope="Waga">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconLibra"></use>
                    </svg>
                    <span class="zodiacName">Waga</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/skorpion,626,0.html" class="zodiacLink" data-horoscope="Skorpion">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconScorpio"></use>
                    </svg>
                    <span class="zodiacName">Skorpion</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/strzelec,627,0.html" class="zodiacLink" data-horoscope="Strzelec">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconSagittarius"></use>
                    </svg>
                    <span class="zodiacName">Strzelec</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/koziorozec,628,0.html" class="zodiacLink" data-horoscope="Koziorożec">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconCapricorn"></use>
                    </svg>
                    <span class="zodiacName">Koziorożec</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/wodnik,629,0.html" class="zodiacLink" data-horoscope="Wodnik">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconAquarius"></use>
                    </svg>
                    <span class="zodiacName">Wodnik</span>
                </a>
            </li>
            
            <li class="zodiacSingle">
                <a href="http://magia.onet.pl/horoskop/horoskop-zodiakalny,3/dzienny/ryby,630,0.html" class="zodiacLink" data-horoscope="Ryby">
                    <svg class="zodiacIcon">
                        <use xlink:href="#iconPisces"></use>
                    </svg>
                    <span class="zodiacName">Ryby</span>
                </a>
            </li>
            
        </ul>
    </section>
</div>
        
            <div class="dn-tab dn-tab-tv" data-tab="tv">
    
    <section id="programtv">
        
        
        <ul class="tvShows">
            
                
                <li>
                    <a href="https://programtv.onet.pl/tv/krolestwo-niebieskie-122163?entry=28872881">
                        <span class="channelName" data-ptv="channel1">
                            POLSAT
                        </span>
                        <span class="showTitle" data-ptv="movie1">
                            Królestwo niebieskie
                        </span>
                        <span class="showStartTime">
                            
                            20:05
                        </span>
                    </a>
                </li>
                
            
                
                <li>
                    <a href="https://programtv.onet.pl/tv/czego-pragna-kobiety-6672?entry=28859593">
                        <span class="channelName" data-ptv="channel2">
                            TVN Fabuła
                        </span>
                        <span class="showTitle" data-ptv="movie2">
                            Czego pragną kobiety
                        </span>
                        <span class="showStartTime">
                            
                            20:00
                        </span>
                    </a>
                </li>
                
            
                
                <li>
                    <a href="https://programtv.onet.pl/tv/milionerzy-277432?entry=28872347">
                        <span class="channelName" data-ptv="channel3">
                            TVN
                        </span>
                        <span class="showTitle" data-ptv="movie3">
                            Milionerzy
                        </span>
                        <span class="showStartTime">
                            
                            20:55
                        </span>
                    </a>
                </li>
                
            
                
                <li>
                    <a href="https://programtv.onet.pl/tv/rozbite-marzenia-1918-1939-339768?entry=28872817">
                        <span class="channelName" data-ptv="channel4">
                            TVP 2
                        </span>
                        <span class="showTitle" data-ptv="movie4">
                            Rozbite marzenia. 1918-1939
                        </span>
                        <span class="showStartTime">
                            
                            21:55
                        </span>
                    </a>
                </li>
                
            
                
                <li>
                    <a href="https://programtv.onet.pl/tv/zabicie-swietego-jelenia-337755?entry=28858846">
                        <span class="channelName" data-ptv="channel5">
                            CANAL+
                        </span>
                        <span class="showTitle" data-ptv="movie5">
                            Zabicie świętego jelenia
                        </span>
                        <span class="showStartTime">
                            
                            22:05
                        </span>
                    </a>
                </li>
                
            
                
                <li>
                    <a href="https://programtv.onet.pl/tv/pol-na-pol-327908?entry=28865892">
                        <span class="channelName" data-ptv="channel6">
                            CANAL+ Family
                        </span>
                        <span class="showTitle" data-ptv="movie6">
                            Pół na pół
                        </span>
                        <span class="showStartTime">
                            
                            22:25
                        </span>
                    </a>
                </li>
                
            
                
                <li>
                    <a href="https://programtv.onet.pl/tv/turysta-43315?entry=28860709">
                        <span class="channelName" data-ptv="channel7">
                            TVP Kultura
                        </span>
                        <span class="showTitle" data-ptv="movie7">
                            Turysta
                        </span>
                        <span class="showStartTime">
                            
                            01:45
                        </span>
                    </a>
                </li>
                
            
                
                <li>
                    <a href="https://programtv.onet.pl/tv/ja-robot-8168?entry=28872884">
                        <span class="channelName" data-ptv="channel8">
                            POLSAT
                        </span>
                        <span class="showTitle" data-ptv="movie8">
                            Ja, robot
                        </span>
                        <span class="showStartTime">
                            
                            02:10
                        </span>
                    </a>
                </li>
                
            
        </ul>

        <a class="dn-button showMoreButton" href="https://programtv.onet.pl/" data-ptv="link">
            Program TV
        </a>
    </section>
    
    
</div>
        
    </div>

</div>
        


                
                    


    <div data-section="ad-flat-branding" id="wrfqsjvzfbwx" class="nvfwzzpbkbfk" data-slot-name="flat-branding" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-branding","onet-ad-flat-branding").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    



    

    <div class="sideBarItem onetUpToDate">
        <article class="newsBox">
            <div class="boxHeader">
                <h1>
                    <span>
                        Serwis informacyjny ONET24
                    </span>
                </h1>
            </div>

            

            
            <div class="slider embedPlayer" data-section="uptodateslider" data-autoplay="true" data-run-module="local/main.renderBoxVideoSlider" data-params-video="&lt;div class=&quot;pulsembed_embed&quot; data-run-module=&quot;pulsembed/pulsembed.init&quot; data-src=&quot;//pulsembed.eu/p2em/rHmEsCM2D/&quot; data-height-hint=&quot;56.25%&quot; data-sandbox=&quot;standard&quot; data-author-name=&quot;%23Onet24&quot; data-embed-id=&quot;rHmEsCM2D&quot; data-provider-name=&quot;OnettvVideo&quot; data-extra-embed-params=&quot;%5Bobject%20Object%5D&quot; data-embed-img=&quot;https://ocdn.eu/pulscms-transforms/1/SChktkpTURBXy9kZjA3OGMwZWEyOTQwNTJjNzc0MWRhYmMwZTg2NDYwMS5qcGeRkwXNArzNAYs&quot;&gt;&lt;a href=&quot;http://onet.tv/i/onet24/onet24-pawel-adamowicz-nie-zyje/nkqwe2&quot; target=&quot;_blank&quot;&gt;Onet24: Paweł Adamowicz nie żyje&lt;/a&gt;&lt;/div&gt;
" data-run-module-isrun="1"><div class="pulsembed_embed mvp-embed-wrapper" data-author-name="%23Onet24" data-embed-id="rHmEsCM2D" data-provider-name="OnettvVideo" data-extra-embed-params="%5Bobject%20Object%5D" data-embed-img="https://ocdn.eu/pulscms-transforms/1/SChktkpTURBXy9kZjA3OGMwZWEyOTQwNTJjNzc0MWRhYmMwZTg2NDYwMS5qcGeRkwXNArzNAYs" data-run-module-isrun="1" data-id="3407956193172552" style="position: relative; display: block; height: 0px; padding: 0px 0px 56.25%; overflow: hidden;"><iframe src="onet_pliki/a.html" sandbox="allow-forms allow-scripts allow-same-origin allow-popups allow-top-navigation-by-user-activation" webkitallowfullscreen="webkitallowfullscreen" mozallowfullscreen="mozallowfullscreen" allowfullscreen="allowfullscreen" allow="autoplay" style="position: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%; border: medium none;" frameborder="0"></iframe></div>
<a class="sgPlayerGls" href="#Onet24"></a></div>
            
        </article>
    </div>

    





                
            </div>
            
            <div style="clear: both"></div>

            
            <div class="container-bottom">
                
                    



    
        <div data-run-module="local/main.renderBoxHpLiveMoveStoreClicks" data-params-domains="sport.onet.pl,przegladsportowy.pl,ekstraklasa.tv" data-run-module-isrun="1"></div>
    

    

        

            <script type="text/javascript">
                nsglib.markHpLiveTop();
            </script>

        

        <!-- mv hplive off -->
    




                
            </div>
            
        </div>

    
        
            
                


    <div data-section="flat-gigaboard1" id="qrgqvmdw" class="lv1c lv1w nvfwzzpbkbfk" data-slot-name="flat-gigaboard1" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-gigaboard1","onet-ad-flat-gigaboard1").setCollapseEmpty(true);
            });
        </script>
        
    </div>



            
        

        <div id="mainPageBody2" class="content whitelistContent lv1c lv1w">
            

            
            <div class="container-content-left mainPageContent">
                
                    


    <div data-section="ad-top2" id="vdhvdqwqv" class="nvfwzzpbkbfk" data-slot-name="top2" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("top2","onet-ad-top2").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    



                
                    


    

        
        
        
        <article data-section="chpolecane-polecamy">
            
            
            <section class="mosaic sectionType3">

                    <div class="boxHeader">

    <h1>
     
        <span>Wiem więcej</span>
    
    </h1>

</div>



<div class="secLinkWrp">

    
        <span><a href="https://businessinsider.com.pl/dni-z-zakazem-handlu-w-2018-roku/1wx2gef">Niedziele handlowe</a></span>
    

    
        <span><a href="https://programtv.onet.pl/">Program TV</a></span>
    

    
        <span><a href="http://quizy.onet.pl/">Quizy</a></span>
    

    
        <span><a href="http://infografiki.onet.pl/">Infografiki</a></span>
    

    
        <span><a href="https://wosp.onet.pl/">WOŚP</a></span>
    

</div>


                <div class="items">
                    
                        
                        
                         
                            

                            <div class="sectionLine sectionLineMax">
                            
                                
                                


























    


<a data-uuid-ui="759743de-cd7a-4cbe-99bc-e05c98521746" data-params-element-type="t_3_2" class="itemBox itemBox_3_2 s1_260 
     
    " data-gtm="polecamy_1" href="https://www.przegladsportowy.pl/pilka-nozna/ligi-zagraniczne/cracovia-uruguay-kult-pasow-w-majowym-sloncu/sfkf3rk">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/qP8ktkqTURBXy83MGI0ZDJlY2NiYzQxMjU1MWZlNDNlMTkzYTMxMmMzMC5qcGVnk5UDABzNAeDM2ZMFzQI8zQEElQfZMi9wdWxzY21zL01EQV8vMjc0YzFkNjQ2NzA4MmMzZTZkZmU5ZDA5ZjRhNmRmNmIucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/qP8ktkqTURBXy83MGI0ZDJlY2NiYzQxMjU1MWZlNDNlMTkzYTMxMmMzMC5qcGVnk5UDABzNAeDM2ZMFzQI8zQEElQfZMi9wdWxzY21zL01EQV8vMjc0YzFkNjQ2NzA4MmMzZTZkZmU5ZDA5ZjRhNmRmNmIucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">W Cracovii dostrzegli wzór wszelkich futbolowych cnót. I założyli Cracovię 2.0. W Urugwaju</span>

            

        </span>


         


        
        

            
                <span class="info">Przegląd Sportowy</span>
            

        

	</span>
</a>



                            
                                
                                


























    


<a data-uuid-ui="af6a89d9-ce1d-4f5f-96a2-e3ba7662b56f" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="polecamy_2" href="https://kultura.onet.pl/wiadomosci/bogdan-de-barbaro-w-rozmowach-o-przyszlosci-mozna-kochac-ludzi-ktorzy-jeszcze-sie-nie/yl7pp3v">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/VXkktkpTURBXy9mMWNiYjY0NTAzNDEzYjhjNDg1YmQ0ZTZiZWEwYTc4My5qcGeTlQMAAM0HgM0ENpMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/VXkktkpTURBXy9mMWNiYjY0NTAzNDEzYjhjNDg1YmQ0ZTZiZWEwYTc4My5qcGeTlQMAAM0HgM0ENpMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Psychiatra: miłość pomiędzy człowiekiem a androidem jest możliwa</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                            
                            </div>
                        
                        
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="e7e09356-4072-46d6-b91c-a73b65b0307b" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155  showAuthorOrSourceImage
     
    " data-gtm="polecamy_3" href="https://www.auto-swiat.pl/wiadomosci/premiery/toyota-gr-supra-to-nie-jest-bmw/1fg60zd">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/H_KktkpTURBXy85MTgzODkwNTg0YmM2NDAxMDhmNDhlZjkyMTgwNDZhOS5qcGeTlQMANc0JxM0Fe5MFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/H_KktkpTURBXy85MTgzODkwNTg0YmM2NDAxMDhmNDhlZjkyMTgwNDZhOS5qcGeTlQMANc0JxM0Fe5MFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">W końcu jest! Po latach wraca Toyota Supra. Tylko czy... nie przypomina BMW?</span>

            

        </span>


         


        
        

            
                <span class="info">Auto Świat</span>
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="b70be025-e164-49ab-894c-9a7e32836cfd" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="polecamy_4" href="https://wiadomosci.onet.pl/kraj/policjanci-w-polsce/fvfttwg">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-2 " data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/q_SktkqTURBXy8zM2I4N2FkNWJiOTdjNzNlOTY4MjBjMDlhYWRmNjc5OC5qcGVnkpUDzMAAzQcMzQf5kwXMisyb" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/q_SktkqTURBXy8zM2I4N2FkNWJiOTdjNzNlOTY4MjBjMDlhYWRmNjc5OC5qcGVnkpUDzMAAzQcMzQf5kwXMisyb" /></noscript>
    </span>


    <span class="itemCollage cl-2 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/V0MktkqTURBXy8wMmY4ZjJlZjMyZjNjYmU0MDNiZGM1MDgxZmFjM2UyOC5qcGVnkpUDNwDNA9jNBFGTBcyKzJs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/V0MktkqTURBXy8wMmY4ZjJlZjMyZjNjYmU0MDNiZGM1MDgxZmFjM2UyOC5qcGVnkpUDNwDNA9jNBFGTBcyKzJs" /></noscript>
    </span>





    
    <span class="imageGradient" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="https://ocdn.eu/images/pulscms/NTM7MDA_/71e18f003aaa58975202af5948ff6fc1.png" data-run-module-isrun="1">
    <noscript><img alt="" src="https://ocdn.eu/images/pulscms/NTM7MDA_/71e18f003aaa58975202af5948ff6fc1.png" /></noscript>
    </span>
    

</span>
    

    

    
        
            
                <span class="newsSpec">INFOGRAFIKA</span>
            
        
    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Policjanci w Polsce - ilu ich mamy i jakim sprzętem dysponują? Jakie są zarobki?</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        



























<a data-uuid-ui="99780874-8d0c-42f8-a9c9-1a0a910e2111" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="tcsndxxbfqvc" data-gtm="polecamy_5" href="https://podroze.onet.pl/narty/najpopularniejsze-regiony-narciarskie/7cl4pqt">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/3yxktkqTURBXy9hNGE4MTFjMDdlOTliYjMwZmNhZDZjYjJjNjg4MzY4OS5qcGVnk5UDABLNAeDNAQ2TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/3yxktkqTURBXy9hNGE4MTFjMDdlOTliYjMwZmNhZDZjYjJjNjg4MzY4OS5qcGVnk5UDABLNAeDNAQ2TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Najczęściej wybierany region narciarski w Europie</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natwiemwiecej", "onet-ad-flat-natwiemwiecej-pos1", {"pos":"1"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="54787b6f-3c10-4763-9512-8ab4ad04958a" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="polecamy_6" href="https://kultura.onet.pl/wywiady-i-artykuly/nie-zyje-irena-dziedzic-legenda-polskiej-telewizji-miala-93-lata/cw39q09">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/mjTktkpTURBXy81ZDBlZGY4YmIyNWYxYTcyNzUzMDc2N2U4N2E4Y2E1Ni5qcGeTlQPM3c0CGs0FVc0C_5MFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/mjTktkpTURBXy81ZDBlZGY4YmIyNWYxYTcyNzUzMDc2N2U4N2E4Y2E1Ni5qcGeTlQPM3c0CGs0FVc0C_5MFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Przez lata przylgnęło do niej wiele plotek. Zapomniana, niedostępna. Nie żyje Irena Dziedzic</span>

            

        </span>


         


        
        

            
                
                    <span class="info">Emilia Padoł</span>
                
            

        

	</span>
</a>



                                    
                                        
                                        



























<a data-uuid-ui="d19906d7-2f81-46b4-9061-3ae6518fc9f6" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="hhmngpfwhgsg" data-gtm="polecamy_7" href="https://kobieta.onet.pl/zdrowie/pierwsza-pomoc-czy-wiesz-jak-ja-wykonac-sprawdz-quiz/bk4pdj">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/2svktkqTURBXy9lODJkNDYzMTFiOTQzNTAxZmJmZDA1MjYxN2RhNzE2MS5qcGVnk5UDAcyDzQTnzQLAkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/2svktkqTURBXy9lODJkNDYzMTFiOTQzNTAxZmJmZDA1MjYxN2RhNzE2MS5qcGVnk5UDAcyDzQTnzQLAkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" /></noscript>
    </span>
</span>
    

    

    
        
            
                <span class="newsSpec">QUIZ</span>
            
        
    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">10 pytań, na które każdy powinien znać odpowiedzi</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natwiemwiecej", "onet-ad-flat-natwiemwiecej-pos2", {"pos":"2"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                        
                                        


























    


<a data-uuid-ui="ed026f22-0cff-401d-98cf-49e2de881435" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="polecamy_8" href="https://technologie.onet.pl/nauka-i-technika/boom-overture-pierwszym-ponaddzwiekowym-samolotem-pasazerskim-od-czasow-concordea/d53l2r9">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/tCBktkpTURBXy82NGM4MmZkNjk3M2RlMDMwZGRjNmQzYmFlODMxNmM0MC5qcGeTlQNMcs0G5s0D4JMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/tCBktkpTURBXy82NGM4MmZkNjk3M2RlMDMwZGRjNmQzYmFlODMxNmM0MC5qcGeTlQNMcs0G5s0D4JMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Boom Overture pierwszym ponaddźwiękowym samolotem pasażerskim od czasów Concorde'a?</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        



























<a data-uuid-ui="1dfe1066-3bd3-41f1-9e7c-37cf50fcefde" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="mdcbmqbs" data-gtm="polecamy_9" href="https://kobieta.onet.pl/wiadomosci/w-wieku-14-lat-zmarl-samotny-george-wraz-z-nim-zniknal-caly-gatunek/3smwpbz">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/oG1ktkqTURBXy84ZmViNTJhN2Y3MGQ3OGIwM2IxODQ3Mjc0YjUyZWUwYy5qcGVnk5UDAgDNF27NDSiTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/oG1ktkqTURBXy84ZmViNTJhN2Y3MGQ3OGIwM2IxODQ3Mjc0YjUyZWUwYy5qcGVnk5UDAgDNF27NDSiTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">W wieku 14 lat zmarł "Samotny George". Wraz z nim zniknął cały gatunek</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natwiemwiecej", "onet-ad-flat-natwiemwiecej-pos3", {"pos":"3"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                        
                                        


























    


<a data-uuid-ui="057c8b2e-21bc-4933-b5cf-505228a0db12" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="polecamy_10" href="https://kobieta.onet.pl/wiadomosci/ciekawe-badania-polki-matki-siedmiorga-dzieci-zyly-dluzej-niz-kobiety-bezdzietne/dg875s5">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/lSiktkqTURBXy83NDBkNzhkZDY5ZjE5OGIxN2I1NzRmNWM5OTA2ZGE1Yy5qcGVnk5UDAH7NF3DNDSmTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/lSiktkqTURBXy83NDBkNzhkZDY5ZjE5OGIxN2I1NzRmNWM5OTA2ZGE1Yy5qcGVnk5UDAH7NF3DNDSmTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Zaskakujące badania Polki: matki siedmiorga dzieci żyły dłużej niż kobiety bezdzietne</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        



























<a data-uuid-ui="464d9bfd-a3fd-45d4-9e1d-c98b9849a7f2" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="jmhhkxkdgc" data-gtm="polecamy_11" href="https://gotowanie.onet.pl/porady/co-na-obiad-siedem-przepisow-na-caly-tydzien/951mg8m">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/VB2ktkqTURBXy84MmZiMDFhNGY2OTA1MTE1ZWVmNTE3YTJkY2ZlMGU1Ni5qcGVnk5UDNTzNA4DNAfeTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/VB2ktkqTURBXy84MmZiMDFhNGY2OTA1MTE1ZWVmNTE3YTJkY2ZlMGU1Ni5qcGVnk5UDNTzNA4DNAfeTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Co na obiad? Siedem przepisów na cały tydzień</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("nativestd", "nativetest", {"pos":"1"});  });</script>



                                    
                                    </div>
                                
                            
                        
                    
                </div>
            </section>
        </article>
        
    



                
                    


    <div data-section="ad-flat-boxleft2" id="ztf" class="nvfwzzpbkbfk" data-slot-name="flat-boxleft2" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxleft2","onet-ad-flat-boxleft2").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    
        
        
        
        <article data-section="chpolecane-onetprograms">
            
            
            <section class="mosaic sectionType3">
                <div class="boxHeader">

    <h1>
        <a href="http://vod.pl/">
        
            Najlepsze produkcje TV i Onetu
         
        </a>
    </h1>

</div>



<div class="secLinkWrp">

    
        <span><a href="https://vod.pl/playerpl-promocja/">Player.pl</a></span>
    

    
        <span><a href="http://vod.pl/cyfrowy-polsat-iplatv">Ipla.tv</a></span>
    

    
        <span><a href="https://vod.pl/programy-onetu">Programy Onetu</a></span>
    

</div>

                <div class="items">
                    
                    
                        
                            
                                <div class="sectionLine sectionLineMax">
                                
                                    
                                    


























    


<a data-uuid-ui="66d9eb96-1ff8-4f99-aa2d-6895e6b025e6" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="programy_onetu_1" href="http://vod.pl/playerpl/programy-online/zakup-kontrolowany-odcinki,215/odcinek-315,S22E315,65919.html">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/0uNktkqTURBXy81YTM5MzQ0MzZhNzUxMzliZWIwYzUyMWY3ZDIyYTAwZS5qcGVnk5UDAADNAjXNAT2TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/0uNktkqTURBXy81YTM5MzQ0MzZhNzUxMzliZWIwYzUyMWY3ZDIyYTAwZS5qcGVnk5UDAADNAjXNAT2TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Szukasz rodzinnego auta do 40 tysięcy złotych? Możesz kupić te modele </span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                
                                    
                                    


























    


<a data-uuid-ui="3d95903c-9241-4db3-9685-944c6064e6e9" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="programy_onetu_2" href="https://vod.pl/ipla/ewa-gotuje/svgl9dl">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/We3ktkqTURBXy82ZTMyMjQ1Y2RmY2RhNTk2M2RmZGE2ZTc3NjY3MDdhZS5qcGVnk5UDAADNAqHNAXmTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/We3ktkqTURBXy82ZTMyMjQ1Y2RmY2RhNTk2M2RmZGE2ZTc3NjY3MDdhZS5qcGVnk5UDAADNAqHNAXmTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Fantastyczny przepis na wątróbkę. Dania nie zna wielu Polaków</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                
                                    
                                    


























    


<a data-uuid-ui="3d922fa0-946b-4e3d-8658-c1d35f5b9dfa" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="programy_onetu_3" href="http://vod.pl/playerpl-promocja/seriale-online/pulapka-odcinki,13643/odcinek-1,S01E01,113011">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/U0rktkqTURBXy84N2Y3YmI0ZTYzYjU4MWZhYmY3NWFmM2IwMThiYWY0My5qcGVnk5UDAHDNFaXNDCeTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/U0rktkqTURBXy84N2Y3YmI0ZTYzYjU4MWZhYmY3NWFmM2IwMThiYWY0My5qcGVnk5UDAHDNFaXNDCeTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">"Pułapka". Najgorętszy serial kryminalny ostatniej jesieni! Przypominamy pierwszy odcinek</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                
                                </div>
                            
                        
                    
                </div>
            </section>
        </article>
        
    



                
            </div>
            

            
            <div class="container-content-right sideBar sideBar2">
                
                    


    <div data-section="ad-flat-boxright1" id="fhgrdh" class="nvfwzzpbkbfk" data-slot-name="flat-boxright1" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxright1","onet-ad-flat-boxright1").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    
        <div class="sideBarItem" data-scroll="sport">
            <article class="newsBox">
                <section data-section="sport">
                    
    

    
<div class="boxHeader">
    <h1>
        
            <a class="titleHeaderLink" href="https://sport.onet.pl/">
                
                    Sport
                
            </a>
        

        
    </h1>

    
</div>

    
    
    

    <div class="boxContent">
        
        <ul>
            
                

                    
                    
                    

                    

                    <li class="item-1 bigItem">

    <a href="https://sport.onet.pl/pilka-nozna/ekstraklasa/wisla-krakow-szuka-inwestora/7gz1gl3" data-uuid-ui="4d45568f-12d9-4c23-91f3-87844c82208e" data-gtm="sport_1">

        
            <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/TwsktkpTURBXy9jYTkyODZjNGNjMzYxOGEzODE4NWZlZDlhN2E1Yzc2NC5qcGeSlQMAb80N6c0H05MFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/TwsktkpTURBXy9jYTkyODZjNGNjMzYxOGEzODE4NWZlZDlhN2E1Yzc2NC5qcGeSlQMAb80N6c0H05MFXzs" /></noscript>
    </span>
</span>
        

        

        

            

            <span class="title">

                
                    Dobre wiadomości ws. Wisły Kraków. "Będzie dogrywka z inwestorami"
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-2">

    <a href="http://sercemznaszymi.onet.pl/felietony/apoloniusz-tajner-o-ryoyu-kobayashim/wve4x58" data-uuid-ui="24d508c2-0080-4306-8689-66bcef53a209" data-gtm="sport_2">

        

        

        

            

            <span class="title">

                
                    Kobayashi zaczyna się łamać? Tajner tłumaczy
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-3">

    <a href="https://sport.onet.pl/pilka-nozna/liga-wloska/genoa-potwierdza-negocjacje-z-realem-or-serie-a/gds6xmq" data-uuid-ui="cd5e04a9-3b6a-4853-952c-31be3da6c875" data-gtm="sport_3">

        

        

        

            

            <span class="title">

                
                    Media: Genoa potwierdziła negocjacje z Realem Madryt. Transfer Krzysztofa Piątka kwestią dni?
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li id="vsszkvw" data-slot-tpl-type="standardItem" class="item-4">

    <a href="https://sport.onet.pl/podnoszenie-ciezarow/polski-zwiazek-podnoszenia-ciezarow-wydal-oswiadczenie-ws-agaty-wrobel/6fmbr7y" data-uuid-ui="4844df68-6112-4625-bfb4-fc717739c5f1" data-gtm="sport_4">

        

        

        

            

            <span class="title">

                
                    PZPC wydał oświadczenie ws. Agaty Wróbel. "Nie wiemy czemu, ale nie widzimy jej woli"
                

                

                </span>

        

        
    </a>
    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natsport", "onet-ad-flat-natsport-pos4", {"pos":"4"});  });</script>
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-5">

    <a href="http://sercemznaszymi.onet.pl/artykuly/skoki-narciarskie-tomasz-pilch-odczuwa-skutki-upadku-w-zakopanem/fk5c6kw" data-uuid-ui="55d198e4-baa7-45f7-a0fb-26dab51f94cb" data-gtm="sport_5">

        

        

        

            

            <span class="title">

                
                    Polski skoczek poobijany po upadku w Zakopanem
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-6">

    <a href="https://sport.onet.pl/formula-1/mick-schumacher-blisko-ferrari/1tb5kfp" data-uuid-ui="9a58e215-58ed-42fe-b5fb-9c275de4b55a" data-gtm="sport_6">

        

        

        

            

            <span class="title">

                
                    F1: syn Schumachera blisko kontraktu z Ferrari
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li id="fzv" data-slot-tpl-type="standardItem" class="item-7">

    <a href="https://sport.onet.pl/zimowe/skoki-narciarskie/skoki-narciarskie-prawie-sto-osob-pracuje-przy-odsniezaniu-wielkiej-krokwi/tr9tz4v" data-uuid-ui="587b27f5-4bbb-4365-88fe-ed7b7701e047" data-gtm="sport_7">

        

        

        

            

            <span class="title">

                
                    PŚ w skokach: śnieg zasypuje Zakopane
                

                

                </span>

        

        
    </a>
    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natsport", "onet-ad-flat-natsport-pos7", {"pos":"7"});  });</script>
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-8">

    <a href="https://sport.onet.pl/pilka-reczna/mistrzostwa-swiata-pilkarzy-recznych/ms-pilkarzy-recznych-2019-wyniki-meczow-3-kolejki/9cyt24w" data-uuid-ui="688a3850-d338-4af7-9789-7e6f853b2d07" data-gtm="sport_8">

        

        

        

            

            <span class="title">

                
                    MŚ: Rosja zatrzymała rozpędzonego gospodarza
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-9">

    <a href="https://sport.onet.pl/pilka-nozna/liga-angielska/david-wagner-nie-jest-juz-menedzerem-huddersfield-town/g1tmzbl" data-uuid-ui="f4a3a515-874a-4b57-9e9b-ce147f32925d" data-gtm="sport_9">

        

        

        

            

            <span class="title">

                
                    Klub Premier League rozstał się z menedżerem
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-10">

    <a href="https://www.przegladsportowy.pl/siatkowka/plusliga/lotos-trefl-gdansk/andrea-anastasi-i-jozef-gladysz-wspominaja-pawla-adamowicza/hcq9yqh" data-uuid-ui="55256bb1-760e-4ce9-a8f3-b6dcb015107d" data-gtm="sport_10">

        

        

        

            

            <span class="title">

                
                    Anastasi i Gładysz wspominają Adamowicza
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-11">

    <a href="https://www.przegladsportowy.pl/zuzel/pge-ekstraliga/zuzel-zabojstwo-adamowicza-poruszylo-swiat-zuzla-plech-wciaz-nie-dowierzam-on-nie/y59feh5" data-uuid-ui="299ba390-6b71-48b4-91f4-db9750e00b03" data-gtm="sport_11">

        

        

        

            

            <span class="title">

                
                    Śmierć Adamowicza poruszyła świat żużla
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-12">

    <a href="https://bundesliga.onet.pl/leonardo-balerdi-nowym-pilkarzem-borussii-dortmund/9h24bep" data-uuid-ui="c488ee7f-e2c0-4651-86a3-8ba00d904d12" data-gtm="sport_12">

        

        

        

            

            <span class="title">

                
                    Pierwsze zimowe wzmocnienie Borussii Dortmund
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-13">

    <a href="https://sport.onet.pl/pilka-nozna/liga-angielska/harry-kane-kontuzjowany-tottenham-hotspur-ma-problem/w1jvjvl" data-uuid-ui="a354df5b-922d-49af-849b-98f436a9d4d3" data-gtm="sport_13">

        

        

        

            

            <span class="title">

                
                    Poważny problem Tottenhamu po meczu z MU
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-14">

    <a href="https://sport.onet.pl/pilka-nozna/transfery/roman-bezjak-odszedl-z-jagiellonii-bialystok/1c43hg5" data-uuid-ui="0473aeab-3ae7-4075-bd6a-e8e64a1dfac4" data-gtm="sport_14">

        

        

        

            

            <span class="title">

                
                    Kolejny piłkarz opuścił Jagiellonię Białystok
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-15">

    <a href="https://sport.onet.pl/tenis/wta/dawid-celt-wywiad/w7gpbcr" data-uuid-ui="8d99314b-8ec5-4643-8be4-71b6c0610500" data-gtm="sport_15">

        

        

        

            

            <span class="title">

                
                    Dawid Celt: nie jest sztuką raz zrobić show
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-16">

    <a href="https://sport.onet.pl/pilka-nozna/kadra/damian-kadzior-wywiad/tky818r" data-uuid-ui="0fec46e1-50c1-4388-839f-35a293ca6028" data-gtm="sport_16">

        

        
			
				
			
        

        

            

            <span class="title">

                
                    Kądzior: Kadra? Dać więcej niż do tej pory
                

                

                </span>

        

        
            <div class="authorContainer">
                
                    
                
            </div>
        
    </a>
    
</li>

                    
                        
    
        
            <li class="sponsored hide">
                <span class="nvfwzzpbkbfk kbqvrzkfnmjk" id="mgcnrrrsmnfv" data-add-label="1"></span>
            </li>
        
    
        
    
        
    

                    
                
            
        </ul>
        
    </div>

                </section>
                <section data-section="sport2">
                    
    
    
    <ul class="moreNews">
        
            
                <li class="item-1">
                <span>Więcej:</span>
                <ul>
                
                <li><a href="https://sport.onet.pl/pilka-nozna">Piłka nożna</a></li>
                
                <li><a href="https://sport.onet.pl/zimowe/skoki-narciarskie">Skoki</a></li>
                
                <li><a href="https://sport.onet.pl/pilka-reczna">Ręczna</a></li>
                
                <li><a href="https://sport.onet.pl/siatkowka">Siatkówka</a></li>
                
                <li><a href="https://www.przegladsportowy.pl/zuzel">Żużel</a></li>
                
                <li><a href="https://sport.onet.pl/tenis">Tenis</a></li>
                
                <li><a href="https://sport.onet.pl/formula-1">F1</a></li>
                
                <li><a href="https://sport.onet.pl/kolarstwo">Kolarstwo</a></li>
                
                <li><a href="https://sport.onet.pl/boks">Boks</a></li>
                
                <li><a href="https://sport.onet.pl/mma">MMA</a></li>
                
                <li class="item-last"><a href="https://sport.onet.pl/newsletter">Newsletter</a></li>
                
                </ul>
                </li>
            
        
            
                <li class="item-2">
                <span>Gorące:</span>
                <ul>
                
                <li><a href="https://sport.onet.pl/zimowe/skoki-narciarskie">Skoki narciarskie</a></li>
                
                <li><a href="http://ekstraklasa.tv/">Ekstraklasa</a></li>
                
                <li class="item-last"><a href="https://plebiscyt.przegladsportowy.pl/">Plebiscyt PS</a></li>
                
                </ul>
                </li>
            
        
    </ul>
    

                </section>
            </article>
        </div>
    



                
                    


    <div data-section="ad-flat-boxright2" id="gdfj" class="nvfwzzpbkbfk" data-slot-name="flat-boxright2" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxright2","onet-ad-flat-boxright2").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    
        <div class="sideBarItem" data-scroll="biznes">
            <article class="newsBox">
                <section data-section="economy">
                    
    

    
<div class="boxHeader">
    <h1>
        
            <a class="titleHeaderLink" href="https://businessinsider.com.pl/">
                
                    Biznes
                
            </a>
        

        
    </h1>

    
</div>

    
    
    

    <div class="boxContent">
        
        <ul>
            
                

                    
                    
                    

                    

                    <li class="item-1 bigItem">

    <a href="https://businessinsider.com.pl/finanse/obligacje-oszczednosciowe-sprzedaz-w-2018-roku/2y9jy5r" data-uuid-ui="d03d1894-883f-40f6-92ec-a1ba2eaadad9" data-gtm="business_1">

        
            <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/1g1ktkqTURBXy84ZWM1ODkyYTY0NzVlY2FmMjE2NmZhZGNkZGJjYWJjZC5qcGVnkpUDzLQAzQZozQRFkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/1g1ktkqTURBXy84ZWM1ODkyYTY0NzVlY2FmMjE2NmZhZGNkZGJjYWJjZC5qcGVnkpUDzLQAzQZozQRFkwVfOw" /></noscript>
    </span>
</span>
        

        

        

            

            <span class="title">

                
                    Państwo pożyczyło od Polaków rekordową kwotę w 2018 roku
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-2">

    <a href="https://businessinsider.com.pl/technologie/analiza-stopnia-wykorzystania-urzadzen-huawei-w-polsce/2wm7mjp" data-uuid-ui="dbde22c9-ca61-4238-afa5-d164fb2b62bc" data-gtm="business_2">

        

        

        

            

            <span class="title">

                
                    Ruszyła analiza wykorzystania urządzeń firmy Huawei w Polsce
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-3">

    <a href="https://businessinsider.com.pl/wiadomosci/jerzy-owsiak-nie-bedzie-juz-prezesem-wosp/25lwmd6" data-uuid-ui="baf75ea9-bc5b-4970-a42a-d0206107a53b" data-gtm="business_3">

        

        

        

            

            <span class="title">

                
                    Jerzy Owsiak rezygnuje z funkcji prezesa WOŚP
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li id="wrbjfrtmfvc" data-slot-tpl-type="standardItem" class="item-4">

    <a href="https://businessinsider.com.pl/wiadomosci/pawel-adamowicz-prezydent-gdanska-w-latach-1998-2019/2kscr7p" data-uuid-ui="f80a0f31-cf1c-4f3b-bdce-be46588e14ff" data-gtm="business_4">

        

        

        

            

            <span class="title">

                
                    Paweł Adamowicz odmienił Gdańsk. Był jednym z najdłużej urzędujących prezydentów miast
                

                

                </span>

        

        
    </a>
    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natbiznes", "onet-ad-flat-natbiznes-pos:4", {"pos":"4"});  });</script>
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-5">

    <a href="https://businessinsider.com.pl/motoryzacja/nowa-toyota-gr-supra-powrot-po-18-latach/fb61ln1" data-uuid-ui="856cc045-2ac8-45ec-9b80-702e26c73706" data-gtm="business_5">

        

        

        

            

            <span class="title">

                
                    Po 18 latach 340 konne auto-legenda powraca. Byliśmy już w jego środku
                

                

                <svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-6">

    <a href="https://businessinsider.com.pl/technologie/nowe-technologie/tencent-wciaz-bez-pozwolenia-na-rejestracje-nowych-gier/12mps1j" data-uuid-ui="5406abcd-ad50-4365-8f63-dc464c3e9261" data-gtm="business_6">

        

        

        

            

            <span class="title">

                
                    Chiński gigant nadal na czarnej liście rządu. Straty idą w miliardy
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li id="vmvqvvkvxwd" data-slot-tpl-type="standardItem" class="item-7">

    <a href="https://businessinsider.com.pl/wiadomosci/program-budowy-elektrowni-atomowej/bqek1h5" data-uuid-ui="0c7620fe-348f-4238-965a-86fb8ec4872b" data-gtm="business_7">

        

        

        

            

            <span class="title">

                
                    Eksperci: program atomowy z PEP 2040 zbyt ambitny
                

                

                </span>

        

        
    </a>
    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natbiznes", "onet-ad-flat-natbiznes-pos7", {"pos":"7"});  });</script>
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-8">

    <a href="https://businessinsider.com.pl/finanse/makroekonomia/gospodarka-swiatowa-prognozy-banku-swiatowego/wg2gyx5" data-uuid-ui="10e2058d-93f6-4a4f-8c23-8d118f0c5f55" data-gtm="business_8">

        

        

        

            

            <span class="title">

                
                    Ciemne chmury nad światową gospodarką
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-9">

    <a href="https://businessinsider.com.pl/wiadomosci/odbior-i-zagospodarowanie-odpadow-bedzie-jeszcze-drozsze/qj6488g" data-uuid-ui="9b262513-3d84-4989-85e7-b02ead03f42b" data-gtm="business_9">

        

        

        

            

            <span class="title">

                
                    Zagospodarowanie odpadów będzie droższe
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-10">

    <a href="https://businessinsider.com.pl/wiadomosci/francja-pozyczy-1-mld-euro-na-odbudowe-iraku/4v77ltt" data-uuid-ui="86e758eb-62eb-4ddd-95ee-fc9b2e4d9ea8" data-gtm="business_10">

        

        

        

            

            <span class="title">

                
                    Francja pożyczy 1 mld euro na odbudowę Iraku
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-11">

    <a href="https://businessinsider.com.pl/finanse/makroekonomia/stopy-procentowe-w-usa-opinia-janet-yellen-bylej-prezes-fed/zhr0ryd" data-uuid-ui="7d212e85-4cef-4c36-9b44-afe62b08f03f" data-gtm="business_11">

        

        

        

            

            <span class="title">

                
                    Była szefowa Fedu ma dobrą i złą wiadomość
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-12">

    <a href="https://businessinsider.com.pl/motoryzacja/recesja-w-branzy-samchodowej-w-usa/l0bbq9m" data-uuid-ui="e00ac10e-41a0-4771-abb4-7e9af85fee6f" data-gtm="business_12">

        

        

        

            

            <span class="title">

                
                    Recesja w branży samochodowej za oceanem
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-13">

    <a href="https://businessinsider.com.pl/polityka/czy-wielka-brytania-moze-zrezygnowac-z-brexitu-theresa-may-o-umowie/140nwj1" data-uuid-ui="a87aaca6-7d87-448e-a266-de218be704b5" data-gtm="business_13">

        

        

        

            

            <span class="title">

                
                    T. May: nie będzie umowy, może nie być brexitu
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-14">

    <a href="https://businessinsider.com.pl/wiadomosci/rumunia-ma-przedstawic-nowa-propozycje-ws-nord-stream-2/vm6xjlf" data-uuid-ui="4f111a89-7056-405a-bfc7-05e2879f5e88" data-gtm="business_14">

        

        
			
				
			
        

        

            

            <span class="title">

                
                    Rumunia z nową propozycją ws. Nord Stream 2
                

                

                </span>

        

        
            <div class="authorContainer">
                
                    
                
            </div>
        
    </a>
    
</li>

                    
                        
    
        
            <li class="sponsored hide">
                <span class="nvfwzzpbkbfk kbqvrzkfnmjk" id="fnqtwrtqc" data-add-label="1"></span>
            </li>
        
    
        
    
        
    

                    
                
            
        </ul>
        
    </div>

                </section>
                <section data-section="economy2">
                    
    
    
    <ul class="moreNews">
        
            
                <li class="item-1">
                <span>Więcej:</span>
                <ul>
                
                <li><a href="https://ubezpieczenia.onet.pl/">Porównaj ceny OC/AC</a></li>
                
                <li><a href="http://nieruchomosci.onet.pl/?utm_source=onet.pl&amp;utm_medium=referral&amp;utm_campaign=2018">Ceny nieruchomości</a></li>
                
                <li><a href="https://businessinsider.com.pl/gielda?utm_source=onet.pl&amp;utm_medium=referral&amp;utm_campaign=gielda">Giełda</a></li>
                
                <li><a href="https://businessinsider.com.pl/finanse/kursy-walut?utm_source=onet.pl&amp;utm_medium=referral&amp;utm_campaign=kursy-walut">Waluty</a></li>
                
                <li><a href="https://businessinsider.com.pl/finanse?utm_source=onet.pl&amp;utm_medium=referral&amp;utm_campaign=finanse">Finanse</a></li>
                
                <li class="item-last"><a href="https://businessinsider.com.pl/finanse/kursy-walut/forex?symbol=BTC/PLN&amp;utm_source=onet.pl&amp;utm_medium=referral&amp;utm_campaign=btc">Bitcoin</a></li>
                
                </ul>
                </li>
            
        
    </ul>
    

                </section>
            </article>
        </div>
    



                
                    



<div class="newsBox">
    <div class="boxRatings_v2">

        <div class="names">
            <table class="namesFirst">
                <tbody><tr><th class="name"><a href="https://businessinsider.com.pl/finanse/kursy-walut">WALUTY</a></th>
                <th class="buyTitle">Kupno</th>
                <th class="sellTitle">Sprzedaż</th>
            </tr></tbody></table>
            <table class="namesSecond">
                <tbody><tr><th class="name"><a href="https://businessinsider.com.pl/gielda">GIEŁDA</a></th>
                <th class="change">Zmiana</th>
                <th class="sellTitle">Kurs</th>
            </tr></tbody></table>
        </div>

        <table class="item-1">
        

            <tbody><tr>
                <th class="name" scope="row"><a href="https://businessinsider.com.pl/finanse/kursy-walut/forex?symbol=EUR/PLN">EUR</a></th>

            
                <td class="buyValue">4,2794</td>
            

            
                <td class="sellValue">4,3014</td>
            
            </tr>

        

            <tr>
                <th class="name" scope="row"><a href="https://businessinsider.com.pl/finanse/kursy-walut/forex?symbol=USD/PLN">USD</a></th>

            
                <td class="buyValue">3,7312</td>
            

            
                <td class="sellValue">3,7532</td>
            
            </tr>

        

            <tr>
                <th class="name" scope="row"><a href="https://businessinsider.com.pl/finanse/kursy-walut/forex?symbol=GBP/PLN">GBP</a></th>

            
                <td class="buyValue">4,7996</td>
            

            
                <td class="sellValue">4,8256</td>
            
            </tr>

        

            <tr>
                <th class="name" scope="row"><a href="https://businessinsider.com.pl/finanse/kursy-walut/forex?symbol=CHF/PLN">CHF</a></th>

            
                <td class="buyValue">3,8024</td>
            

            
                <td class="sellValue">3,8244</td>
            
            </tr>

        
        </tbody></table>

        <table class="item-2">
        

            <tbody><tr>
                <th class="name" scope="row"><a href="https://businessinsider.com.pl/gielda/indeks-polski?id=PL9999999995">WIG</a></th>

            
                
                <td class="change down">-0,35%<span>spadek</span></td>
                
            

            
                <td class="value">59 112,53</td>
            
            </tr>

        

            <tr>
                <th class="name" scope="row"><a href="https://businessinsider.com.pl/gielda/indeks-polski?id=PL9999999987">WIG20</a></th>

            
                
                <td class="change down">-0,32%<span>spadek</span></td>
                
            

            
                <td class="value">2 327,66</td>
            
            </tr>

        

            <tr>
                <th class="name" scope="row"><a href="https://businessinsider.com.pl/gielda/indeks-swiatowy?id=NASDAQ">NASDAQ</a></th>

            
                
                <td class="change down">-0,63%<span>spadek</span></td>
                
            

            
                <td class="value">6 927,47</td>
            
            </tr>

        

            <tr>
                <th class="name" scope="row"><a href="https://businessinsider.com.pl/gielda/indeks-swiatowy?id=S%26P%20500">S&amp;P 500</a></th>

            
                
                <td class="change down">-0,37%<span>spadek</span></td>
                
            

            
                <td class="value">2 586,73</td>
            
            </tr>

        
        </tbody></table>

        
        <table class="link">
            
                <tbody><tr>
                    <td>
                    
                        <span>Kantor:</span>
                        
                        
                            
                                <a href="https://businessinsider.com.pl/kantor">Wymień walutę online</a>
                            
                        
                        
                    
                    </td>
                </tr>
            
        </tbody></table>
        

    </div>
</div>



                
                    


    
        
            
        

        
            <div class="sideBarItem popularinbusinessColumn pictorialFeed alignColumnReady hide" data-scroll="">
                <article class="newsBox" data-section="popularinbusiness">

                
                

                
<div class="boxHeader">
    <h1>
        
            <a class="titleHeaderLink" href="http://businessinsider.com.pl/">
                
                    Business Insider Polska
                
            </a>
        

        
    </h1>

    
</div>


                <ul class="boxContent boxPopularContent">
                  
                    
  <li class="item-1 bigItem hide">
    <a href="https://businessinsider.com.pl/wiadomosci/francja-pozyczy-1-mld-euro-na-odbudowe-iraku/4v77ltt" data-gtm="bi_1">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/qlvktkqTURBXy83OTYxZDQ5ODUwZWIwZGE3NmI5YmViN2M1MmNjNGM5OS5qcGVnkpUDzQEwUc0GoM0DupMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/qlvktkqTURBXy83OTYxZDQ5ODUwZWIwZGE3NmI5YmViN2M1MmNjNGM5OS5qcGVnkpUDzQEwUc0GoM0DupMFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Francja pożyczy 1 mld euro na odbudowę Iraku</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-2 bigItem hide">
    <a href="https://businessinsider.com.pl/technologie/analiza-stopnia-wykorzystania-urzadzen-huawei-w-polsce/2wm7mjp" data-gtm="bi_2">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/LdIktkpTURBXy83ZDJhY2FlZDM1Zjg4NTdkMDdlYTZkOGJmMjg5ZTJiNS5wbmeSlQMAzQGQzRdwzQ0vkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/LdIktkpTURBXy83ZDJhY2FlZDM1Zjg4NTdkMDdlYTZkOGJmMjg5ZTJiNS5wbmeSlQMAzQGQzRdwzQ0vkwVfOw" /></noscript>
    </span>
</span>

        
            <span class="title">Ruszyła analiza wykorzystania urządzeń firmy Huawei w Polsce</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-3 bigItem hide">
    <a href="https://businessinsider.com.pl/motoryzacja/nowa-toyota-gr-supra-powrot-po-18-latach/fb61ln1" data-gtm="bi_3">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/sk5ktkqTURBXy8zYjU0NzA5MmU0Yzg0ZGRiMGM4NjQ2NzMzOWQ0NDEwMS5qcGVnkpUDAADNB4DNBDiTBV87" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/sk5ktkqTURBXy8zYjU0NzA5MmU0Yzg0ZGRiMGM4NjQ2NzMzOWQ0NDEwMS5qcGVnkpUDAADNB4DNBDiTBV87" /></noscript>
    </span>
</span>

        
            <span class="title">Po 18 latach 340 konne auto-legenda powraca. Byliśmy już w jego środku</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-4 bigItem hide">
    <a href="https://businessinsider.com.pl/wiadomosci/pawel-adamowicz-prezydent-gdanska-w-latach-1998-2019/2kscr7p" data-gtm="bi_4">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/49OktkqTURBXy83MDhmYzc5ZjU1Y2NlM2JhMWI1YjUwZjZhNWE4MWM1Mi5qcGVnkpUDAFzNB9DNBGWTBV87" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/49OktkqTURBXy83MDhmYzc5ZjU1Y2NlM2JhMWI1YjUwZjZhNWE4MWM1Mi5qcGVnkpUDAFzNB9DNBGWTBV87" /></noscript>
    </span>
</span>

        
            <span class="title">Paweł Adamowicz odmienił Gdańsk. Był jednym z najdłużej urzędujących prezydentów miast</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-5 bigItem hide">
    <a href="https://businessinsider.com.pl/technologie/nowe-technologie/tencent-wciaz-bez-pozwolenia-na-rejestracje-nowych-gier/12mps1j" data-gtm="bi_5">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/7xSktkqTURBXy82NTk5N2Y0YTMwM2M3OWI1ODE2MzY5NDFjMGI4ZGE5OS5qcGVnkpUDAD3NBADNAkCTBV87" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/7xSktkqTURBXy82NTk5N2Y0YTMwM2M3OWI1ODE2MzY5NDFjMGI4ZGE5OS5qcGVnkpUDAD3NBADNAkCTBV87" /></noscript>
    </span>
</span>

        
            <span class="title">Chiński gigant nadal na czarnej liście rządu. Straty idą w miliardy</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-6 bigItem hide">
    <a href="https://businessinsider.com.pl/wiadomosci/jerzy-owsiak-nie-bedzie-juz-prezesem-wosp/25lwmd6" data-gtm="bi_6">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/4qaktkqTURBXy83YzY1NWEyNjNmMzIxMGVlNmU2MWEyZjZlZDI0ZDg5Zi5qcGVnkpUDAEXNB9DNBGWTBV87" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/4qaktkqTURBXy83YzY1NWEyNjNmMzIxMGVlNmU2MWEyZjZlZDI0ZDg5Zi5qcGVnkpUDAEXNB9DNBGWTBV87" /></noscript>
    </span>
</span>

        
            <span class="title">Jerzy Owsiak rezygnuje z funkcji prezesa Wielkiej Orkiestry Świątecznej Pomocy</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-7 bigItem hide">
    <a href="https://businessinsider.com.pl/finanse/handel/dostarczanie-zakupow-z-szopipl-umowa-z-carrefourem/fd2t2j3" data-gtm="bi_7">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/AmPktkpTURBXy8xZDM5MGZhZGY5OGMwZDg0YTQ3MjAzNDkyN2ExYTgxZC5wbmeSlQMADM0H0M0EZZMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/AmPktkpTURBXy8xZDM5MGZhZGY5OGMwZDg0YTQ3MjAzNDkyN2ExYTgxZC5wbmeSlQMADM0H0M0EZZMFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Startup Szopi.pl ma pierwszą umowę z siecią handlową. Będzie współpracować z Carrefourem</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-8 bigItem hide">
    <a href="https://businessinsider.com.pl/wiadomosci/proces-bylego-prezesa-nissana-przyklad-patologii-w-japonii/erdpb9d" data-gtm="bi_8">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/z__ktkqTURBXy82MzdhNDJiZDBhOTM4YTRlM2Q0MjNkMWQwOGM5NDQ3Ni5qcGVnkpUDAMzSzQq0zQYFkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/z__ktkqTURBXy82MzdhNDJiZDBhOTM4YTRlM2Q0MjNkMWQwOGM5NDQ3Ni5qcGVnkpUDAMzSzQq0zQYFkwVfOw" /></noscript>
    </span>
</span>

        
            <span class="title">Drakoński wymiar sprawiedliwości - żona byłego prezesa Nissana o patologii w Japonii</span>
        
    </a>
    
  </li>

                  
                </ul>

                
    
    


                </article>
            </div>
        
    



                
            </div>
            
            <div style="clear: both"></div>

            
        </div>

    
        
            
                


    <div data-section="flat-gigaboard2" id="jjwwkwnsd" class="lv1c lv1w nvfwzzpbkbfk" data-slot-name="flat-gigaboard2" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-gigaboard2","onet-ad-flat-gigaboard2").setCollapseEmpty(true);
            });
        </script>
        
    </div>



            
        

        <div id="mainPageBody3" class="content whitelistContent lv1c lv1w">
            

            
            <div class="container-content-left mainPageContent">
                
                    


    <div data-section="ad-flat-boxleft3" id="mvstvnbh" class="nvfwzzpbkbfk" data-slot-name="flat-boxleft3" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxleft3","onet-ad-flat-boxleft3").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    

        
        
        
        <article data-section="chpolecane-inspiracje">
            
            
            <section class="mosaic sectionType3">

                    <div class="boxHeader">

    <h1>
        <a href="http://kobieta.onet.pl/">
        
            Styl życia 
         
        </a>
    </h1>

</div>



<div class="secLinkWrp">

    
        <span><a href="http://kobieta.onet.pl/">Kobieta</a></span>
    

    
        <span><a href="http://facet.onet.pl/">Facet</a></span>
    

    
        <span><a href="http://kobieta.onet.pl/dziecko">Dziecko</a></span>
    

    
        <span><a href="http://kobieta.onet.pl/uroda">Uroda</a></span>
    

    
        <span><a href="http://kobieta.onet.pl/zdrowie">Zdrowie</a></span>
    

    
        <span><a href="http://gotowanie.onet.pl/">Gotowanie</a></span>
    

    
        <span><a href="http://kobieta.onet.pl/dom">Dom</a></span>
    

    
        <span><a href="http://www.medonet.pl/">Medonet</a></span>
    

    
        <span><a href="http://kobieta.onet.pl/moda">Moda</a></span>
    

    
        <span><a href="http://podroze.onet.pl/">Podróże</a></span>
    

    
        <span><a href="http://www.sympatia.onet.pl/?utm_source=onet.pl&amp;utm_medium=link&amp;utm_campaign=lifestyle">Randki</a></span>
    

</div>


                <div class="items">
                    
                        
                        
                         
                            

                            <div class="sectionLine sectionLineMax">
                            
                                
                                


























    


<a data-uuid-ui="d875aaa2-ee9b-4a33-89a2-8b16a8525a4e" data-params-element-type="t_3_2" class="itemBox itemBox_3_2 s1_260 
     
    " data-gtm="styl_zycia_1" href="https://kobieta.onet.pl/dom/porady/trendy-wnetrzarskie-2019-co-bedzie-modne/r30hqg7">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/qpaktkqTURBXy84OTFlMGIzODQwY2FjNmNkMzFhMWJjYTVhY2NlZTM2Ni5qcGVnk5UDAGfNA-jNAjSTBc0CPM0BBJUH2TIvcHVsc2Ntcy9NREFfLzI3NGMxZDY0NjcwODJjM2U2ZGZlOWQwOWY0YTZkZjZiLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/qpaktkqTURBXy84OTFlMGIzODQwY2FjNmNkMzFhMWJjYTVhY2NlZTM2Ni5qcGVnk5UDAGfNA-jNAjSTBc0CPM0BBJUH2TIvcHVsc2Ntcy9NREFfLzI3NGMxZDY0NjcwODJjM2U2ZGZlOWQwOWY0YTZkZjZiLnBuZwDCAA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Jak w 2019 roku będziemy urządzać nasze domy i mieszkania?</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                            
                                
                                


























    


<a data-uuid-ui="e96a1880-3616-4777-aa06-bb1c7ecf821c" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="styl_zycia_2" href="https://kobieta.onet.pl/zdrowie/wiadomosci/masz-zmarzniete-dlonie-i-stopy-to-moze-byc-zwiastun-powazniejszych-problemow/49x4spq">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/HPQktkqTURBXy8zNmE0NWE2MzFhMjBkZWVhZGIyZjA0NzBjYTMwNjRmNy5qcGVnk5UDAADNA-jNApqTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/HPQktkqTURBXy8zNmE0NWE2MzFhMjBkZWVhZGIyZjA0NzBjYTMwNjRmNy5qcGVnk5UDAADNA-jNApqTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Masz zmarznięte dłonie i stopy? To może być zwiastun poważniejszych problemów</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                            
                            </div>
                        
                        
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="a2a9ec72-5321-4383-9ed9-ccca458d6a70" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="styl_zycia_3" href="https://kobieta.onet.pl/zdrowie/profilaktyka/pasty-do-zebow-bez-fluoru/11sns0l">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/NafktkqTURBXy8yYmIwZTA2M2QxZWQyN2RkZmJhMzI4YTA5ZTE2MTExYi5qcGVnk5UDVk7NA5LNAgKTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/NafktkqTURBXy8yYmIwZTA2M2QxZWQyN2RkZmJhMzI4YTA5ZTE2MTExYi5qcGVnk5UDVk7NA5LNAgKTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Obwinia się go o zaburzanie rytmu serca i obniżanie IQ. Składnik ten znajduje się w większości past do zębów</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        



























<a data-uuid-ui="e88f4bcd-0e4f-40ba-a699-4fcad4e1e6c7" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="hghbvbjgd" data-gtm="styl_zycia_4" href="https://gotowanie.onet.pl/porady/jak-szybko-i-latwo-utrzec-ser/pztqr0h">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/ynFktkqTURBXy8yYmNjYmVjMjVlOTliM2ZkOTRjMTVlMjMyMDc2NTBhNS5qcGVnk5UDACrNAeDNAQ6TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/ynFktkqTURBXy8yYmNjYmVjMjVlOTliM2ZkOTRjMTVlMjMyMDc2NTBhNS5qcGVnk5UDACrNAeDNAQ6TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Całe życie źle ucieraliście ser. Sprawdź, jak powinno się to robić</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natstylzycia", "onet-ad-flat-natstylzycia-pos1", {"pos":"1"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                        
                                        



























<a data-uuid-ui="3d634d79-d85e-404c-84f1-af046e70535f" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="hmbjzqqwrbzs" data-gtm="styl_zycia_5" href="https://kobieta.onet.pl/uroda/fitness-dla-leniwych-jak-maksymalizowac-korzysci-przy-minimalnym-wysilku/tbp7q4f">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/FFQktkqTURBXy8zM2I2ZTdkZjNjZmFkMDBmNjg2ZjM3ZTkzMDYwY2RhNy5qcGVnk5UDAADNA-fNAjGTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/FFQktkqTURBXy8zM2I2ZTdkZjNjZmFkMDBmNjg2ZjM3ZTkzMDYwY2RhNy5qcGVnk5UDAADNA-fNAjGTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Fitness dla leniwych - jak maksymalizować korzyści przy minimalnym wysiłku?</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natleft2", "onet-ad-flat-natleft2");  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        



























<a data-uuid-ui="57a923f3-5c68-4e73-9200-b6193b225faa" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="nzbwt" data-gtm="styl_zycia_6" href="https://kobieta.onet.pl/uroda/twarz-i-cialo/sassy-water-napoj-ktory-pomoze-jesli-marzysz-o-plaskim-brzuchu/ys33vnv">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/Wx-ktkqTURBXy8yNzZhZTM4NWU0Zjk2YjRkMDRhMTIwZDhmODFmY2RkNi5qcGVnk5UDAMywzRXwzQxXkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/Wx-ktkqTURBXy8yNzZhZTM4NWU0Zjk2YjRkMDRhMTIwZDhmODFmY2RkNi5qcGVnk5UDAMywzRXwzQxXkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">"Sassy water" - napój, który pomoże, jeśli marzysz o płaskim brzuchu!</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natstylzycia", "onet-ad-flat-natstylzycia-pos2", {"pos":"2"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                        
                                        


























    


<a data-uuid-ui="c07c88a4-df5d-4dd2-bdf1-609555a7fcc2" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="styl_zycia_7" href="https://kobieta.onet.pl/zdrowie/masz-problemy-z-zasypianiem-rozwiazanie-moze-okazac-sie-banalne/c7ddbrq">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/TptktkqTURBXy8xZWVkNzA0NDExYzlhMDllODBmNjhlZDc5OGY4ZTY0YS5qcGVnk5UDAADNDzDNCiCTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/TptktkqTURBXy8xZWVkNzA0NDExYzlhMDllODBmNjhlZDc5OGY4ZTY0YS5qcGVnk5UDAADNDzDNCiCTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Masz problemy z zasypianiem? Rozwiązanie może okazać się banalne!</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="styl_zycia_8" href="http://ladnydom.pl/inspiracje/7,153170,24339837,noworoczna-wyprzedaz-w-sklepach-selsey-meble-i-dodatki-w-duzo.html?utm_source=onet&amp;utm_medium=click&amp;utm_campaign=redirect">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/NZWktktTURBXy83MTBjNTUxNC03ZjE1LTQ3ZWMtYjg3My1kOTYzYmY1MDBkYTQuanBnk5UDAADNA4TNAliTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/NZWktktTURBXy83MTBjNTUxNC03ZjE1LTQ3ZWMtYjg3My1kOTYzYmY1MDBkYTQuanBnk5UDAADNA4TNAliTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Złap okazję na wyprzedaży w sklepach meblowych. Dodatki już za 49 zł</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="styl_zycia_9" href="http://ladnydom.pl/inspiracje/1,153170,22400712,fotel-worek-ladny-i-wygodny.html?utm_source=onet&amp;utm_medium=click&amp;utm_campaign=redirect">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/YcMktkuTURBXy81YmM0NDMxMS1jNDJiLTQ5YmQtOGFiZS0xYjI4MDE3NjAxYjkuanBlZ5OVA0UAzQQmzQLEkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/YcMktkuTURBXy81YmM0NDMxMS1jNDJiLTQ5YmQtOGFiZS0xYjI4MDE3NjAxYjkuanBlZ5OVA0UAzQQmzQLEkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Wygodny fotel, puf czy siedzisko to praktyczny mebel. Pasuje do każdej aranżacji</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        



























<a data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="dpn" data-gtm="styl_zycia_10" href="https://zdrowie.radiozet.pl/Uroda/Zeby/Nic-dentystyczna-moze-szkodzic!-Sprawdz-przed-ktorymi-produktami-ostrzegaja-naukowcy?utm_source=onet&amp;utm_medium=click&amp;utm_campaign=coop">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/PpHktkuTURBXy83MGNkNzRjZi04OGY0LTQ2MTYtYTg5Ni04ZjU4YzBlNDI0MDkuanBlZ5OVAwAAzQMMzQIIkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/PpHktkuTURBXy83MGNkNzRjZi04OGY0LTQ2MTYtYTg5Ni04ZjU4YzBlNDI0MDkuanBlZ5OVAwAAzQMMzQIIkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Nić dentystyczna może szkodzić! Sprawdź, przed czym ostrzegają naukowcy </span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natstylzycia", "onet-ad-flat-natstylzycia-pos3", {"pos":"3"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                        
                                        



























<a data-uuid-ui="e45732bc-f707-471d-9f63-6db7eafd34d1" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="mcnqwnbq" data-gtm="styl_zycia_11" href="https://gotowanie.onet.pl/przepisy/muffinki-z-jablkiem-i-cynamonem-przepis/3t86jkb">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/YAPktkuTURBXy8zMzdiNWM0Yy01MWIxLTQxZTUtOTQ1Ni01NDU1ZThkZThkZDcuanBlZ5OVAwANzQHgzQFAkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/YAPktkuTURBXy8zMzdiNWM0Yy01MWIxLTQxZTUtOTQ1Ni01NDU1ZThkZThkZDcuanBlZ5OVAwANzQHgzQFAkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Muffinki z jabłkiem i cynamonem - rewelacyjny przepis</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natleft3", "onet-ad-flat-natleft3");  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                    </div>
                                
                            
                        
                    
                </div>
            </section>
        </article>
        
    



                
                    


    <div data-section="ad-flat-boxleft4" id="gng" class="nvfwzzpbkbfk" data-slot-name="flat-boxleft4" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxleft4","onet-ad-flat-boxleft4").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    

        
        
        
        <article data-section="chpolecane-plotki">
            
            
            <section class="mosaic sectionType3">

                    <div class="boxHeader">

    <h1>
        <a href="http://plejada.onet.pl/">
        
            Życie gwiazd
         
        </a>
    </h1>

</div>




                <div class="items">
                    
                        
                        
                         
                            

                            <div class="sectionLine sectionLineMax">
                            
                                
                                


























    


<a data-uuid-ui="c2f23f1c-e3a9-4470-9bd0-811fe5713698" data-params-element-type="t_3_2" class="itemBox itemBox_3_2 s1_260 
     
    " data-gtm="zycie_gwiazd_1" href="https://plejada.pl/newsy/teresa-werner-ile-ma-lat-wiek-gwiazdy-to-tajemnica-jak-u-rozenek/2gcj8qw">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/kfEktkpTURBXy8zYmE5MGE1OTY1N2U0NDhkNmFlYzY2NmQwM2VlNjg4NS5qcGeTlQMBN80DHs0BwpMFzQI8zQEElQfZMi9wdWxzY21zL01EQV8vMjc0YzFkNjQ2NzA4MmMzZTZkZmU5ZDA5ZjRhNmRmNmIucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/kfEktkpTURBXy8zYmE5MGE1OTY1N2U0NDhkNmFlYzY2NmQwM2VlNjg4NS5qcGeTlQMBN80DHs0BwpMFzQI8zQEElQfZMi9wdWxzY21zL01EQV8vMjc0YzFkNjQ2NzA4MmMzZTZkZmU5ZDA5ZjRhNmRmNmIucG5nAMIA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Jest po 60., a urody wciąż może pozazdrościć jej niejedna gwiazda. Kim jest Teresa Werner?</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                            
                                
                                


























    


<a data-uuid-ui="ac0f3307-f574-431d-8727-c3bd20a042b4" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="zycie_gwiazd_2" href="https://kobieta.onet.pl/dziecko/ciazowy-brzuszek-meghan-coraz-wiekszy-zobaczcie-jak-zmienia-sie-ksiezna-odkad/gezkkt6">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/oSPktkqTURBXy9hMmZhNTM5ZDY1MzhjMThkMjM4NDI1ODM4ZDUyYjAxMC5qcGVnk5UDAC7NBQHNAtCTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/oSPktkqTURBXy9hMmZhNTM5ZDY1MzhjMThkMjM4NDI1ODM4ZDUyYjAxMC5qcGVnk5UDAC7NBQHNAtCTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Brzuszek Meghan coraz większy. Zobaczcie, jak księżna zmienia się w ciąży!</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                            
                            </div>
                        
                        
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="46d6d021-28c8-4db6-b048-f5a34d4c29f2" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="zycie_gwiazd_3" href="https://kobieta.onet.pl/moda/stylizacje-gwiazd/krolowa-letizia-w-swietnej-stylizacji-ktora-latwo-powtorzyc-tak-ubrana-zawsze-zrobisz/sz1s8jl">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/Cg_ktkqTURBXy82MDE2YmJjZjljYzVhNGExZTRlY2FmOTBmZGM3NmI1NC5qcGVnk5UDAGXNBTHNAuuTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/Cg_ktkqTURBXy82MDE2YmJjZjljYzVhNGExZTRlY2FmOTBmZGM3NmI1NC5qcGVnk5UDAGXNBTHNAuuTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Królowa Letizia w świetnej stylizacji, którą łatwo powtórzyć. Tak ubrana zawsze zrobisz wrażenie!</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="aea05396-5d4c-4fff-ba11-263a0d80a4b6" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="zycie_gwiazd_4" href="https://sport.onet.pl/ofsajd/marina-luczenko-szczesna-pokazala-slodkie-zdjecie-syna-or-instagram/vl4cg6f">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/zBjktkqTURBXy9lZTA0YWMxYzVkOTFkMGEwZDgwMWZkYjM5ZGM2NjE5YS5qcGVnk5UDAHbNBVDNAvyTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/zBjktkqTURBXy9lZTA0YWMxYzVkOTFkMGEwZDgwMWZkYjM5ZGM2NjE5YS5qcGVnk5UDAHbNBVDNAvyTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Marina Łuczenko-Szczęsna pokazała słodkie zdjęcie syna. Ale Liam jest już duży!</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="df6e4846-7d11-4152-babf-e8895a073a0f" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="zycie_gwiazd_5" href="https://plejada.pl/zdjecia-gwiazd/kasia-stankiewicz-z-varius-manx-jak-dzis-wyglada-stare-zdjecia/q2d8fgy">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/24LktkqTURBXy9lZjg3YTI3OGU2MTNmNzJiMzZjYmQyNGQxMzNmODNmYi5qcGVnk5UDAQDNAxrNAb-TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/24LktkqTURBXy9lZjg3YTI3OGU2MTNmNzJiMzZjYmQyNGQxMzNmODNmYi5qcGVnk5UDAQDNAxrNAb-TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Kasia Stankiewicz dziś uchodzi za ikonę stylu. Nie zawsze tak było...</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="afae1afb-715f-4fc7-a9d0-5e8593ed85a0" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="zycie_gwiazd_6" href="https://kultura.onet.pl/muzyka/wiadomosci/sila-marzen-gosia-andrzejewicz-konczy-35-lat/5v2hp1r">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/_mIktkpTURBXy81ZGEyYzBkOTkwMDM3ZmNlMjE1OTllZDJlNzIzZGY3MC5qcGeTlQMOzQL5zQyjzQcbkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/_mIktkpTURBXy81ZGEyYzBkOTkwMDM3ZmNlMjE1OTllZDJlNzIzZGY3MC5qcGeTlQMOzQL5zQyjzQcbkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Gosia Andrzejewicz kończy 35 lat. Sprawdzamy, co u niej słychać.</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        



























<a data-uuid-ui="de12e870-e615-4214-a4ba-604c013c28a2" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="dgckssvcvnj" data-gtm="zycie_gwiazd_7" href="https://sport.onet.pl/ofsajd/zaskakujacy-wpis-kamili-wybranczyk/1xe2ds8">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/wYsktkqTURBXy9hM2I1Y2E4MjhmYzMyN2UzNDgyM2I2Mjg4ODQ3NDMwMi5qcGVnk5UDAEPNAljNAVKTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/wYsktkqTURBXy9hM2I1Y2E4MjhmYzMyN2UzNDgyM2I2Mjg4ODQ3NDMwMi5qcGVnk5UDAEPNAljNAVKTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Zaskakujący wpis Kamili Wybrańczyk</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natzyciegwiazd", "onet-ad-flat-natzyciegwiazd-pos1", {"pos":"1"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                        
                                        


























    


<a data-uuid-ui="9e242104-462a-4655-bbda-547704b55711" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="zycie_gwiazd_8" href="https://kultura.onet.pl/film/wiadomosci/zjawiskowa-charlize-theron-blyszczy-na-czerwonym-dywanie/024gpmt">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/o3VktkpTURBXy85MjEzZGM2N2IyZWU1ZDJjYjNmN2ViMjA2OTc3ZjI4NC5qcGeTlQP_zN_NCozNBe-TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/o3VktkpTURBXy85MjEzZGM2N2IyZWU1ZDJjYjNmN2ViMjA2OTc3ZjI4NC5qcGeTlQP_zN_NCozNBe-TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Zjawiskowa Charlize Theron błyszczy na czerwonym dywanie</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="10b968da-dace-4b4e-80dd-030713fcf776" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="zycie_gwiazd_9" href="https://plejada.pl/newsy/katarzyna-zielinska-premiera-spektaklu-nowy-jork-prohibicja-zdjecia/ecsp1k4">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/4bWktkpTURBXy80ODVkMjYwNTg5MmNjMTBiZGU5OGMwMDhmZGNkODI1Mi5qcGeTlQNGAM0DwM0CHJMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/4bWktkpTURBXy80ODVkMjYwNTg5MmNjMTBiZGU5OGMwMDhmZGNkODI1Mi5qcGeTlQNGAM0DwM0CHJMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Katarzyna Zielińska w cekinach na premierze swojego spektaklu. Uwagę skradła inna celebrytka</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="4679e89e-8b29-43d3-a0bc-ae53d6429534" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="zycie_gwiazd_10" href="https://sport.onet.pl/ofsajd/diletta-leotta-wloska-prezenterka-sportowa-fani-futbolu-ja-uwielbiaja/g82gs7q">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/qlYktkpTURBXy85MTQxNTM4MjJlYWU1ZDFlOGZjMjhkYTEwMmQwMTQxYi5qcGeTlQNiZs0Dns0CCZMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/qlYktkpTURBXy85MTQxNTM4MjJlYWU1ZDFlOGZjMjhkYTEwMmQwMTQxYi5qcGeTlQNiZs0Dns0CCZMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Jest piękna i zna się na piłce, kibice ją uwielbiają</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="6ef0c056-45f8-419f-9a43-f5073833cbe8" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="zycie_gwiazd_11" href="https://plejada.pl/zdjecia-gwiazd/critics-choice-awards-2019-julia-roberts-w-spodniach-zamiast-w-sukience/n9jdf70">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/RLdktkpTURBXy8wMTJhMzVkOTU4MmM0Nzg2MWVkZGFhZTVlZTE4NDI4Yi5qcGeTlQPNARnM6M0GS80DipMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/RLdktkpTURBXy8wMTJhMzVkOTU4MmM0Nzg2MWVkZGFhZTVlZTE4NDI4Yi5qcGeTlQPNARnM6M0GS80DipMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Julia Roberts znów przyszła w spodniach na wielką galę. Wyszło gorzej niż na Złotych Globach?</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                        
                    
                </div>
            </section>
        </article>
        
    



                
                    


    

        
        
        
        <article data-section="chpolecane-vod">
            
            
            <section class="mosaic sectionType3">

                    <div class="boxHeader">

    <h1>
        <a href="https://vod.pl/">
        
            VOD.PL
         
        </a>
    </h1>

</div>



<div class="secLinkWrp">

    
        <span><a href="https://vod.pl/najnowsze-w-vodpl/zimna-wojna-caly-film-online/2excdjk">Zimna wojna</a></span>
    

    
        <span><a href="https://vod.pl/filmy/mcqueen-caly-film-online/nhytg8b">McQueen</a></span>
    

    
        <span><a href="https://vod.pl/filmy-za-darmo">Filmy za darmo</a></span>
    

    
        <span><a href="https://vod.pl/filmy">Filmy</a></span>
    

</div>


                <div class="items">
                    
                        
                        
                         
                            

                            <div class="sectionLine sectionLineMax">
                            
                                
                                


























    


<a data-uuid-ui="dc7cdb79-230e-4869-aac6-df7793838211" data-params-element-type="t_3_2" class="itemBox itemBox_3_2 s1_260 
     
    " data-gtm="vod_1" href="https://vod.pl/filmy/zakochany-goethe/3fdq7k0">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/K1fktkpTURBXy8zMTcwNmRkNjY2NWQzNWQ1MWJlYTFlYjM5ZjhmZTllMy5wbmeTlQMAAM0D8s0CN5MFzQI8zQEElQfZMi9wdWxzY21zL01EQV8vMjc0YzFkNjQ2NzA4MmMzZTZkZmU5ZDA5ZjRhNmRmNmIucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/K1fktkpTURBXy8zMTcwNmRkNjY2NWQzNWQ1MWJlYTFlYjM5ZjhmZTllMy5wbmeTlQMAAM0D8s0CN5MFzQI8zQEElQfZMi9wdWxzY21zL01EQV8vMjc0YzFkNjQ2NzA4MmMzZTZkZmU5ZDA5ZjRhNmRmNmIucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Goethe stworzył postać Wertera na podstawie własnej historii? Zobacz za darmo</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                            
                                
                                



























<a data-uuid-ui="1c471fcb-db43-54cc-b742-f5b8164d7df8" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="nnv" data-gtm="vod_2" href="https://vod.pl/programy-tv/lista-fokusa-gadzety-ktore-powinien-miec-kazdy-facet/vmjztpr">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/SzWktkpTURBXy9mYjY2MjUxZmJkYTQ1YzZlNGZmZmY5MzFjY2JjMDk5Yy5qcGeTlQPMksymzQLWzQGXkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/SzWktkpTURBXy9mYjY2MjUxZmJkYTQ1YzZlNGZmZmY5MzFjY2JjMDk5Yy5qcGeTlQPMksymzQLWzQGXkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Gadżety, które powinien mieć każdy facet</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natvod", "onet-ad-flat-natvod-pos1", {"pos":"1"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                            
                            </div>
                        
                        
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="507e169a-0018-4120-a019-5d4dc801ab7f" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="vod_3" href="https://vod.pl/programy-tv/gwiazdy-kabaretu/gt5vznb">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/TNpktkpTURBXy80NDRmODRlYzQ3Mjg2ZmQzYzA3MzU0ODMwZTFjNWQ4OS5qcGeTlQMEAM0BZczBkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/TNpktkpTURBXy80NDRmODRlYzQ3Mjg2ZmQzYzA3MzU0ODMwZTFjNWQ4OS5qcGeTlQMEAM0BZczBkwXNARTMm5UH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Nowy skecz kabaretu rozłożył publiczność na łopatki. Widzowie nie mogli przestać się śmiać</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        



























<a data-uuid-ui="997e531b-f5d8-4e32-bc85-febd2430a642" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="qhpxvxzjw" data-gtm="vod_4" href="https://vod.pl/programy-tv/zielona-konewka/cqdl938">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/A9fktkqTURBXy80ZDgxNWIyZTZlYmMyMjM3NzVjYjhiZGRhZDNlZmM4OC5qcGVnk5UDAGvNA-bNAjCTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/A9fktkqTURBXy80ZDgxNWIyZTZlYmMyMjM3NzVjYjhiZGRhZDNlZmM4OC5qcGVnk5UDAGvNA-bNAjCTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Jak odpowiednio zadbać o kwiaty w domu?</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natvod", "onet-ad-flat-natvod-pos:2", {"pos":"2"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                                    
                                        
                                        


























    


<a data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="vod_5" href="http://vod.pl/playerpl-promocja/programy-online/wracajcie-skad-przyszliscie-odcinki,15858/odcinek-3,S01E03,124392">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/D_GktkpTURBXy8xNjQxMjg2NTVlNmE1Y2JmNzkyNDk5ZDMwZDQ0Y2E4Yi5qcGeTlQMAAM0C380BiZMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/D_GktkpTURBXy8xNjQxMjg2NTVlNmE1Y2JmNzkyNDk5ZDMwZDQ0Y2E4Yi5qcGeTlQMAAM0C380BiZMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Polacy musieli nocować w obozie dla uchodźców. "Jedna godzina zapomnienia tutaj grozi śmiercią"</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="e25306b3-4fac-46d4-8e3e-9e757f138565" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="vod_6" href="https://vod.pl/programy-tv/dlugowiecznosc-zyj-dlugo-i-pomyslnie/cwzj8t6">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/8GEktkqTURBXy8wN2ZmMzk5ZjkxZWZiMTZhZTMxZTU4NjQ4ODNkZWJkZS5qcGVnk5UDABXNA-jNAjGTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/8GEktkqTURBXy8wN2ZmMzk5ZjkxZWZiMTZhZTMxZTU4NjQ4ODNkZWJkZS5qcGVnk5UDABXNA-jNAjGTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Chciałbyś żyć wiecznie? Zobacz, co powoduje, że człowiek żyje coraz dłużej</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="b95d8f8b-3795-4cde-9ee9-bd3fccaceb90" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="vod_7" href="https://vod.pl/programy-tv/dzieciaki-rozwalaja-system/rvxwxrs">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/ojCktkqTURBXy8zMGZhYTJjMTZkZDdhODFkYjBkN2U1NmY4MmJjYWI1NS5qcGVnk5UDFQDNBzrNBA-TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/ojCktkqTURBXy8zMGZhYTJjMTZkZDdhODFkYjBkN2U1NmY4MmJjYWI1NS5qcGVnk5UDFQDNBzrNBA-TBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Zagrał swoim córkom na gitarze. Ich reakcja była przeurocza</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="c6c6217f-ce96-4d74-b588-9bdfffdebec7" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="vod_8" href="https://vod.pl/programy-tv/na-drogach-online-za-darmo/lfc0119">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/_1YktkqTURBXy9lMDRjMDQzYWE1MDAwMWM1MDIyNjZmNjA5MWQ4YjQ1Ny5qcGVnk5UDCADNBwLNA_CTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/_1YktkqTURBXy9lMDRjMDQzYWE1MDAwMWM1MDIyNjZmNjA5MWQ4YjQ1Ny5qcGVnk5UDCADNBwLNA_CTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Policja została wezwana do prostej stłuczki. Okazało się, że jeden z kierowców coś ukrywał. Zobacz</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                        
                    
                </div>
            </section>
        </article>
        
    



                
                    


    <div data-section="ad-flat-boxleft5" id="cjcvzjwbhz" class="nvfwzzpbkbfk" data-slot-name="flat-boxleft5" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxleft5","onet-ad-flat-boxleft5").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    

        
        
        
        <article data-section="chpolecane-naluzie">
            
            
            <section class="mosaic sectionType3">

                    <div class="boxHeader">

    <h1>
     
        <span>Oferty i inspiracje </span>
    
    </h1>

</div>



<div class="secLinkWrp">

    
        <span><a href="https://www.skapiec.pl/">Sekcja we współpracy ze Skąpiec.pl</a></span>
    

</div>


                <div class="items">
                    
                        
                        
                         
                            

                            <div class="sectionLine sectionLineMax">
                            
                                
                                


























    


<a data-uuid-ui="160f9141-3c08-4882-abcc-874f82f6f5b7" data-params-element-type="t_3_2" class="itemBox itemBox_3_2 s1_260 
     
    " data-gtm="horyzonty_1" href="https://sport.onet.pl/spedz-ferie-na-nartach-przeglad-popularnych-modeli/5ky64rj">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/1FJktkpTURBXy8zYzVkYjY2ZjEzNzkzNWE1N2Y3NGI5YjczOGY1ZTVkYS5qcGeTlQMAAM0D6M0CmpMFzQI8zQEElQfZMi9wdWxzY21zL01EQV8vMjc0YzFkNjQ2NzA4MmMzZTZkZmU5ZDA5ZjRhNmRmNmIucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/1FJktkpTURBXy8zYzVkYjY2ZjEzNzkzNWE1N2Y3NGI5YjczOGY1ZTVkYS5qcGeTlQMAAM0D6M0CmpMFzQI8zQEElQfZMi9wdWxzY21zL01EQV8vMjc0YzFkNjQ2NzA4MmMzZTZkZmU5ZDA5ZjRhNmRmNmIucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Spędź ferie na nartach. Przegląd popularnych modeli</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                            
                                
                                



























<a data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" id="hmkkb" data-gtm="horyzonty_2" href="http://ladnydom.pl/inspiracje/7,153170,23230916,nowoczesne-fotele-bujane.html?utm_source=onet&amp;utm_medium=click&amp;utm_campaign=redirect">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/vD-ktkpTURBXy82MzFmODI5NGZlYWIzYThjMDYyNjc1YjZhNjdkNzI3MS5qcGeTlQPNAYTNAQ_NAVHMtJMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/vD-ktkpTURBXy82MzFmODI5NGZlYWIzYThjMDYyNjc1YjZhNjdkNzI3MS5qcGeTlQPNAYTNAQ_NAVHMtJMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Pewnie takie fotele kojarzą ci się z babcią. Zobacz, jak się zmieniły od tego czasu!</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>

    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natright", "onet-ad-flat-natright-pos2", {"pos":"2"});  slot.imgTransform("resizecropauto", { width: 276, height: 155});  });</script>



                            
                            </div>
                        
                        
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="cdf764a0-dd3e-42a0-b19b-09059bafd8e7" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="horyzonty_3" href="https://podroze.onet.pl/fuerteventura-plaza-wysp-kanaryjskich/xef4wxr">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/P6FktkpTURBXy83NjRmOGQzNzMxMmViN2UwMjhmYzM4MzY1MDczNjE1Yy5qcGeTlQMAAM0D6M0CMpMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/P6FktkpTURBXy83NjRmOGQzNzMxMmViN2UwMjhmYzM4MzY1MDczNjE1Yy5qcGeTlQMAAM0D6M0CMpMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Fuerteventura – plaża Wysp Kanaryjskich. Prawdziwy raj dla turystów</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="horyzonty_4" href="http://www.plotek.pl/plotek/7,154484,24240421,plaszcze-w-stylu-anny-lewandowskiej.html?utm_source=onet&amp;utm_medium=click&amp;utm_campaign=redirect">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/xvxktkuTURBXy9lMTNmN2JlZi01MjU2LTRjMzgtOGNjOS1jNTJjYTAzMjM4NjEuanBlZ5OVA80Bsg_NAdDM-JMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/xvxktkuTURBXy9lMTNmN2JlZi01MjU2LTRjMzgtOGNjOS1jNTJjYTAzMjM4NjEuanBlZ5OVA80Bsg_NAdDM-JMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Płaszcze w stylu Anny Lewandowskiej. Futerkowy to hit tego sezonu</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="2ca55119-91b6-4d64-ad80-15ec5e9e4bf5" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="horyzonty_5" href="https://noizz.pl/fashion/modne-dodatki-do-garderoby-przeceny-i-promocje/j0k1k0l">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/xBGktkpTURBXy9jMGM0NDYxODBlOWRmMzZjNTlkNDY2Y2ViNWRjNzA5Ni5qcGeTlQMAzJTNA8DNAhyTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/xBGktkpTURBXy9jMGM0NDYxODBlOWRmMzZjNTlkNDY2Y2ViNWRjNzA5Ni5qcGeTlQMAzJTNA8DNAhyTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Wzbogać swoje stylizacje o modne dodatki. Zobacz, co warto mieć w szafie!</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="0daf57fe-7a0c-484d-b271-260727658ee7" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="horyzonty_6" href="https://kobieta.onet.pl/uroda/kosmetyki/kosmetyki-z-siarka-poradza-sobie-z-tradzikiem-lupiezem-i-nie-tylko/j8nrxt6">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/uOGktkqTURBXy9jY2ZjZGUyZjNjOTdhMGNhMzI2YmIzMWEwMjFiNWVmNi5qcGVnk5UDDQDNAqDNAXqTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/uOGktkqTURBXy9jY2ZjZGUyZjNjOTdhMGNhMzI2YmIzMWEwMjFiNWVmNi5qcGVnk5UDDQDNAqDNAXqTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Kosmetyki z siarką poradzą sobie z trądzikiem, łupieżem i nie tylko</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="b9f2464c-ef8f-5b9f-979c-27cbcdcba2d4" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="horyzonty_7" href="https://www.fakt.pl/pieniadze/zakupy/walentynkowe-prezenty-do-100-zl-walentynki-14-lutego/v8r2532?utm_source=Fakt&amp;utm_medium=promo_oferty&amp;utm_campaign=SG">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/SglktkqTURBXy9lYmIxZTU5NjdkZWJlZDZlYjE2MjM4ZjRkODk4NDNkMS5qcGVnk5UDAADNA-jNApqTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/SglktkqTURBXy9lYmIxZTU5NjdkZWJlZDZlYjE2MjM4ZjRkODk4NDNkMS5qcGVnk5UDAADNA-jNApqTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Tanie i pomysłowe drobiazgi - w ten sposób zachwycisz na walentynki</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="b2e2b485-1b94-41ed-a14e-099d5702305b" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="horyzonty_8" href="https://www.forbes.pl/life/ekspresy-przelewowe-ktory-wybrac/rg3gzks?utm_source=Forbes&amp;utm_medium=promo_oferty&amp;utm_campaign=SG">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/adDktkpTURBXy85NjAxNGZjOTgzNTM3N2NhZWZjNWI0ODk3MThhZjUzZS5qcGeTlQMAzJvNA-jNAjOTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/adDktkpTURBXy85NjAxNGZjOTgzNTM3N2NhZWZjNWI0ODk3MThhZjUzZS5qcGeTlQMAzJvNA-jNAjOTBc0BFMyblQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Cenisz tradycyjną czarną kawę? Spraw sobie ekspres przelewowy - to tańsze niż myślisz</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                                
                                     <div class="sectionLine">
                                    
                                        
                                        


























    


<a data-uuid-ui="fded6073-fa62-4530-9019-24371209160e" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="horyzonty_9" href="https://technologie.onet.pl/poradniki-zakupowe/ranking-najpopularniejszych-laptopow-styczen-2019/yd40wwz?utm_source=Technologie&amp;utm_medium=promo_oferty&amp;utm_campaign=SG">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/siaktkpTURBXy83NjIxNTc0ZjJkNzRkMzlmMjM5NjVmMWE5YjU4MzdkOS5qcGeTlQNcPc0DMc0BzZMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/siaktkpTURBXy83NjIxNTc0ZjJkNzRkMzlmMjM5NjVmMWE5YjU4MzdkOS5qcGeTlQNcPc0DMc0BzZMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Szukasz laptopa? Zobacz wielki ranking komputerów dla każdego</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="ec17b2f7-8772-5f4b-b095-176d0b8d2131" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155" data-run-module="local/main.renderBoxDataAlternate" data-vtf-uuid="63ccca00-6c34-41d4-b010-2e857d7e7fbe" data-vtf-boxver="test" data-vtf-mid="2529e4b5cdbd832694f5ad583cc0f45c" data-gtm="horyzonty_10" href="https://www.fakt.pl/pieniadze/zakupy/najtansze-drukarki-wielofunkcyjne-jaka-drukarke-kupic/bt6pw8c?utm_source=Fakt&amp;utm_medium=promo_oferty&amp;utm_campaign=SG" data-run-module-isrun="1" data-alternate-x="||t::0|Zobacz ranking najtańszych drukarek">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/Fe7ktkpTURBXy9kNjFkZjZmNjRkMDc2NThmN2RmNTBhYzYxZDBkYzc1MS5qcGeTlQMAeM0D6M0CGJMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/Fe7ktkpTURBXy9kNjFkZjZmNjRkMDc2NThmN2RmNTBhYzYxZDBkYzc1MS5qcGeTlQMAeM0D6M0CGJMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Zobacz ranking najtańszych drukarek</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                        
                                        


























    


<a data-uuid-ui="5208c84c-b719-5e59-a541-dbbccc961588" data-params-element-type="t_3_1" class="itemBox itemBox_3_1 s1_155 
     
    " data-gtm="horyzonty_11" href="https://www.ofeminin.pl/uroda/fryzury/8-naturalnych-sposobow-zeby-nawilzyc-wlosy-wszystkie-tanie-latwe-i-skuteczne/mhhpk5e">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/K2dktkqTURBXy9lMWI5ZmViYmUxNDk3N2I0Zjk1YWZiY2M2OWRmNmQyYy5qcGVnk5UDAM0B9s0h8M0TGJMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/K2dktkqTURBXy9lMWI5ZmViYmUxNDk3N2I0Zjk1YWZiY2M2OWRmNmQyYy5qcGVnk5UDAM0B9s0h8M0TGJMFzQEUzJuVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Osiem naturalnych sposobów, żeby nawilżyć włosy: tanie, łatwe i skuteczne</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                                    
                                    </div>
                                
                            
                        
                    
                </div>
            </section>
        </article>
        
    



                
            </div>
            

            
            <div class="container-content-right sideBar sideBar2">
                
                    


    <div data-section="ad-flat-boxright3" id="vccktpzwd" class="nvfwzzpbkbfk" data-slot-name="flat-boxright3" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxright3","onet-ad-flat-boxright3").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    
        <div class="sideBarItem localNews" data-run-module="local/main.renderBoxLocalNews" data-scroll="warszawa" data-run-module-isrun="1">
            <article class="newsBox">
                <section data-section="localnews">
                    
                        
    

    
<div class="boxHeader">
    <h1>
        
            <a class="titleHeaderLink" href="http://warszawa.onet.pl/">
                
                    Warszawa
                
            </a>
        

        
            <a href="#regionalne" class="arrowDown"></a>
        
    </h1>

    
        <div class="changeCity localNews">
            <div class="selectedCity">
                <span class="showList">rozwiń</span>
            </div>
            <div class="cityList">

                <svg class="clCloseButton"><use xlink:href="#menuCloseIcon"></use></svg>

                <ul class="item-1">

                    
						
							<li>
                                <a href="#region_bialystok" data-original="/getDesktopFeed?codename=bialystok" data-name="bialystok">
									Białystok
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_kielce" data-original="/getDesktopFeed?codename=kielce" data-name="kielce">
									Kielce
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_krakow" data-original="/getDesktopFeed?codename=krakow" data-name="krakow">
									Kraków
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_kujawskopomorskie" data-original="/getDesktopFeed?codename=kujawskopomorskie" data-name="kujawskopomorskie">
									Kujawsko-Pomorskie
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_lublin" data-original="/getDesktopFeed?codename=lublin" data-name="lublin">
									Lublin
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_lubuskie" data-original="/getDesktopFeed?codename=lubuskie" data-name="lubuskie">
									Lubuskie
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_lodz" data-original="/getDesktopFeed?codename=lodz" data-name="lodz">
									Łódź
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_olsztyn" data-original="/getDesktopFeed?codename=olsztyn" data-name="olsztyn">
									Olsztyn
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_opole" data-original="/getDesktopFeed?codename=opole" data-name="opole">
									Opole
								</a>
							</li>
                            
                            </ul><ul class="item-2">
                            
						
					
						
							<li>
                                <a href="#region_poznan" data-original="/getDesktopFeed?codename=poznan" data-name="poznan">
									Poznań
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_rzeszow" data-original="/getDesktopFeed?codename=rzeszow" data-name="rzeszow">
									Rzeszów
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_szczecin" data-original="/getDesktopFeed?codename=szczecin" data-name="szczecin">
									Szczecin
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_slask" data-original="/getDesktopFeed?codename=slask" data-name="slask">
									Śląsk
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_trojmiasto" data-original="/getDesktopFeed?codename=trojmiasto" data-name="trojmiasto">
									Trójmiasto
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_warszawa" data-original="/getDesktopFeed?codename=warszawa" data-name="warszawa">
									Warszawa
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_wroclaw" data-original="/getDesktopFeed?codename=wroclaw" data-name="wroclaw">
									Wrocław
								</a>
							</li>
                            
						
					
						
							<li>
                                <a href="#region_wbi" data-original="/getDesktopFeed?codename=wbi" data-name="wbi">
									Wielka Brytania i Irlandia
								</a>
							</li>
                            
						
					
                </ul>
            </div>
        </div>
    
</div>

    
    
    

    <div class="boxContent">
        
        <ul>
            
                

                    
                    
                    

                    

                    <li class="item-1 bigItem">

    <a href="https://warszawa.onet.pl/pawel-adamowicz-nie-zyje-w-calej-polsce-zbieraja-sie-mieszkancy/n65pqzq" data-uuid-ui="cda4404c-d44c-4b0c-9ea0-854a3abc0b21" data-gtm="local_1">

        
            <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/lDuktkqTURBXy8wNjViYzYxNTg4ODg1MTc4YWExYjY2ZmMzMDk5ODdhYS5qcGVnkpUDAMz4zQ-AzQi4kwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/lDuktkqTURBXy8wNjViYzYxNTg4ODg1MTc4YWExYjY2ZmMzMDk5ODdhYS5qcGVnkpUDAMz4zQ-AzQi4kwVfOw" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconSmall"></use></svg></span>
        

        

        

            

            <span class="title">

                
                    Mieszkańcy Polski pożegnali Pawła Adamowicza
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-2">

    <a href="https://wiadomosci.onet.pl/kraj/27-final-wielkiej-orkiestry-swiatecznej-pomocy/tx3frnc" data-uuid-ui="d9525663-0266-491b-8d47-958799855b12" data-gtm="local_2">

        

        

        

            
                
                    <span class="newsSpec">NA ŻYWO</span>
                
            

            <span class="title">

                
                    Zmarł prezydent Gdańska Paweł Adamowicz
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-3">

    <a href="https://warszawa.onet.pl/zaliwie-piegawki-43-letnia-kajakarka-utonela-w-liwcu/m0zz1gb" data-uuid-ui="8bd43f62-1de2-49dd-9024-e9098adce1dd" data-gtm="local_3">

        

        

        

            

            <span class="title">

                
                    43-letnia kajakarka utonęła w Liwcu
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-4">

    <a href="https://warszawa.onet.pl/zatrzymano-72-latka-ktory-grozil-prezydentowi-dudzie/ffxfl57" data-uuid-ui="92630cb1-ee1d-40fa-a26f-1dbacf70bfac" data-gtm="local_4">

        

        

        

            

            <span class="title">

                
                    Zadzwonił na 112 i groził, że zabije Andrzeja Dudę
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-5">

    <a href="https://warszawa.onet.pl/rafal-trzaskowski-zlozyl-kondolencje-bliskim-pawla-adamowicza/bb761mk" data-uuid-ui="4650e549-3c77-40d7-8c6e-c5d606cb36f1" data-gtm="local_5">

        

        

        

            

            <span class="title">

                
                    Trzaskowski: jest tylko ogromny smutek i zaduma
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-6">

    <a href="https://warszawa.onet.pl/warszawa-trzydniowa-zaloba-po-smierci-pawla-adamowicza/3vw8kx4" data-uuid-ui="24b4fc6d-7ebb-415f-b1b0-d1857666397b" data-gtm="local_6">

        

        

        

            

            <span class="title">

                
                    Trzydniowa żałoba po śmierci Pawła Adamowicza
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-7 sponsored2">

    <a href="https://www.zumi.pl/bramy+warszawa,namapie.html" data-gtm="local_7">

        

        
			
				
			
        

        

            

            <span class="title trimNewsTitle">

                
                    Dobre bramy i drzwi - sprawdź gdzie kupić
                

                
                    <span class="newsAdd">Zumi.pl</span>
                

                </span>

        

        
            <div class="authorContainer">
                
                    
                
            </div>
        
    </a>
    
</li>

                    
                        
                    
                
            
        </ul>
        
    </div>

                    
                </section>
                <section data-section="localnews2">
                    
                        
    


                    
                    
                        
    
    
    <ul class="moreNews">
        
            
                <li class="item-1">
                <span>Więcej:</span>
                <ul>
                
                <li><a href="https://pogoda.onet.pl/prognoza-pogody/warszawa-357732">Pogoda na Mazowszu</a></li>
                
                <li class="item-last"><a href="https://warszawa.onet.pl/kod-pocztowy-warszawa-lista-kodow-pocztowych-artykul/dcwq8lj">Kody pocztowe w Warszawie</a></li>
                
                </ul>
                </li>
            
        
            
                <li class="item-2">
                <span>Gorące:</span>
                <ul>
                
                <li class="item-last"><a href="http://ofirmie.onet.pl/aktualne-oferty-pracy">Oferty pracy w Onecie. Dołącz do nas! </a></li>
                
                </ul>
                </li>
            
        
    </ul>
    

                    
                </section>
            </article>
        <div style="display: none;"></div></div>
    



                
                    


    <div data-section="ad-flat-boxright4" id="nhqpgmhxj" class="nvfwzzpbkbfk" data-slot-name="flat-boxright4" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxright4","onet-ad-flat-boxright4").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    
        <div class="sideBarItem" data-scroll="culture">
            <article class="newsBox">
                <section data-section="entertainment">
                    
    

    
<div class="boxHeader">
    <h1>
        
            <a class="titleHeaderLink" href="https://kultura.onet.pl/">
                
                    Film, TV, muzyka, książki
                
            </a>
        

        
    </h1>

    
</div>

    
    
    

    <div class="boxContent">
        
        <ul>
            
                

                    
                    
                    

                    

                    <li class="item-1 bigItem">

    <a href="https://kultura.onet.pl/wiadomosci/swiat-kultury-o-tragicznej-smierci-prezydenta-pawla-adamowicza-jaka-idea-moze-nas/n0q1st1" data-uuid-ui="960b002a-bfc8-4c6d-b2b5-2adda29a34a7" data-gtm="entertainment_1">

        
            <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/675ktkpTURBXy83NDUyNmQ3OGRiZDk0YjhhZDUzMTVhNmVmMjQyZDY2ZC5qcGeSlQMAIM0EAM0CQJMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/675ktkpTURBXy83NDUyNmQ3OGRiZDk0YjhhZDUzMTVhNmVmMjQyZDY2ZC5qcGeSlQMAIM0EAM0CQJMFXzs" /></noscript>
    </span>
</span>
        

        

        

            

            <span class="title">

                
                    Świat kultury o śmierci prezydenta Adamowicza. "To mógł być każdy:  Janda, Stuhr, Owsiak, Pawłowicz"
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-2">

    <a href="https://kultura.onet.pl/wiadomosci/pogrzeb-ireny-dziedzic-legendarna-dziennikarka-telewizji-polskiej-spoczela-na/byzxps6" data-uuid-ui="4253096a-239c-49f3-a70b-bba56c41a2d9" data-gtm="entertainment_2">

        

        

        

            

            <span class="title">

                
                    Pogrzeb Ireny Dziedzic. Legenda polskiej telewizji spoczęła na cmentarzu w Laskach
                

                

                <svg class="itemMediaGallery"><use xlink:href="#photoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-3">

    <a href="https://kultura.onet.pl/ksiazki/ostatni-krok-w-chmurach-mija-85-rocznica-urodzin-marka-hlaski/e6f3nfk" data-uuid-ui="77843069-f8b8-4229-8900-328d7daa6b5c" data-gtm="entertainment_3">

        

        

        

            

            <span class="title">

                
                    Znienawidzony przez cenzurę PRL-u, literacki Dean
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-4">

    <a href="https://kultura.onet.pl/muzyka/wiadomosci/natalia-nykiel-nagrodzona-w-palm-springs-za-teledysk-do-piosenki-luny/v90m0r4" data-uuid-ui="12c47f91-48cd-4700-ac1a-aefbddc00bcc" data-gtm="entertainment_4">

        

        

        

            

            <span class="title">

                
                    Natalia Nykiel nagrodzona w Palm Springs
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-5">

    <a href="https://wiadomosci.onet.pl/swiat/gra-o-tron-sezon-8-data-premiery-w-nowym-zwiastunie/nc1r7dv" data-uuid-ui="430e3138-97fc-40ba-8cb4-47888dbe1c0c" data-gtm="entertainment_5">

        

        

        

            

            <span class="title">

                
                    Jest data premiery ósmego sezonu "Gry o tron"
                

                

                <svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-6">

    <a href="https://kultura.onet.pl/wiadomosci/bogdan-de-barbaro-w-rozmowach-o-przyszlosci-mozna-kochac-ludzi-ktorzy-jeszcze-sie-nie/yl7pp3v" data-uuid-ui="af6a89d9-ce1d-4f5f-96a2-e3ba7662b56f" data-gtm="entertainment_6">

        

        

        

            

            <span class="title">

                
                    "Można kochać ludzi, którzy się nie narodzili"
                

                

                <svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-7">

    <a href="https://kultura.onet.pl/film/wiadomosci/swiatla-wielkiego-miasta-relacja-z-koncertu-pod-pkin-w-warszawie-podczas-27-finalu/3ybex4b" data-uuid-ui="39a86ae4-62ec-46b5-b070-7a7af1c5bf86" data-gtm="entertainment_7">

        

        

        

            

            <span class="title">

                
                    Światła wielkiego miasta. Koncert WOŚP w stolicy
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-8">

    <a href="https://kultura.onet.pl/film/recenzje/detektyw-nic-dwa-razy-sie-nie-zdarza-recenzja/rnpey7s" data-uuid-ui="b626fb55-1ecb-43da-984e-5238b12d100b" data-gtm="entertainment_8">

        

        

        

            

            <span class="title">

                
                    Widzieliśmy nowego "Detektywa" [RECENZJA]
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-9">

    <a href="https://kultura.onet.pl/muzyka/wiadomosci/bohemian-rhapsody-byla-narzeczona-mercuryego-zarobila-40-mln-funtow-dzieki-filmowi/z2mvzge" data-uuid-ui="807fe608-ff0d-4b7f-85d6-5a37c82bbffe" data-gtm="entertainment_9">

        

        

        

            

            <span class="title">

                
                    Była narzeczona Mercury'ego zarobiła 40 mln
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-10">

    <a href="https://programtv.onet.pl/artykuly/tarzan-legenda-tatarak-i-paryz-i-dziewczyna-czyli-program-tv-na-poniedzialek-14/mjs3bsk" data-uuid-ui="0448eeb6-2cdb-4f21-9499-96a0e1c777f7" data-gtm="entertainment_10">

        

        
			
				
			
        

        

            
                
                    <span class="newsSpec">CO W TV?</span>
                
            

            <span class="title">

                
                    "Tarzan: Legenda" i "Tatarak"
                

                

                </span>

        

        
            <div class="authorContainer">
                
                    
                
            </div>
        
    </a>
    
</li>

                    
                        
    
        
            <li class="sponsored hide">
                <span class="nvfwzzpbkbfk kbqvrzkfnmjk" id="qkt" data-add-label="1"></span>
            </li>
        
    

                    
                
            
        </ul>
        
    </div>

                </section>
                <section data-section="entertainment2">
                    
    
    
    <ul class="moreNews">
        
            
                <li class="item-1">
                <span>Więcej:</span>
                <ul>
                
                <li><a href="https://kultura.onet.pl/muzyka">Muzyka</a></li>
                
                <li><a href="https://programtv.onet.pl/">Program TV</a></li>
                
                <li><a href="https://film.onet.pl/kino/">Kino</a></li>
                
                <li><a href="https://kultura.onet.pl/film">Film</a></li>
                
                <li class="item-last"><a href="https://kultura.onet.pl/">Kultura</a></li>
                
                </ul>
                </li>
            
        
    </ul>
    

                </section>
            </article>
        </div>
    



                
                    


    <div data-section="ad-flat-boxright5" id="hkcnxgf" class="nvfwzzpbkbfk" data-slot-name="flat-boxright5" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxright5","onet-ad-flat-boxright5").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    
        <div class="sideBarItem" data-scroll="technologie">
            <article class="newsBox">
                <section data-section="tech">
                    
    

    
<div class="boxHeader">
    <h1>
        
            <span class="titleHeader">
                
                    Technologie i gry
                
            </span>
        

        
    </h1>

    
</div>

    
    
    

    <div class="boxContent">
        
        <ul>
            
                

                    
                    
                    

                    

                    <li class="item-1 bigItem">

    <a href="https://www.komputerswiat.pl/aktualnosci/programy/windows-7-z-koncem-wsparcia-za-rok-microsoft-wierzy-ze-to-nie-tylko-przyspieszy/h8n5flk" data-uuid-ui="765163e2-d84b-4518-af7e-4648d3bd165d" data-gtm="technology_1">

        
            <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/-HtktkpTURBXy9kMDU5ODk1NWMwNDNlZmZkN2JkNTlmYjBhYWU4NGFmZS5qcGeSlQMDAM0E-s0CzZMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/-HtktkpTURBXy9kMDU5ODk1NWMwNDNlZmZkN2JkNTlmYjBhYWU4NGFmZS5qcGeSlQMDAM0E-s0CzZMFXzs" /></noscript>
    </span>
</span>
        

        

        

            

            <span class="title">

                
                    Microsoft oficjalnie: kończymy wsparcie dla starszej wersji systemu Windows
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-2">

    <a href="https://www.komputerswiat.pl/artykuly/redakcyjne/tygrys-na-horyzoncie-chinska-mysl-technologiczna-zaczyna-nas-wyprzedzac/mp8nlz9" data-uuid-ui="e366a617-9ba1-466b-bada-763525e3645d" data-gtm="technology_2">

        

        

        

            

            <span class="title">

                
                    Chiński smartfon lepszy od iPhone'ów? Trwa wojna
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-3">

    <a href="https://www.komputerswiat.pl/aktualnosci/aplikacje/google-pay-dostaje-funkcje-na-ktora-uzytkownicy-czekali-bardzo-dlugo/fm1whj5" data-uuid-ui="308c1ead-ff81-42f4-b3eb-173b251964b4" data-gtm="technology_3">

        

        

        

            

            <span class="title">

                
                    Google Pay nareszcie z wyczekiwaną funkcją
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li id="zjqhfjsw" data-slot-tpl-type="standardItem" class="item-4">

    <a href="https://www.komputerswiat.pl/aktualnosci/smartfony/smartfony-xiaomi-sa-tanie-ale-w-przypadku-serii-mi-ceny-moga-wzrosnac/ttnk1e7" data-uuid-ui="1e053e11-edbb-4faa-8e6d-79b206d52f64" data-gtm="technology_4">

        

        

        

            

            <span class="title">

                
                    Ceny za smartfony Xiaomi niedługo mogą wzrosnąć
                

                

                </span>

        

        
    </a>
    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-nattech", "onet-ad-flat-nattech-pos4", {"pos":"4"});  });</script>
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-5">

    <a href="https://www.komputerswiat.pl/aktualne-wydanie/rosjanie-utracili-kontrole-nad-kosmicznym-radioteleskopem/e8k4b8t" data-uuid-ui="0d4e6a59-dfae-4841-b154-570cc692c90c" data-gtm="technology_5">

        

        

        

            

            <span class="title">

                
                    Ogromna wpadka rosyjskiej agencji kosmicznej
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-6">

    <a href="https://www.komputerswiat.pl/gamezilla/artykuly/gry-rpg-wczoraj-i-dzis-czy-aby-na-pewno-kiedys-bylo-lepiej/c8xr6db" data-uuid-ui="46c3ece9-fd8d-43e0-9c1e-f9818b757470" data-gtm="technology_6">

        

        

        

            

            <span class="title">

                
                    Gry RPG - czy kiedyś faktycznie były lepsze?
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li id="tcv" data-slot-tpl-type="standardItem" class="item-7">

    <a href="https://www.komputerswiat.pl/aktualnosci/sprzet/apple-rozpoczelo-produkcje-bezprzewodowej-ladowarki-airpower/fmhe0wn" data-uuid-ui="f5f66dba-a10e-445c-a387-e520dbaccd80" data-gtm="technology_7">

        

        

        

            

            <span class="title">

                
                    Przełomowy gadżet od Apple w produkcji
                

                

                </span>

        

        
    </a>
    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-nattech", "onet-ad-flat-nattech-pos7", {"pos":"7"});  });</script>
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-8">

    <a href="https://www.komputerswiat.pl/aktualnosci/programy/firefox-69-domyslnie-zablokuje-flash-playera/cbwce9f" data-uuid-ui="32a958f5-b479-4bbf-9cd7-977494cd1257" data-gtm="technology_8">

        

        

        

            

            <span class="title">

                
                    Szykuje się wielka zmiana w Mozilla Firefox
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-9">

    <a href="https://www.komputerswiat.pl/artykuly/redakcyjne/wiemy-kiedy-oppo-trafi-do-polski-czy-bedziemy-miec-do-czynienia-z-nowym-xiaomi/nqm2x6h" data-uuid-ui="ffa4369d-60c0-4c6b-889c-470baab8d49d" data-gtm="technology_9">

        

        

        

            

            <span class="title">

                
                    OPPO oficjalnie wchodzi do Polski. Co zaoferuje?
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-10">

    <a href="https://www.komputerswiat.pl/gamezilla/aktualnosci/cyberpunk-2077-neuromancer-blade-runner-i-ghost-in-the-shell-wsrod-inspiracji-dla/pfsf14e" data-uuid-ui="ace75471-ecf8-4a01-a486-4e0838f9c171" data-gtm="technology_10">

        

        
			
				
			
        

        

            

            <span class="title">

                
                    Twórcy Wiedźmina opowiadają o swojej nowej grze
                

                

                </span>

        

        
            <div class="authorContainer">
                
                    
                
            </div>
        
    </a>
    
</li>

                    
                        
    
        
            <li class="sponsored hide">
                <span class="nvfwzzpbkbfk kbqvrzkfnmjk" id="pjh" data-add-label="1"></span>
            </li>
        
    
        
    
        
    

                    
                
            
        </ul>
        
    </div>

                </section>
                <section data-section="tech2">
                    
    
    
    <ul class="moreNews">
        
            
                <li class="item-1">
                <span>Więcej:</span>
                <ul>
                
                <li><a href="https://technologie.onet.pl/newsletter">Newsletter - zapisz się i bądź na bieżąco ze światem technologii!</a></li>
                
                <li><a href="http://www.komputerswiat.pl/">Komputerswiat.pl</a></li>
                
                <li><a href="http://pclab.pl/">PCLab.pl</a></li>
                
                <li><a href="http://www.komputerswiat.pl/gamezilla">Gamezilla</a></li>
                
                <li class="item-last"><a href="http://verdykt.pl/">Verdykt</a></li>
                
                </ul>
                </li>
            
        
    </ul>
    

                </section>
            </article>
        </div>
    



                
                    


    
        <div class="sideBarItem" data-scroll="moto">
            <article class="newsBox">
                <section data-section="moto">
                    
    

    
<div class="boxHeader">
    <h1>
        
            <a class="titleHeaderLink" href="http://moto.onet.pl/">
                
                    Motoryzacja
                
            </a>
        

        
    </h1>

    
</div>

    
    
    

    <div class="boxContent">
        
        <ul>
            
                

                    
                    
                    

                    

                    <li class="item-1 bigItem">

    <a href="https://www.auto-swiat.pl/wiadomosci/premiery/toyota-gr-supra-to-nie-jest-bmw/1fg60zd" data-uuid-ui="e7e09356-4072-46d6-b91c-a73b65b0307b" data-gtm="moto_1">

        
            <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/rnektkpTURBXy83ZTJmNGExODJkYjA1OGYyM2M0YjhmMjkyNmJkZjQwZS5qcGeSlQMAzQEDzQu5zQaZkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/rnektkpTURBXy83ZTJmNGExODJkYjA1OGYyM2M0YjhmMjkyNmJkZjQwZS5qcGeSlQMAzQEDzQu5zQaZkwVfOw" /></noscript>
    </span>
<svg class="itemMediaGallery"><use xlink:href="#photoIconSmall"></use></svg></span>
        

        

        

            

            <span class="title">

                
                    W końcu jest! Po latach wraca Toyota Supra. Tylko czy nie za bardzo przypomina BMW? Sprawdzamy!
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-2">

    <a href="https://www.auto-swiat.pl/testy/porownania-samochodow/co-wybrac-suv-a-czy-praktycznego-hatchbacka/w8wx6x4" data-uuid-ui="3abbc48b-af45-4c9c-a3fd-cb9951bbcfde" data-gtm="moto_2">

        

        

        

            

            <span class="title">

                
                    Wielki test SUV-ów i hatbacków. Sześć par modeli. Który rodzaj samochody jest lepszy? Sprawdzamy
                

                

                <svg class="itemMediaGallery"><use xlink:href="#photoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li id="mfgfh" data-slot-tpl-type="standardItem" class="item-3">

    <a href="https://www.auto-swiat.pl/uzywane/rankingi-aut-uzywanych/raport-tuv-2019-najlepsze-i-najgorsze-2-i-3-letnie-samochody-kompaktowe/hsl9939" data-uuid-ui="c75d2408-e23a-4a6d-8fa1-46f8bac55969" data-gtm="moto_3">

        

        

        

            

            <span class="title">

                
                    TÜV 2019: najlepsze i najgorsze auta kompaktowe
                

                

                <svg class="itemMediaGallery"><use xlink:href="#photoIconSmall"></use></svg></span>

        

        
    </a>
    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natmoto", "onet-ad-flat-natmoto-pos3", {"pos":"3"});  });</script>
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-4">

    <a href="https://www.auto-swiat.pl/porady/kupno-i-sprzedaz/auto-z-ogloszenia-citroen-c5/t49sb1k" data-uuid-ui="fefefa22-354d-46f9-878d-8c321ec58f30" data-gtm="moto_4">

        

        

        

            

            <span class="title">

                
                    Francuska limuzyna z ogłoszenia. Niby stan idealny, ale wolimy to sprawdzić. Z jakim skutkiem?
                

                

                <svg class="itemMediaGallery"><use xlink:href="#photoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-5">

    <a href="https://www.auto-swiat.pl/wiadomosci/aktualnosci/volkswagen-wyprzedzil-fiata-pod-wzgledem-produkcji-aut-w-polsce/rclvlyk" data-uuid-ui="3f487ebb-2ea9-428a-9891-4789ce01923a" data-gtm="moto_5">

        

        

        

            

            <span class="title">

                
                    Fiat zdetronizowany. Nie produkuje u nas najwięcej
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-6">

    <a href="https://www.auto-swiat.pl/testy/testy-nowych-samochodow/land-rover-discovery-20-sd4-hse-rozsadny-wariant-or-test/zhmp7ct" data-uuid-ui="29439033-6ac1-411f-9558-aeea05439bee" data-gtm="moto_6">

        

        

        

            

            <span class="title">

                
                    Rozsądny wariant SUV-a. Ale nie najlepszy| TEST
                

                

                <svg class="itemMediaGallery"><use xlink:href="#photoIconSmall"></use></svg></span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-7">

    <a href="https://www.auto-swiat.pl/porady/eksploatacja/uniwersalne-maty-masujace-relaks-w-dobrej-cenie/cg9j2jp" data-uuid-ui="665f82b8-1b4d-45ec-bd40-1b1dfcfd69c5" data-gtm="moto_7">

        

        

        

            

            <span class="title">

                
                    Uniwersalne maty masujące - relaks w dobrej cenie
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li id="hzwxmmprwx" data-slot-tpl-type="standardItem" class="item-8">

    <a href="https://www.auto-swiat.pl/testy/testy-nowych-samochodow/volkswagen-amarok-v6-pikap-z-duzym-zapasem-mocy-or-test/nt26l36" data-uuid-ui="c25eb8dc-107a-4bbc-9c41-5bed20bdfa4a" data-gtm="moto_8">

        

        

        

            

            <span class="title">

                
                    Pikap z dużym zapasem mocy. Czy ma sens? | TEST
                

                

                <svg class="itemMediaGallery"><use xlink:href="#photoIconSmall"></use></svg></span>

        

        
    </a>
    <script type="text/javascript">window.onetAds.cmd.push(function (dlApi) {var slot = dlApi.defineSlot("flat-natmoto", "onet-ad-flat-natmoto-pos8", {"pos":"8"});  });</script>
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-9">

    <a href="https://www.auto-swiat.pl/wiadomosci/aktualnosci/czy-numery-rejestracyjne-to-dane-osobowe-jest-kolejny-wyrok-sadu/nft72ck" data-uuid-ui="fdc3a80b-646e-4471-af00-3fc51209dadc" data-gtm="moto_9">

        

        

        

            

            <span class="title">

                
                    Można nie zasłaniać numerów rejestracyjnych na zdjęciach. Według sądu to nie są dane osobowe
                

                

                </span>

        

        
    </a>
    
</li>

                    
                

                    
                    
                    

                    

                    <li class="item-10">

    <a href="https://www.auto-swiat.pl/wiadomosci/aktualnosci/poznan-za-zakazem-odwozenia-dzieci-do-szkoly-samochodem-o-takim-eksperymencie-mysli/sk1v8c7" data-uuid-ui="643b8432-976b-4384-94ab-88906b5d4224" data-gtm="moto_10">

        

        
			
				
			
        

        

            

            <span class="title">

                
                    Poznań za zakazem odwożenia dzieci do szkoły samochodem. O takim eksperymencie myśli też Kraków
                

                

                </span>

        

        
            <div class="authorContainer">
                
                    
                
            </div>
        
    </a>
    
</li>

                    
                        
    
        
            <li class="sponsored hide">
                <span class="nvfwzzpbkbfk kbqvrzkfnmjk" id="tmwzngpp" data-add-label="1"></span>
            </li>
        
    
        
    
        
    

                    
                
            
        </ul>
        
    </div>

                </section>
                <section data-section="moto2">
                    
    
    
    <ul class="moreNews">
        
            
                <li class="item-1">
                <span>Więcej:</span>
                <ul>
                
                <li><a href="http://www.auto-swiat.pl/co-warto-kupic">Co warto kupić?</a></li>
                
                <li class="item-last"><a href="http://moto.onet.pl/aktualnosci">Aktualności</a></li>
                
                </ul>
                </li>
            
        
            
                <li class="item-2">
                <span>Gorące:</span>
                <ul>
                
                <li class="item-last"><a href="https://moto.onet.pl/testy-nowych-samochodow">Testy aut nowych</a></li>
                
                </ul>
                </li>
            
        
    </ul>
    

                </section>
            </article>
        </div>
    



                
                    


    <div data-section="ad-flat-boxright6" id="sqhrbbjkkfbk" class="nvfwzzpbkbfk" data-slot-name="flat-boxright6" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-boxright6","onet-ad-flat-boxright6").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    
        
            
        

        
            <div class="sideBarItem travelColumn pictorialFeed" data-scroll="podroze">
                <article class="newsBox" data-section="travel">

                
                

                
<div class="boxHeader">
    <h1>
        
            <a class="titleHeaderLink" href="http://podroze.onet.pl/">
                
                    Podróże
                
            </a>
        

        
    </h1>

    
</div>


                <ul class="boxContent boxPopularContent">
                  
                    
  <li class="item-1 bigItem">
    <a href="https://podroze.onet.pl/fuerteventura-plaza-wysp-kanaryjskich/xef4wxr" data-uuid-ui="cdf764a0-dd3e-42a0-b19b-09059bafd8e7" data-gtm="travel_1">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/cF4ktkpTURBXy83NjRmOGQzNzMxMmViN2UwMjhmYzM4MzY1MDczNjE1Yy5qcGeSlQMAAM0D6M0CMpMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/cF4ktkpTURBXy83NjRmOGQzNzMxMmViN2UwMjhmYzM4MzY1MDczNjE1Yy5qcGeSlQMAAM0D6M0CMpMFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Fuerteventura – plaża Wysp Kanaryjskich</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-2 bigItem">
    <a href="https://podroze.onet.pl/narty/najpopularniejsze-regiony-narciarskie/7cl4pqt" data-uuid-ui="99780874-8d0c-42f8-a9c9-1a0a910e2111" data-gtm="travel_2">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/rQaktkpTURBXy8wOGVmNWZkNDRkNzcwNDc4YzEzMWM5ZWE2NjJmYzZiMC5qcGeSlQMAzQGCzQ6KzQgukwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/rQaktkpTURBXy8wOGVmNWZkNDRkNzcwNDc4YzEzMWM5ZWE2NjJmYzZiMC5qcGeSlQMAzQGCzQ6KzQgukwVfOw" /></noscript>
    </span>
</span>

        
            <span class="title">Trydent – Górna Adyga najchętniej odwiedzanym regionem narciarskim</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-3 bigItem">
    <a href="https://podroze.onet.pl/aktualnosci/bieszczadzka-kolejka-lesna-ferie-rozklad-ceny-biletow/8rb0b45" data-uuid-ui="b840e797-b174-46fe-b06a-73f81d4af996" data-gtm="travel_3">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/170ktkqTURBXy9hNzgxNWZlNDcxYmU3YWZhNjU1N2IwZjYwZjFhN2U0Mi5qcGVnkpUDAB_NA-jNAjKTBV87" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/170ktkqTURBXy9hNzgxNWZlNDcxYmU3YWZhNjU1N2IwZjYwZjFhN2U0Mi5qcGVnkpUDAB_NA-jNAjKTBV87" /></noscript>
    </span>
</span>

        
            <span class="title">Bieszczadzka Kolejka Leśna będzie kursować podczas ferii zimowych</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-4 bigItem">
    <a href="https://podroze.onet.pl/aktualnosci/frankfurt-we-wtorek-strajk-na-lotnisku/kw1rgd8" data-uuid-ui="2a7a357d-014c-4063-a28c-226606010c7f" data-gtm="travel_4">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/ZS0ktkpTURBXy84OGI3ZTJkZmUzMjI4MWZlYmEwNGEzZDM4ZTYwNDQ2Yy5qcGeSlQMAY80MgM0HCJMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/ZS0ktkpTURBXy84OGI3ZTJkZmUzMjI4MWZlYmEwNGEzZDM4ZTYwNDQ2Yy5qcGeSlQMAY80MgM0HCJMFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">W wtorek strajk ostrzegawczy na lotnisku we Frankfurcie</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-5 bigItem">
    <a href="https://podroze.onet.pl/polska/malopolskie/tatry-niezwykle-zdjecie-pod-giewontem/rdfg2h3" data-uuid-ui="a7d7333d-6057-4d34-a9d0-1cf6ff83f392" data-gtm="travel_5">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/7EzktkpTURBXy9kMjI2OWYwYzIzNzRmNzQ1MzEwZTQxZTk1ODY2Mzg3ZS5qcGeSlQMAAM0FAM0C0JMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/7EzktkpTURBXy9kMjI2OWYwYzIzNzRmNzQ1MzEwZTQxZTk1ODY2Mzg3ZS5qcGeSlQMAAM0FAM0C0JMFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Zamiast Zakopanego wybrał sylwestra w Tatrach. Przy okazji zrobił niezwykłą fotografię</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-6 bigItem">
    <a href="http://skiraport.onet.pl/kamerylive" data-gtm="travel_6">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/NuCktkpTURBXy9mOGE5N2QwMTBhNWYyN2NiMDQ2YjIyZDkxNzIyNDI5MC5qcGeSlQMXEM0Drc0CE5MFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/NuCktkpTURBXy9mOGE5N2QwMTBhNWYyN2NiMDQ2YjIyZDkxNzIyNDI5MC5qcGeSlQMXEM0Drc0CE5MFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Gdzie pada śnieg? Zobacz kamery na stokach narciarskich!</span>
        
    </a>
    
  </li>

                  
                </ul>

                
    
    
    <ul class="moreNews">
        
            
                <li class="item-1">
                <span>Więcej:</span>
                <ul>
                
                <li><a href="https://podroze.onet.pl/polska">Polska</a></li>
                
                <li><a href="https://podroze.onet.pl/gdzie-na-weekend">Weekend</a></li>
                
                <li><a href="https://podroze.onet.pl/plaze">Plaże</a></li>
                
                <li><a href="https://podroze.onet.pl/gory">Góry</a></li>
                
                <li><a href="https://podroze.onet.pl/narty">Narty</a></li>
                
                <li><a href="https://podroze.onet.pl/abc">Porady</a></li>
                
                <li><a href="https://podroze.onet.pl/co-warto-kupic">Co warto kupić?</a></li>
                
                <li class="item-last"><a href="http://podroze.skapiec.pl/?utm_source=106642&amp;utm_medium=pp&amp;utm_campaign=rezerwuj-SG-podroze#from106642">Rezerwuj Wakacje</a></li>
                
                </ul>
                </li>
            
        
            
                <li class="item-2">
                <span>Gorące:</span>
                <ul>
                
                <li><a href="http://onetontour.pl/">Onet On Tour w Niemczech</a></li>
                
                <li class="item-last"><a href="http://businessontour.pl/">Business On Tour w Kenii</a></li>
                
                </ul>
                </li>
            
        
    </ul>
    


                </article>
            </div>
        
    



                
                    


    
        
            
        

        
            <div class="sideBarItem popularColumn pictorialFeed" data-scroll="noizz">
                <article class="newsBox" data-section="popular">

                
                

                
<div class="boxHeader">
    <h1>
        
            <span class="titleHeader">
                
                    Noizz
                
            </span>
        

        
    </h1>

    
</div>


                <ul class="boxContent boxPopularContent">
                  
                    
  <li class="item-1 bigItem">
    <a href="https://noizz.pl/spoleczenstwo/pawel-adamowicz-nie-zyje-marsze-milczenia-w-calej-polsce-lista-miast/zbv8jv5" data-uuid-ui="9a5993f3-d284-499b-852f-6b11577ac15d" data-gtm="noizz_1">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/bVSktkpTURBXy9jMGQ3YzI0OGE0MTkyNWFkZjY2ZGY2NjIwYzJjNWI3NS5qcGeSlQMAzKDNE-fNCzGTBV87" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/bVSktkpTURBXy9jMGQ3YzI0OGE0MTkyNWFkZjY2ZGY2NjIwYzJjNWI3NS5qcGeSlQMAzKDNE-fNCzGTBV87" /></noscript>
    </span>
</span>

        
            <span class="title">Paweł Adamowicz nie żyje. Wyjdźmy na ulice, by wspólnie pomilczeć</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-2 bigItem">
    <a href="https://noizz.pl/spoleczenstwo/jurek-owsiak-rezygnuje-z-funkcji-prezesa-wosp/kzplg47" data-uuid-ui="59a00484-50bd-4a85-99af-128f54df152c" data-gtm="noizz_2">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/uvdktkpTURBXy9mNDdkODg0YWQ5YTYxNjk0OTRmZjUwMmQ0Nzc3ZDQwMy5qcGeSlQMAFM0DCs0BtZMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/uvdktkpTURBXy9mNDdkODg0YWQ5YTYxNjk0OTRmZjUwMmQ0Nzc3ZDQwMy5qcGeSlQMAFM0DCs0BtZMFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">"Od 25 lat toczę boje, teraz nienawiść eksplodowała". Owsiak rezygnuje z funkcji prezesa WOŚP</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-3 bigItem">
    <a href="https://noizz.pl/opinie/atak-na-pawla-adamowicza-podczas-wosp/vz8mkd9" data-uuid-ui="768ab287-c03d-4f9d-8bc8-e0b169627e8c" data-gtm="noizz_3">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/G1aktkpTURBXy9lOTE1Zjg5NjA4N2E5YmIzZGIzNjcyZWU0YjMyZDllYS5qcGeSlQMAAM0XgM0NOJMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/G1aktkpTURBXy9lOTE1Zjg5NjA4N2E5YmIzZGIzNjcyZWU0YjMyZDllYS5qcGeSlQMAAM0XgM0NOJMFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Atak na Pawła Adamowicza powinien zmusić nas do refleksji nad przemocą i językiem nienawiści</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-4 bigItem">
    <a href="https://noizz.pl/lifestyle/jajo-eugene-pokonalo-kylie-jenner-to-najbardziej-lajkowane-zdjecie-na-instagramie/w5l90g0" data-uuid-ui="ee1909ec-aea9-474e-8278-fc43ca3e77ce" data-gtm="noizz_4">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/XP6ktkpTURBXy9kYzFhNWMyMzAwMTc5ODgzM2ViMjZhMThhODA5ZWU0OS5wbmeSlQM2AM0DXs0B5ZMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/XP6ktkpTURBXy9kYzFhNWMyMzAwMTc5ODgzM2ViMjZhMThhODA5ZWU0OS5wbmeSlQM2AM0DXs0B5ZMFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Jajo pokonało Kylie Jenner. To najbardziej lajkowane zdjęcie na Instagramie w historii</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-5 bigItem">
    <a href="https://noizz.pl/film/rick-and-morty-4-sezon-kto-pokaze-kreskowke-adult-swim/em1mrcl" data-uuid-ui="ff8e71c1-9153-4f06-8289-08b26fa15a81" data-gtm="noizz_5">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/HViktkpTURBXy8wODAwMmQ3NzY4MjNhMGFmNmE3NzcwYWVkNGIyZjVmZi5qcGeSlQMAJM0EnM0Cl5MFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/HViktkpTURBXy8wODAwMmQ3NzY4MjNhMGFmNmE3NzcwYWVkNGIyZjVmZi5qcGeSlQMAJM0EnM0Cl5MFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Rick i Morty szykują się do powrotu! Wiemy, kto pokaże 4. sezon kreskówki</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-6 bigItem">
    <a href="https://noizz.pl/spoleczenstwo/wiece-po-ataku-na-prezydenta-gdanska-pawla-adamowicza/cmqv44g" data-uuid-ui="4b7959d7-13c0-460e-b693-969452ae4f74" data-gtm="noizz_6">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/AiyktkpTURBXy83NzljYzU0NzU5Njg2ZGU3NjZlOGI1OWRjYmJiYzk1YS5qcGeSlQMoAM0DcM0B75MFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/AiyktkpTURBXy83NzljYzU0NzU5Njg2ZGU3NjZlOGI1OWRjYmJiYzk1YS5qcGeSlQMoAM0DcM0B75MFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Bez przemówień, wolne od hejtu, polityki i podziałów. Światełka dla Pawła Adamowicza w wielu miastach w Polsce</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-7 bigItem">
    <a href="https://noizz.pl/fashion/misbhv-na-tygodniu-mody-w-paryzu/gc7nh2c" data-uuid-ui="970bccba-cd33-4172-b26c-9c17878397cc" data-gtm="noizz_7">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/pxektkpTURBXy9hODA2ZjQyM2Y4YWEwNWYzZDQ2Y2YwOWJlNGNjODA3YS5qcGeSlQMAXc0LuM0Gl5MFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/pxektkpTURBXy9hODA2ZjQyM2Y4YWEwNWYzZDQ2Y2YwOWJlNGNjODA3YS5qcGeSlQMAXc0LuM0Gl5MFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Polska marka na tygodniu mody w Paryżu. Już niedługo pokaz MISBHV</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-8 bigItem">
    <a href="https://noizz.pl/spoleczenstwo/ada-z-noizz-byla-wczesniakiem-bez-szans-zyje-dzieki-inkubatorowi-z-wosp/jrl5qcf" data-uuid-ui="3c5489af-5af9-4676-900e-384f1dfebac3" data-gtm="noizz_8">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/QuYktkpTURBXy9kNzZjNzdhYjkyMWUyNGUyNDdjMTNhYzdiZTI2MTZmZC5qcGeSlQMANs0DwM0CHJMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/QuYktkpTURBXy9kNzZjNzdhYjkyMWUyNGUyNDdjMTNhYzdiZTI2MTZmZC5qcGeSlQMANs0DwM0CHJMFXzs" /></noscript>
    </span>
</span>

        
            <span class="title">Ważyłam kilogram, tyle co worek cukru - Ada z Noizz ze łzami w oczach opowiedziała dlaczego warto wspierać WOŚP</span>
        
    </a>
    
  </li>

                  
                </ul>

                
    
    


                </article>
            </div>
        
    



                
                    


    
        
            
        

        
            <div class="sideBarItem popularinonetColumn pictorialFeed alignColumnReady" data-scroll="">
                <article class="newsBox" data-section="popularinonet">

                
                

                
<div class="boxHeader">
    <h1>
        
            <span class="titleHeader">
                
                    Popularne wideo
                
            </span>
        

        
    </h1>

    
</div>


                <ul class="boxContent boxPopularContent">
                  
                    
  <li class="item-1 bigItem">
    <a href="http://onet.tv/i/news/jerzy-owsiak-zlozyl-rezygnacje-z-funkcji-szefa-wosp/ffyjj8" data-gtm="popularVideo_1">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/NlGktkpTURBXy8zOWIxZTgxNDVkODA0MzQwMWNmNmFiMGQ3NzNmOGI0OS5qcGeSlQMAAM0HgM0EOJMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/NlGktkpTURBXy8zOWIxZTgxNDVkODA0MzQwMWNmNmFiMGQ3NzNmOGI0OS5qcGeSlQMAAM0HgM0EOJMFXzs" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Jerzy Owsiak złożył rezygnację z funkcji szefa WOŚP</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-2 bigItem">
    <a href="http://onet.tv/i/news.100/sylwetka-prezydenta-gdanska-pawla-adamowicza/fcncf8" data-gtm="popularVideo_2">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/IFnktkpTURBXy80ODFjNGJmOWU4M2ZlZmIyM2U3NzM2MTBkYjI5Y2ZlYi5qcGeRkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/IFnktkpTURBXy80ODFjNGJmOWU4M2ZlZmIyM2U3NzM2MTBkYjI5Y2ZlYi5qcGeRkwVfOw" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Sylwetka prezydenta Gdańska Pawła Adamowicza</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-3 bigItem">
    <a href="http://onet.tv/i/news/ostatnie-przemowienie-prezydenta-gdanska-pawla-adamowicza/f3cf0p" data-gtm="popularVideo_3">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/ON0ktkqTURBXy83ZGYwNjRlMmQ5ZGE0ZTQxNWNhNmRlZDY2YmE3ZWJlZC5qcGVnkZMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/ON0ktkqTURBXy83ZGYwNjRlMmQ5ZGE0ZTQxNWNhNmRlZDY2YmE3ZWJlZC5qcGVnkZMFXzs" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Ostatnie przemówienie prezydenta Gdańska Pawła Adamowicza</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-4 bigItem">
    <a href="http://onet.tv/i/fakt.100/pawel-adamowicz-nie-zyje/0wy9b4" data-gtm="popularVideo_4">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/NT8ktkpTURBXy9kYmMwZmE0OGNkMWVmZGY1M2Y4MDVkMjY0NWNhNTljYy5wbmeRkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/NT8ktkpTURBXy9kYmMwZmE0OGNkMWVmZGY1M2Y4MDVkMjY0NWNhNTljYy5wbmeRkwVfOw" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Paweł Adamowicz nie żyje</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-5 bigItem">
    <a href="http://onet.tv/i/news/sikorski-zrobmy-wszystko-aby-nie-bylo-tragedii-politycznej/ggeqm4" data-gtm="popularVideo_5">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/2CSktkpTURBXy85MGIxNmUyOGRhNjI2OGIyNGJlMDliNDNlODkzZDNlYi5qcGeRkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/2CSktkpTURBXy85MGIxNmUyOGRhNjI2OGIyNGJlMDliNDNlODkzZDNlYi5qcGeRkwVfOw" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Sikorski: zróbmy wszystko, aby nie było tragedii politycznej</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-6 bigItem">
    <a href="http://onet.tv/i/news.100/pawel-adamowicz-zmarl-po-ataku-nozownika/ewj9e3" data-gtm="popularVideo_6">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/CGFktkqTURBXy85NDI3NzM0Zjk2OTg1NjIzZjk3MGUxZDA4M2RlYTExNS5qcGVnkZMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/CGFktkqTURBXy85NDI3NzM0Zjk2OTg1NjIzZjk3MGUxZDA4M2RlYTExNS5qcGVnkZMFXzs" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Paweł Adamowicz zmarł po ataku nożownika</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-7 bigItem">
    <a href="http://onet.tv/i/news.100/momenty-jurka-owsiaka-wlasnie-za-to-kocha-go-polska/lccend" data-gtm="popularVideo_7">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/vHfktkqTURBXy8zOWZkNDdjYzIxNGEzNmMzOGNjZWZhYzQxNWYwZmJjOC5qcGVnkZMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/vHfktkqTURBXy8zOWZkNDdjYzIxNGEzNmMzOGNjZWZhYzQxNWYwZmJjOC5qcGVnkZMFXzs" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Momenty Jurka Owsiaka. Właśnie za to kocha go Polska</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-8 bigItem">
    <a href="http://onet.tv/i/fakt.100/pawel-adamowicz-1956-2019-prezydent-gdanska/9pjnwt" data-gtm="popularVideo_8">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/1avktkpTURBXy8yNDY1MmQyNjE4YjEzYzNiNDQ0ZjM5YjQ5OGE2ZDczZS5wbmeRkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/1avktkpTURBXy8yNDY1MmQyNjE4YjEzYzNiNDQ0ZjM5YjQ5OGE2ZDczZS5wbmeRkwVfOw" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Paweł Adamowicz 1956-2019. Prezydent Gdańska</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-9 bigItem">
    <a href="http://onet.tv/i/news/stankiewicz-o-mediach-spolecznosciowych-toleruja-mowe-nienawisci/y2er8y" data-gtm="popularVideo_9">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/6hoktkpTURBXy9lYjRhY2JmOWYwN2ZkYTdhZmEzZmM0NjY2NjE2MTE4Mi5qcGeRkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/6hoktkpTURBXy9lYjRhY2JmOWYwN2ZkYTdhZmEzZmM0NjY2NjE2MTE4Mi5qcGeRkwVfOw" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Stankiewicz o mediach społecznościowych: tolerują mowę nienawiści</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-10 bigItem">
    <a href="http://onet.tv/i/news/jurek-owsiak-stala-sie-rzecz-niebywala-ktora-wynika-z-agresji-i-nienawisci/6rkpty" data-gtm="popularVideo_10">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/xptktkpTURBXy8xYTYyNTAxNjkxNmJmOTE5YjU1ODk3ZTMyZDQ2M2MxZi5qcGeRkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/xptktkpTURBXy8xYTYyNTAxNjkxNmJmOTE5YjU1ODk3ZTMyZDQ2M2MxZi5qcGeRkwVfOw" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Jurek Owsiak: stała się rzecz niebywała, która wynika z agresji i nienawiści</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-11 bigItem">
    <a href="http://onet.tv/k/rozrywka/bohemian-rhapsody-drugi-polski-zwiastun/cgm2le" data-gtm="popularVideo_11">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/7tQktkpTURBXy8yNzFhMzdmNzkyZGFhOTlkY2VjNWE0YjYzNGY1M2Q2OC5qcGeRkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/7tQktkpTURBXy8yNzFhMzdmNzkyZGFhOTlkY2VjNWE0YjYzNGY1M2Q2OC5qcGeRkwVfOw" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">"Bohemian Rhapsody": drugi polski zwiastun</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-12 bigItem">
    <a href="http://onet.tv/i/news/jurek-owsiak-po-ataku-na-adamowicza-to-jest-momentami-dziki-kraj/sh20el" data-gtm="popularVideo_12">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/IciktkpTURBXy9hMDAxYmUxZTZjNTMwZDRiZDBhMTFmNTVjMjc3NzlmMy5qcGeRkwVfOw" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/IciktkpTURBXy9hMDAxYmUxZTZjNTMwZDRiZDBhMTFmNTVjMjc3NzlmMy5qcGeRkwVfOw" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Jurek Owsiak po ataku na Adamowicza: to jest momentami dziki kraj</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-13 bigItem">
    <a href="http://onet.tv/i/news/dulkiewicz-wyeliminujmy-agresje-z-naszego-zycia-codziennego/0p5q0z" data-gtm="popularVideo_13">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/CZ3ktkpTURBXy8wZDRjNTUxY2JhZjA2YzE3MmYyNGRlN2EwZDlmNDM3Ni5qcGeSlQMAAM0HgM0EOJMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/CZ3ktkpTURBXy8wZDRjNTUxY2JhZjA2YzE3MmYyNGRlN2EwZDlmNDM3Ni5qcGeSlQMAAM0HgM0EOJMFXzs" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Dulkiewicz: wyeliminujmy agresję z naszego życia codziennego</span>
        
    </a>
    
  </li>

                  
                    
  <li class="item-14 bigItem hide">
    <a href="http://onet.tv/i/news/kalisz-kwestia-bezpieczenstwa-powinna-byc-calkowicie-oderwana-od-polityki/q61pv8" data-gtm="popularVideo_14">

        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/vS5ktkpTURBXy83YWIyYmYyMzM5YmJlNzUxYmRkMThlZTRmNzYxM2IxZi5qcGeSlQMAAM0HgM0EOJMFXzs" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/vS5ktkpTURBXy83YWIyYmYyMzM5YmJlNzUxYmRkMThlZTRmNzYxM2IxZi5qcGeSlQMAAM0HgM0EOJMFXzs" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconSmall"></use></svg></span>

        
            <span class="title">Kalisz: kwestia bezpieczeństwa powinna być całkowicie oderwana od polityki</span>
        
    </a>
    
  </li>

                  
                </ul>

                
    
    


                </article>
            </div>
        
    



                
            </div>
            
            <div style="clear: both"></div>

            
        </div>

    
        
            
                


    <div data-section="flat-gigaboard3" id="qdz" class="lv1c lv1w nvfwzzpbkbfk" data-slot-name="flat-gigaboard3" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-gigaboard3","onet-ad-flat-gigaboard3").setCollapseEmpty(true);
            });
        </script>
        
    </div>



            
        

        <div id="mainPageBody4" class="content whitelistContent lv1c lv1w">
            
            <div class="container-top">
                
                    

<div class="mainCnt whitelistContent lv1c lv1w">
    <article id="ecommerce" data-section="ecommerce">
        
        
        
        
    <div data-section="ad-flat-strefaofert" id="ttbtdj" class="nvfwzzpbkbfk" data-slot-name="flat-strefaofert" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-strefaofert","onet-ad-flat-strefaofert").setCollapseEmpty(true);
            });
        </script>
        
    </div>

    </article>
</div>


                
                    


    <div data-section="ad-flat-google1" id="pzgdg" class="nvfwzzpbkbfk" data-slot-name="flat-google1" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-google1","onet-ad-flat-google1").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    





<div class="mainCnt whitelistContent lv1c lv1w">

    <article class="vodPremiumV2 sliderWidgetContainer mosaic" data-section="onetvodpremium">

         <div class="boxHeader">
            <h1>
                <span>Wypożyczalnia filmów</span>
            </h1>
            <div class="onetWidgetLogo">
                <a href="https://vod.pl/" class="sheet" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="https://ocdn.eu/onetmobilemainpage/mainpage_desktop/icons/vod.png" data-run-module-isrun="1"></a>
            </div>
        </div>

        
        
        <div class="secLinkWrp">
        
            
                <span><a href="http://vod.pl/wmiksowanipl">Wmiksowani.pl</a></span>
            
        
            
                <span><a href="http://vod.pl/filmy#catalog/0/0/paid/date">Premiery</a></span>
            
        
            
                <span><a href="http://vod.pl/filmy-za-darmo">Bezpłatne</a></span>
            
        
            
                <span><a href="http://vod.pl/komedie-online">Komedie</a></span>
            
        
            
                <span><a href="http://vod.pl/filmy-sensacyjne">Sensacyjne</a></span>
            
        
            
                <span><a href="http://vod.pl/dramaty-filmowe">Dramaty</a></span>
            
        
            
                <span><a href="http://vod.pl/programy-onetu">Programy Onetu</a></span>
            
        
        </div>
        

        <div class="onetWidgetSlider">
            <ul class="pureContentList slides">
                <div>
                    
                    
                    <li>
                        <div class="pureContentItem">
                            <a href="https://vod.pl/najnowsze-w-vodpl/zimna-wojna-caly-film-online/2excdjk">
                                <span class="wdgtopinfo">
                                    

                                </span>
                                <span class="photo">
                                    
                                        
                                           <span class="imageContainer ">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/fZvktkqTURBXy9hNjliNzE5M2E5MGQ3NzE3MDcwOWJhMDZiNDAxOGI4YS5qcGVnkpUDAADNASzNAbaTBcyozPU" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/fZvktkqTURBXy9hNjliNzE5M2E5MGQ3NzE3MDcwOWJhMDZiNDAxOGI4YS5qcGVnkpUDAADNASzNAbaTBcyozPU" /></noscript>
    </span>
</span>
                                        
                                    
                                </span>
                                <header>
                                    
                                    <span class="title">Zimna Wojna</span>
                                    

                                    
                                    <span class="description">Dramat</span>
                                    
                                </header>
                            </a>
                        </div>
                    </li>
                    
                    
                    
                    <li>
                        <div class="pureContentItem">
                            <a href="https://vod.pl/filmy/gotti-caly-film-online/x0x1msq">
                                <span class="wdgtopinfo">
                                    
                                        <span class="wdgcomment">PREMIERA</span>
                                    

                                </span>
                                <span class="photo">
                                    
                                        
                                           <span class="imageContainer ">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/kpCktkpTURBXy9hMTViYTg3OGM3MWRlOTUzNTc0ODFiMjdjOWMwY2Y1ZS5wbmeSlQMAAM0BLM0BtpMFzKjM9Q" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/kpCktkpTURBXy9hMTViYTg3OGM3MWRlOTUzNTc0ODFiMjdjOWMwY2Y1ZS5wbmeSlQMAAM0BLM0BtpMFzKjM9Q" /></noscript>
    </span>
</span>
                                        
                                    
                                </span>
                                <header>
                                    
                                    <span class="title">Gotti</span>
                                    

                                    
                                    <span class="description">Dramat, biograficzny</span>
                                    
                                </header>
                            </a>
                        </div>
                    </li>
                    
                    
                    
                    <li>
                        <div class="pureContentItem">
                            <a href="https://vod.pl/filmy/czego-zyczy-sobie-kobieta-caly-film-online/42rqeq5">
                                <span class="wdgtopinfo">
                                    

                                </span>
                                <span class="photo">
                                    
                                        
                                           <span class="imageContainer ">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/8dsktkqTURBXy8yZTY2YWFiNWQ0ZWRjOTUyMWQzNjJjZGFjZjg1Y2ViMS5qcGVnkpUDAADNASzNAbaTBcyozPU" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/8dsktkqTURBXy8yZTY2YWFiNWQ0ZWRjOTUyMWQzNjJjZGFjZjg1Y2ViMS5qcGVnkpUDAADNASzNAbaTBcyozPU" /></noscript>
    </span>
</span>
                                        
                                    
                                </span>
                                <header>
                                    
                                    <span class="title">Czego życzy sobie kobieta</span>
                                    

                                    
                                    <span class="description">Komedia, dramat</span>
                                    
                                </header>
                            </a>
                        </div>
                    </li>
                    
                    
                    
                    <li>
                        <div class="pureContentItem">
                            <a href="https://vod.pl/filmy/whitney-caly-film-online/6gm57ze">
                                <span class="wdgtopinfo">
                                    

                                </span>
                                <span class="photo">
                                    
                                        
                                           <span class="imageContainer ">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/sMIktkqTURBXy9kMjBkNzE1YmUzM2I2MjllZTUwNDE4NTlmZjUxNDY0Yy5qcGVnkpUDAADNASzNAbaTBcyozPU" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/sMIktkqTURBXy9kMjBkNzE1YmUzM2I2MjllZTUwNDE4NTlmZjUxNDY0Yy5qcGVnkpUDAADNASzNAbaTBcyozPU" /></noscript>
    </span>
</span>
                                        
                                    
                                </span>
                                <header>
                                    
                                    <span class="title">Whitney</span>
                                    

                                    
                                    <span class="description">Dokument, biograficzny </span>
                                    
                                </header>
                            </a>
                        </div>
                    </li>
                    
                    
                    
                    <li>
                        <div class="pureContentItem">
                            <a href="https://vod.pl/filmy/rodziny-sie-nie-wybiera-caly-film-online/8m74mh8">
                                <span class="wdgtopinfo">
                                    

                                </span>
                                <span class="photo">
                                    
                                        
                                           <span class="imageContainer ">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/ReRktkqTURBXy84MjNjYTQ5NjhkYWI2MzVhMDZmOTUyNGZlNDBiODRmMi5qcGVnkpUDAADNASzNAbaTBcyozPU" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/ReRktkqTURBXy84MjNjYTQ5NjhkYWI2MzVhMDZmOTUyNGZlNDBiODRmMi5qcGVnkpUDAADNASzNAbaTBcyozPU" /></noscript>
    </span>
</span>
                                        
                                    
                                </span>
                                <header>
                                    
                                    <span class="title">Rodziny się nie wybiera</span>
                                    

                                    
                                    <span class="description">Komedia</span>
                                    
                                </header>
                            </a>
                        </div>
                    </li>
                    
                    
                    
                    <li>
                        <div class="pureContentItem">
                            <a href="https://vod.pl/filmy/303-bitwa-o-anglie-caly-film-online/5jpj2tj">
                                <span class="wdgtopinfo">
                                    

                                </span>
                                <span class="photo">
                                    
                                        
                                           <span class="imageContainer ">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/l_xktkqTURBXy9iZTczOTE1NTViNDhhZjc4OTgwMDM2YjJjODc5NjBkOC5qcGVnkpUDAADNASzNAbaTBcyozPU" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/l_xktkqTURBXy9iZTczOTE1NTViNDhhZjc4OTgwMDM2YjJjODc5NjBkOC5qcGVnkpUDAADNASzNAbaTBcyozPU" /></noscript>
    </span>
</span>
                                        
                                    
                                </span>
                                <header>
                                    
                                    <span class="title">303. Bitwa o Anglię</span>
                                    

                                    
                                    <span class="description">Dramat, wojenny</span>
                                    
                                </header>
                            </a>
                        </div>
                    </li>
                    
                    
                    
                    <li>
                        <div class="pureContentItem">
                            <a href="https://vod.pl/filmy/jestem-taka-piekna-caly-film-online/5xgbbqm">
                                <span class="wdgtopinfo">
                                    

                                </span>
                                <span class="photo">
                                    
                                        
                                           <span class="imageContainer ">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/CRVktkqTURBXy8wZjZmMWI1ZWIyN2Q3ZTY3ZDg3MDg2ODQyNjQyNTllNy5qcGVnkpUDAADNASzNAbaTBcyozPU" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/CRVktkqTURBXy8wZjZmMWI1ZWIyN2Q3ZTY3ZDg3MDg2ODQyNjQyNTllNy5qcGVnkpUDAADNASzNAbaTBcyozPU" /></noscript>
    </span>
</span>
                                        
                                    
                                </span>
                                <header>
                                    
                                    <span class="title">Jestem taka piękna</span>
                                    

                                    
                                    <span class="description">Komedia</span>
                                    
                                </header>
                            </a>
                        </div>
                    </li>
                    
                    
                </div>
            </ul>
        </div>
    </article>
</div>




                
                    



    
    <div class="mainCnt whitelistContent lv1c lv1w">
        <article data-section="onetsocial">

            <section class="mosaic">

                <div class="boxHeader">

    <h1>
     
        <span>VOD.PL - oglądaj więcej</span>
    
    </h1>

</div>




                

                
                    
                        
                            <div class="items"><div class="sectionLine sectionLineMax">
                        

                        
                            


























    


<a data-uuid-ui="f56340f7-eb74-45e8-8a20-89a857afd653" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="social_1" href="https://vod.pl/programy-tv/spadkobiercy/xfpcbgp">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/RMkktkqTURBXy83MDAxZTc2MTliNjc4OWI5ZDMyOTRlNTFmNjc3MzIwYi5qcGVnk5UDBQDNBKHNApqTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/RMkktkqTURBXy83MDAxZTc2MTliNjc4OWI5ZDMyOTRlNTFmNjc3MzIwYi5qcGVnk5UDBQDNBKHNApqTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Po ripoście Górskiego Kołaczkowska nie mogła powstrzymać śmiechu</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-uuid-ui="f297a15b-c43f-4d46-94f7-233914178394" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="social_2" href="https://vod.pl/programy-tv/zaprogramowac-mozg-adaptacja/znjbq5r">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/jv6ktkpTURBXy84ZGZlYmU4ZjkzNWMwMjM0ODA5YTk3ODVlYzcxZTdhOS5qcGeTlQMLe80Db80B7pMFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/jv6ktkpTURBXy84ZGZlYmU4ZjkzNWMwMjM0ODA5YTk3ODVlYzcxZTdhOS5qcGeTlQMLe80Db80B7pMFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Banalny sposób na lepsze sportowe wyniki. Tę technikę wykorzystują biathloniści</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-uuid-ui="febf8d07-a313-4883-a375-86d43f6b78a8" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="social_3" href="https://vod.pl/programy-tv/matura-to-bzdura-prawo-jazdy/nz2z88s">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/Bq4ktkqTURBXy8yMGQ0OWY4MTQwYmU5MzIwZmM1M2M4MWJkNTVjOTBjMS5qcGVnk5UDJBvNC2zNBmuTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/Bq4ktkqTURBXy8yMGQ0OWY4MTQwYmU5MzIwZmM1M2M4MWJkNTVjOTBjMS5qcGVnk5UDJBvNC2zNBmuTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Odpowiesz na wszystkie pytania z egzaminu na prawo jazdy? Zobacz</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-uuid-ui="6b1197fe-30ae-4089-b009-ebd06f3bbb0b" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 lastItem
     
    " data-gtm="social_4" href="http://vod.pl/playerpl-promocja/programy-online/zycie-bez-wstydu-odcinki,1397/odcinek-2,S01E02,22278">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/5MvktkpTURBXy9kMDdmODhhYjM5ZjE1MjRiOWRhOTlhZjAzNDEyMmM4ZC5wbmeTlQMAAM0EsM0CoZMFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/5MvktkpTURBXy9kMDdmODhhYjM5ZjE1MjRiOWRhOTlhZjAzNDEyMmM4ZC5wbmeTlQMAAM0EsM0CoZMFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
<svg class="itemShortVideo"><use xlink:href="#videoIconBig"></use></svg></span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Na jej ciele pojawia się coraz więcej większych i mniejszych narośli. Powoduje je rzadka choroba</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        
                            </div></div>
                        

                    
                

            </section>
        </article>
    </div>
    




                
                    



    
    <div class="mainCnt whitelistContent lv1c lv1w">
        <article data-section="onetstudio">

            <section class="mosaic">

                <div class="boxHeader">

    <h1>
        <a href="https://sympatia.onet.pl/?utm_source=onet.pl&amp;utm_medium=referral&amp;utm_content=sg&amp;utm_campaign=trescired7_bloczek_0712_sg">
        
            Umów się na randkę
         
        </a>
    </h1>

</div>




                

                
                    
                        
                            <div class="items"><div class="sectionLine sectionLineMax">
                        

                        
                            


























    


<a data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="studio_1" href="https://porady.sympatia.onet.pl/sympatia-radzi/wspieraj-wosp-z-sympatia/2cmjf2t?utm_source=onet.pl&amp;utm_medium=referral&amp;utm_content=wosp2019-aukcja&amp;utm_campaign=trescired21_bloczek_0112_1">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/_zuktkqTURBXy8xYzg2MGZjYTg4MDM1ZjJkY2QzNWJmNjUxNDg0ZDEyYi5qcGVnk5UDAM0Bz80Cic0BbJMFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/_zuktkqTURBXy8xYzg2MGZjYTg4MDM1ZjJkY2QzNWJmNjUxNDg0ZDEyYi5qcGVnk5UDAM0Bz80Cic0BbJMFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Wesprzyj WOŚP i weź udział w wyjątkowym spotkaniu!</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="studio_2" href="https://porady.sympatia.onet.pl/sympatia-radzi/zakochanie-w-kolezance-lub-koledze-z-pracy-zblizyly-nas-do-siebie-trudne-sytuacje/v0klmb5?utm_source=onet.pl&amp;utm_medium=referral&amp;utm_content=zakochanie&amp;utm_campaign=trescired22_bloczek_0111_2">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/oYlktkqTURBXy85OTZmZmFiMWRkMGQ4ZTEyZWM0MDRiYTkwYzNlN2QxZi5qcGVnk5UDABLNAeDNAQ6TBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/oYlktkqTURBXy85OTZmZmFiMWRkMGQ4ZTEyZWM0MDRiYTkwYzNlN2QxZi5qcGVnk5UDABLNAeDNAQ6TBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">On - żona i dwójka dzieci. Ona - nieprzeciętnie atrakcyjna, dobrze wykształcona...</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="studio_3" href="https://sympatia.onet.pl/randki,kobiety,randki.html?utm_source=onet.pl&amp;utm_medium=referral&amp;utm_content=randki-kobiety&amp;utm_campaign=trescired4_bloczek_1611_4">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/cPfktkqTURBXy9hNTQ1ODhiN2IyMWE5ZTY4MzU3OTQ1ZThhNjQ0NjQ0MS5qcGVnk5UDADXNA-bNAjCTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/cPfktkqTURBXy9hNTQ1ODhiN2IyMWE5ZTY4MzU3OTQ1ZThhNjQ0NjQ0MS5qcGVnk5UDADXNA-bNAjCTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Szukasz partnerki? Masz ochotę umówić się na randkę jeszcze dziś?</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 lastItem
     
    " data-gtm="studio_4" href="https://porady.sympatia.onet.pl/sympatia-radzi/jak-zniechecic-do-siebie-mezczyzne-uwaga-to-nie-takie-trudne/dtt4g9q?utm_source=onet.pl&amp;utm_medium=referral&amp;utm_content=jak-zniechecic&amp;utm_campaign=trescired23_bloczek_0111_3">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/KpvktkqTURBXy9iNjJlOWE1OGVjZjdlMmRiNzEyMDIxMzA1MGJkMjYyZi5qcGVnk5UDABLNAeDNAQ6TBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/KpvktkqTURBXy9iNjJlOWE1OGVjZjdlMmRiNzEyMDIxMzA1MGJkMjYyZi5qcGVnk5UDABLNAeDNAQ6TBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Jak zniechęcić do siebie mężczyznę? </span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        
                            </div></div>
                        

                    
                

            </section>
        </article>
    </div>
    




                
                    



    
    <div class="mainCnt whitelistContent lv1c lv1w">
        <article data-section="probono">

            <section class="mosaic">

                <div class="boxHeader">

    <h1>
        <a href="http://wiadomosci.onet.pl/onet-pro-bono">
        
            Onet Pro Bono
         
        </a>
    </h1>

</div>




                

                
                    
                        
                            <div class="items"><div class="sectionLine sectionLineMax">
                        

                        
                            
















    











    


<a data-uuid-ui="68a5c5df-eb43-4f62-8a02-4460a81ff8fb" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="proBono_1" href="https://wiadomosci.onet.pl/kraj/zycie-w-cieniu-wojny-fundacja-swietego-mikolaja-z-pomoca-dla-dzieci-z-mariupola/r1n0nmj">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/WiKktkpTURBXy8wZDI3OTY0YjRjMzAxMGRiOTQxYWQ2YjY1YThmZjUzMC5wbmeTlQMTAM0CFc0BK5MFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/WiKktkpTURBXy8wZDI3OTY0YjRjMzAxMGRiOTQxYWQ2YjY1YThmZjUzMC5wbmeTlQMTAM0CFc0BK5MFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Życie w cieniu wojny. Fundacja Świętego Mikołaja z pomocą dla dzieci z Mariupola</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-uuid-ui="2357ad88-e14b-49a6-872a-82d646c9767e" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="proBono_2" href="https://wiadomosci.onet.pl/kraj/nie-pozwolmy-aby-bruno-stracil-nozki-konieczna-jest-kosztowna-operacja/zprypwd">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/Xo6ktkqTURBXy8xZDY4MzIzYTY1ODIyY2JlYmMzZmYwZGQ0YmZlNjRjNS5qcGVnk5UDABnNAorNAW2TBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/Xo6ktkqTURBXy8xZDY4MzIzYTY1ODIyY2JlYmMzZmYwZGQ0YmZlNjRjNS5qcGVnk5UDABnNAorNAW2TBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Nie pozwólmy, aby Bruno stracił nóżki. Konieczna jest kosztowna operacja</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-uuid-ui="87ac1426-dd2e-4806-b833-3dde0349dc0c" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="proBono_3" href="https://wiadomosci.onet.pl/kraj/sms-y-po-raz-kolejny-wspieraja-organizacyjnie-i-finansowo-wosp/hs4x2eg">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/5kTktkqTURBXy8wNDg1YTRkMjM5ODYyYWE1ZDNjYzE5M2FmNDcxNjNkYy5qcGVnk5UDAMyCzRgOzQ2EkwXNASzMqJUH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/5kTktkqTURBXy8wNDg1YTRkMjM5ODYyYWE1ZDNjYzE5M2FmNDcxNjNkYy5qcGVnk5UDAMyCzRgOzQ2EkwXNASzMqJUH2TIvcHVsc2Ntcy9NREFfLzcxZTE4ZjAwM2FhYTU4OTc1MjAyYWY1OTQ4ZmY2ZmMxLnBuZwDCAA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">SMS-y po raz kolejny wspierają organizacyjnie i finansowo WOŚP</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-uuid-ui="91c8737d-a6b2-42d2-9afc-a5ac52babf16" data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 lastItem
     
    " data-gtm="proBono_4" href="https://wiadomosci.onet.pl/kraj/dolacz-do-zbiorki-i-pomoz-kamilowi-odzyskac-sprawnosc/k3eskne">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/t8_ktkqTURBXy8yMGY3NGU4MWY4NDExYWE4YzdjNTMzMzIwMDUwODU1NS5qcGVnk5UDABnNAorNAW2TBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/t8_ktkqTURBXy8yMGY3NGU4MWY4NDExYWE4YzdjNTMzMzIwMDUwODU1NS5qcGVnk5UDABnNAorNAW2TBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Dołącz do zbiórki i pomóż Kamilowi odzyskać sprawność</span>

            

        </span>


         


        
        

            
                
            

        

	</span>
</a>



                        

                        
                            </div></div>
                        

                    
                

            </section>
        </article>
    </div>
    




                
                    



    
    <div class="mainCnt whitelistContent lv1c lv1w">
        <article data-section="gamesonline">

            <section class="mosaic">

                <div class="boxHeader">

    <h1>
        <a href="http://gameplanet.onet.pl/">
        
            GAMEPLANET. NAJLEPSZE GRY ONLINE ZA DARMO
         
        </a>
    </h1>

</div>




                

                
                    
                        
                            <div class="items"><div class="sectionLine sectionLineMax">
                        

                        
                            


























    


<a data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="gamesOnline_1" href="https://gameplanet.onet.pl/gry/big-farm/l66qv2b?graj=&amp;utm_source=Onet.pl&amp;utm_medium=Refferal&amp;utm_campaign=20190111_Onet_SG_Bloczek_GP_BigFarm">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/krsktkqTURBXy82NzQwNDA2MzU3YWMyMzZjODRkZmYwZWM0ZTRlMTNiNS5qcGVnk5UDAgDNA3_NAfeTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/krsktkqTURBXy82NzQwNDA2MzU3YWMyMzZjODRkZmYwZWM0ZTRlMTNiNS5qcGVnk5UDAgDNA3_NAfeTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Zima zawitała do najpopularniejszej gry farmerskiej Big Farm. Sprawdź co kryje biały puch!</span>

            

        </span>


         


        
        

            
                <span class="info">GamePlanet</span>
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="gamesOnline_2" href="https://gameplanet.onet.pl/gry/rail-nation/fr6ggmg?graj=&amp;utm_source=Onet.pl&amp;utm_medium=Refferal&amp;utm_campaign=20190111_Onet_SG_Bloczek_GP_RailNation">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/fNnktkqTURBXy8wNzg3YTZhYzk2NDMxOTZhZWQ0OGU0NzMxMzRiN2M5Ny5qcGVnk5UDFwzNAy3NAcmTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/fNnktkqTURBXy8wNzg3YTZhYzk2NDMxOTZhZWQ0OGU0NzMxMzRiN2M5Ny5qcGVnk5UDFwzNAy3NAcmTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Gra strategiczno-ekonomiczna Rail Nation świętuje Urodziny! Weź w nich udział</span>

            

        </span>


         


        
        

            
                <span class="info">GamePlanet</span>
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 
     
    " data-gtm="gamesOnline_3" href="https://gameplanet.onet.pl/gry/wladca-smokow/d1wvsqz?graj=&amp;utm_source=Onet.pl&amp;utm_medium=Refferal&amp;utm_campaign=20190111_Onet_SG_Bloczek_GP_WladcaSmokow">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/ap7ktkqTURBXy82NGUzMGRjYzU2Nzg0NjRmNzY3MzBlYzg1YjdhOTI5My5qcGVnk5UDJhTNAynNAceTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/ap7ktkqTURBXy82NGUzMGRjYzU2Nzg0NjRmNzY3MzBlYzg1YjdhOTI5My5qcGVnk5UDJhTNAynNAceTBc0BLMyolQfZMi9wdWxzY21zL01EQV8vNzFlMThmMDAzYWFhNTg5NzUyMDJhZjU5NDhmZjZmYzEucG5nAMIA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Poskrom smoki w doskonałej grze jRPG Władca Smoków</span>

            

        </span>


         


        
        

            
                <span class="info">GamePlanet</span>
            

        

	</span>
</a>



                        

                        

                    
                
                    
                        

                        
                            


























    


<a data-params-element-type="t_lr_4_1" class="itemBox itemBox_lr_4_1 s1_168 lastItem
     
    " data-gtm="gamesOnline_4" href="https://gameplanet.onet.pl/gry/bitwy-zamkow/8thg3sf?graj=&amp;utm_source=Onet.pl&amp;utm_medium=Refferal&amp;utm_campaign=20190111_Onet_SG_Bloczek_GP_BitwyZamkow">

    
        <span class="imageContainer itemMedia">

    <span class="itemCollage cl-1 lastCorrect" data-run-module="local/main.renderBoxLayzyLoadImg" data-original="//ocdn.eu/pulscms-transforms/1/-6ZktkpTURBXy8xZGFiOThjOWVkOTAyMzJkOTBiMTk5MzBhY2VjZjdjYi5wbmeTlQMCMc0GAc0DX5MFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" data-run-module-isrun="1">
        <noscript><img alt="" src="//ocdn.eu/pulscms-transforms/1/-6ZktkpTURBXy8xZGFiOThjOWVkOTAyMzJkOTBiMTk5MzBhY2VjZjdjYi5wbmeTlQMCMc0GAc0DX5MFzQEszKiVB9kyL3B1bHNjbXMvTURBXy83MWUxOGYwMDNhYWE1ODk3NTIwMmFmNTk0OGZmNmZjMS5wbmcAwgA" /></noscript>
    </span>
</span>
    

    

    

	<span class="layerTextBottom
    
        
    
    
    ">

        <span class="tWrp"><span class="title">Zagraj teraz w Bitwy Zamków i weź udział w bitwie wszech-czasów</span>

            

        </span>


         


        
        

            
                <span class="info">GamePlanet</span>
            

        

	</span>
</a>



                        

                        
                            </div></div>
                        

                    
                

            </section>
        </article>
    </div>
    




                
                    


    <div data-section="ad-flat-widget" id="xvkb" class="nvfwzzpbkbfk" data-slot-name="flat-widget" data-collapse="1">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-widget","onet-ad-flat-widget").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    


    <div id="dbdmxzpccwkq" class="nvfwzzpbkbfk" data-slot-name="flat-google2" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-google2","onet-ad-flat-google2").setCollapseEmpty(true);
            });
        </script>
        
    </div>



                
                    

<div class="mainCnt whitelistContent lv1c lv1w" data-title="Najpopularniejsze dziś w Onecie" data-section="persstream" data-run-module="local/main.renderBoxStreamNews" data-scroll="stream_UI" data-run-module-isrun="1">

</div>


                
            </div>
            

            

            
            <div style="clear: both"></div>

            
            <div class="container-bottom">
                
                    


    
    <div class="mainCnt lv1c lv1w">
        <div class="serviceList" data-section="servicelist">
            <div id="catalogueWWW">
                
                    <h3><a href="https://kodyrabatowe.onet.pl/">Kody rabatowe</a></h3>
                
                
                <ul>
                    
                        
                            
                                <li><ul>
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/">Zapytaj</a>
                            </li>
                            
                        
                    
                        
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/encyklopedia/index.html">Encyklopedia</a>
                            </li>
                            
                                </ul></li>
                            
                        
                    
                        
                            
                                <li><ul>
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/Zadania/sciagi/index.html">Ściągi</a>
                            </li>
                            
                        
                    
                        
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/Zadania/zadania/index.html">Zadania szkolne</a>
                            </li>
                            
                                </ul></li>
                            
                        
                    
                        
                            
                                <li><ul>
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/Zadania/testy/index.html">Testy szkolne</a>
                            </li>
                            
                        
                    
                        
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/quizy/index.html">Quizy</a>
                            </li>
                            
                                </ul></li>
                            
                        
                    
                        
                            
                                <li><ul>
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/Category/005/1,Biznes_i_Finanse.html">Biznes i finanse</a>
                            </li>
                            
                        
                    
                        
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/Category/029/1,Gry.html">Gry</a>
                            </li>
                            
                                </ul></li>
                            
                        
                    
                        
                            
                                <li><ul>
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/Category/028/1,Hobby.html">Hobby</a>
                            </li>
                            
                        
                    
                        
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/Category/021/1,Dla_Doroslych.html">Dla dorosłych</a>
                            </li>
                            
                                </ul></li>
                            
                        
                    
                        
                            
                                <li><ul>
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/Category/009/1,Dom_i_Ogrod.html">Dom i ogród</a>
                            </li>
                            
                        
                    
                        
                            
                            <li>
                                <a href="https://zapytaj.onet.pl/Category/016/1,Jedzenie_i_Napoje.html">Jedzenie i napoje</a>
                            </li>
                            
                                </ul></li>
                            
                        
                    

                    <li class="more">
                        <a href="https://kodyrabatowe.onet.pl/">więcej <span>»</span></a>
                    </li>
                </ul>
            </div>
        </div>
    </div>



                
            </div>
            
        </div>

    

    <div class="mainCnt lv1c lv1w" id="mainPageFooter">
        <a class="portalLogo" href="https://www.onet.pl/"><svg><use xlink:href="#logoOnet">Onet</use></svg></a>
        <ul class="colLeft">
            <li>
                <a href="https://polityka-prywatnosci.onet.pl/">Prywatność</a>
            </li>
            <li>
                <a href="http://reklama.onet.pl/">Reklama</a>
            </li>
            <li>
                <a href="http://ofirmie.onet.pl/0,0,0,PL,aktualne_ogloszenia,oferta.html">Praca w Onecie</a>
            </li>
        </ul>
        <ul class="colRight">
            <li>
                <span class="copyrights"> © 2019 Ringier Axel Springer Polska sp. z o.o. - Developed by <a href="http://www.dreamlab.pl/">DreamLab</a></span>
            </li>
        </ul>
    </div>
    
    <div data-section="ad-flat-belkadolna" id="vjp" class="nvfwzzpbkbfk" data-slot-name="flat-belkadolna" data-collapse="1" style="display: none;">
        
        <script type="text/javascript">
            onetAds.cmd.push(function (dlApi) {
                dlApi.defineSlot("flat-belkadolna","onet-ad-flat-belkadolna").setCollapseEmpty(true);
            });
        </script>
        
    </div>


    <div class="notificationPrompt">
    <svg class="notificationIconPack" version="1.1" xmlns="http://www.w3.org/2000/svg">
        <defs>
            <symbol id="tickIcon" viewBox="0 0 50 50">
                <defs>
                    <style data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">
                        .tick1 {
                            fill: #ffd200;
                        }

                        .tick1, .tick2, .tick3 {
                            fill-rule: evenodd;
                        }

                        .tick3 {
                            fill: #fff;
                        }
                    </style>
                </defs>
                <path class="tick1" d="M1043.41,622.18h0a22.865,22.865,0,0,0-32.23,0,21.941,21.941,0,0,0,0,31.7,22.868,22.868,0,0,0,32.23,0,21.941,21.941,0,0,0,0-31.7h0Z" transform="translate(-1001 -612)"></path>
                <path class="tick2" d="M1043.61,619.394h0a24.906,24.906,0,1,0-35.22,35.224,24.7,24.7,0,0,0,35.22,0,24.682,24.682,0,0,0,0-35.224h0Zm-1.17,1.2h0a23.231,23.231,0,1,0-32.83,32.876,23,23,0,0,0,32.83,0,23.054,23.054,0,0,0,0-32.876h0Z" transform="translate(-1001 -612)"></path>
                <path class="tick3" d="M1034.92,627.818l-11.18,11.006-4.59-4.809a0.764,0.764,0,0,0-1.12,0,0.993,0.993,0,0,0,0,1.14l5.14,5.383a1.273,1.273,0,0,0,.57.244,1.188,1.188,0,0,0,.56-0.244l11.74-11.5a0.7,0.7,0,0,0,0-1.059,0.676,0.676,0,0,0-1.12-.163h0Z" transform="translate(-1001 -612)"></path>
                <path class="tick2" d="M1037.53,628.134l-13.39,13.2-5.48-5.767a0.923,0.923,0,0,0-1.35,0,1.183,1.183,0,0,0,0,1.367l6.16,6.455a0.922,0.922,0,0,0,1.35,0l14.05-13.788a0.843,0.843,0,0,0,0-1.27,0.808,0.808,0,0,0-1.34-.2h0Z" transform="translate(-1001 -612)"></path>
            </symbol>
            <symbol id="bellIcon" viewBox="0 0 20 25">
                <defs>
                    <style data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">
                        .bellIcon1 {
                            fill: #fff;
                        }

                        .bellIcon1, .bellIcon2, .bellIcon3 {
                            fill-rule: evenodd;
                        }

                        .bellIcon2 {
                            fill: #ffd200;
                        }
                    </style>
                </defs>
                <path class="bellIcon1" d="M1768.22,675.379h-0.43c-2.04-.327-2.24-6.922-2.34-10.1l-0.02-.773a6.865,6.865,0,0,0-6.05-6.863v-2.985a0.461,0.461,0,1,0-.92,0v2.985a6.865,6.865,0,0,0-6.05,6.863l-0.02.773c-0.1,3.175-.3,9.77-2.34,10.1h-0.43a0.495,0.495,0,0,0,0,.987h6.98a2.324,2.324,0,1,0,4.64,0h6.98A0.495,0.495,0,0,0,1768.22,675.379Z" transform="translate(-1749 -654)"></path>
                <path class="bellIcon2" d="M1768.57,674.463h-0.39c-1.9-.3-2.08-6.4-2.17-9.342l-0.02-.715a6.347,6.347,0,0,0-5.6-6.349v-2.762a0.431,0.431,0,1,0-.86,0v2.762a6.347,6.347,0,0,0-5.6,6.349l-0.02.715c-0.09,2.938-.27,9.04-2.17,9.342h-0.39a0.457,0.457,0,0,0,0,.913h6.46a2.154,2.154,0,1,0,4.3,0h6.46A0.457,0.457,0,0,0,1768.57,674.463Z" transform="translate(-1749 -654)"></path>
                <path class="bellIcon3" d="M1768.52,675.5h-0.43c-2.1-.331-2.3-7.016-2.4-10.235l-0.02-.783a6.978,6.978,0,0,0-6.19-6.957V654.5a0.48,0.48,0,1,0-.96,0v3.025a6.978,6.978,0,0,0-6.19,6.957l-0.02.783c-0.1,3.219-.3,9.9-2.4,10.235h-0.43a0.5,0.5,0,0,0,0,1h7.14a2.383,2.383,0,1,0,4.76,0h7.14A0.5,0.5,0,0,0,1768.52,675.5Zm-8.04,1a1.482,1.482,0,1,1-2.96,0v-0.05h2.96v0.05Zm-8.96-1c1.49-2.057,1.64-6.812,1.74-10.2l0.03-.779a5.718,5.718,0,1,1,11.42,0l0.03,0.779c0.1,3.391.25,8.146,1.74,10.2h-14.96Z" transform="translate(-1749 -654)"></path>
            </symbol>
            <symbol id="arrowUpIcon" viewBox="0 0 41 42">
                <defs>
                    <style data-nvfwzzpbkbfk="true" data-kbqvrzkfnmjk="true">
                        .arrowUp1 {
                            fill: #ffd200;
                        }

                        .arrowUp1, .arrowUp2 {
                            fill-rule: evenodd;
                        }
                        
                    </style>
                </defs>
                <path class="arrowUp1" d="M82.6,906.828l5.986-4.453c-0.105.291-.218,0.579-0.312,0.873a23.956,23.956,0,0,0,15.285,30.171,23.536,23.536,0,0,0,12.8.467,1.2,1.2,0,0,0,.526-1.614,1.245,1.245,0,0,0-1.053-.635,21.272,21.272,0,0,1-11.565-.424,21.645,21.645,0,0,1-13.812-27.262c0.086-.269.189-0.533,0.286-0.8l2.239,7.018a2.31,2.31,0,0,0,1.476.382,1.631,1.631,0,0,0,.708-1.1L91.34,897.46l-10.093,7.508a2.27,2.27,0,0,0,.159,1.382A1.661,1.661,0,0,0,82.6,906.828Z" transform="translate(-78 -896)"></path>
                <path class="arrowUp2" d="M79.588,906.612l6.862-5.042c-0.121.329-.25,0.656-0.358,0.988a27.115,27.115,0,0,0,32.2,34.691,1.352,1.352,0,0,0,.6-1.828,1.431,1.431,0,0,0-1.206-.719,24.5,24.5,0,0,1-29.091-31.348c0.1-.3.216-0.6,0.328-0.9l2.567,7.947a2.672,2.672,0,0,0,1.692.432,1.84,1.84,0,0,0,.811-1.248L89.6,896.005l-11.57,8.5a2.542,2.542,0,0,0,.183,1.565A1.92,1.92,0,0,0,79.588,906.612Z" transform="translate(-78 -896)"></path>
            </symbol>
        </defs>
    </svg>
    
    
    <div class="popupNotif">
    
        <div class="popupCloseIcon">
            Zamknij
            <svg>
                <use xlink:href="#menuCloseIcon"></use>
            </svg>
        </div>
        <div class="onetLogo">
            <svg><use xlink:href="#logoOnet">Onet</use></svg>
        </div>
        <div class="bellIcon">
            <svg>
                <use xlink:href="#bellIcon"></use>
            </svg>
        </div>
        <p class="info">
            <b>Ostrzeżenia pogodowe dla całej Polski?</b>
            Włącz powiadomienia o pogodzie, pilnych wydarzeniach i sporcie
        </p>
        
        <div class="accept">Włącz powiadomienia</div>
    </div>
    
    <div class="glsPush hide"></div>
    
    <div class="infoSystemPrompt">
    
        <div class="arrowIcon">
            <svg>
                <use xlink:href="#arrowUpIcon"></use>
            </svg>
        </div>
        <p class="info">
            <b>Prawie gotowe!</b>
            Kliknij w guzik <span class="buttonLabel">„Zezwalaj”</span>, żeby włączyć interesujące Cię powiadomienia
        </p>
    </div>
    
    <div class="thankPrompt">
    
        <div class="popupCloseIcon">
            <svg>
                <use xlink:href="#menuCloseIcon"></use>
            </svg>
        </div>
        <div class="tickIcon">
            <svg>
                <use xlink:href="#tickIcon"></use>
            </svg>
        </div>
        <p class="info">
            Dzięki, teraz zawsze będziesz na bieżąco.
        </p>
    </div>
    
    
    <div class="tutorialPrompt">
    
        <div class="popupCloseIcon">
            <svg>
                <use xlink:href="#menuCloseIcon"></use>
            </svg>
        </div>
        <div class="arrowIcon">
            <svg>
                <use xlink:href="#arrowUpIcon"></use>
            </svg>
        </div>
        <div class="text">
            <div class="title">
                Chcesz otrzymywać powiadomienia?
            </div>
            <div class="info chromemacosxwindows hide">
                Żeby nic Cię nie ominęło:
                <ul>
                    <li>kliknij zieloną kłódkę</li>
                    <li>przejdź do pozycji <b>„Powiadomienia”</b></li>
                    <li>wybierz <b>„Zawsze zezwalaj w tej witrynie”</b></li>
                </ul>    
            </div>
            <div class="info safarimacosx hide">
                Żeby nic Cię nie ominęło:
                <ul>
                    <li>idź do <b>„Preferencji”</b> programu Safari</li>
                    <li>przejdź do zakładki <b>„Powiadomienia”</b></li>
                    <li>wybierz <b>„Pozwól”</b> przy domenie Onet.pl</li>
                    <li>odśwież stronę</li>
                </ul>    
            </div>
            <div class="info firefoxwindows hide">
                Żeby nic Cię nie ominęło:
                <ul>
                    <li>kliknij zieloną kłódkę</li>
                    <li>zamknij komunikat <b>„Zablokowano”</b> przy opcji <b>„Wyświetlanie powiadomień”</b></li>
                    <li>odśwież stronę i zezwól na otrzymywanie powiadomień</li>
                </ul>
            </div>
            <div class="info firefoxmacosx hide">
                Żeby nic Cię nie ominęło:
                <ul>
                    <li>kliknij zieloną kłódkę</li>
                    <li>przy opcji <b>„Wyświetlanie powiadomień”</b> zmień komunikat na <b>„Zezwalaj”</b></li>
                </ul>
            </div>
            
            <div class="info">
                Gotowe!
            </div>
        </div>
    </div>
</div>

    <script type="text/javascript">/* <![CDATA[ */
        onetAds.time['TI1']=(new Date()).getTime()-onetAds['startTime'];
    /* ]]> */</script>
    
    

    

    
<a class="whitelistLink" href="abp:subscribe?location=http%3A%2F%2Flib.onet.pl%2Fs.csr%2Fwhitelist%2Fonet.pl.txt&amp;title=onet.pl"></a><a class="whitelistLink" href="abp:subscribe?location=http%3A%2F%2Flib.onet.pl%2Fs.csr%2Fwhitelist%2Fonet.pl.txt&amp;title=onet.pl"></a><div id="tndszjpthcs" class=""></div><iframe name="lps/GLOWNA/NOWASG/1547497896319_2" scrolling="no" style="margin: 0px auto; display: block; border: 0px none; vertical-align: bottom;" src="onet_pliki/a.html" width="0" height="0"></iframe><iframe id="gemius_hcconn_1547497896758_63218005" name="lsgetframe" scrolling="no" sandbox="allow-scripts allow-same-origin" style="display: none; visibility: hidden;" src="onet_pliki/lsget.html" width="0" height="0"></iframe><iframe style="display: none;" name="__cmpLocator"></iframe><div class="cmp-app_gdpr"><div class="cmp-popup_popup" style="display: none;"><div class="cmp-popup_overlay"></div><div class="cmp-popup_content"><div class="cmp-intro_intro"><span class="cmp-closebutton_closeButton cmp-closebutton_hasBorder "><svg width="30" height="30" viewBox="0 0 16 16" preserveAspectRatio="xMidYMid meet"><path d="M6.837 8l-2.45-2.464 1.17-1.17 2.45 2.464 2.465-2.465 1.17 1.17L9.162 8l2.48 2.464-1.167 1.17-2.467-2.48-2.48 2.48-1.17-1.17L6.838 8z"></path></svg></span><div class="cmp-intro_title"><span class="">Szanowna Użytkowniczko, Szanowny Użytkowniku,</span></div><div class="cmp-intro_description"><span class=""><p>
 Zanim klikniesz „Przejdź do serwisu” lub zamkniesz to okno, prosimy o 
przeczytanie tej informacji. Prosimy w niej o Twoją dobrowolną zgodę na 
przetwarzanie Twoich danych osobowych przez naszych partnerów 
biznesowych oraz przekazujemy informacje o tzw. cookies i o 
przetwarzaniu przez nas Twoich danych osobowych. <span style="font-weight: bold">Klikając „Przejdź do serwisu” lub zamykając okno przez kliknięcie w znaczek X, zgadzasz się na poniższe.</span> Możesz też odmówić zgody lub ograniczyć jej zakres.</p>
			
    <p style="margin: 25px 0 10px 0; font-weight: 900">Zgoda</p>
	
    <p> Jeśli chcesz zgodzić się na przetwarzanie przez Zaufanych 
Partnerów Grupy RAS Polska Twoich danych osobowych, które udostępniasz w
 historii przeglądania stron i aplikacji internetowych oraz danych 
lokalizacyjnych generowanych przez Twoje urządzenie, w celach 
marketingowych (obejmujących zautomatyzowaną analizę Twojej aktywności 
na stronach internetowych i w aplikacjach w celu ustalenia Twoich 
potencjalnych zainteresowań dla dostosowania reklamy i oferty) w tym na 
umieszczanie znaczników internetowych (cookies itp.) na Twoich 
urządzeniach i odczytywanie takich znaczników, kliknij przycisk „Przejdź
 do serwisu” lub zamknij to okno. </p>
	
<p>Jeśli nie chcesz wyrazić zgody lub ograniczyć jej zakres, kliknij „Ustawienia zaawansowane”.  </p>

<p>Wyrażenie zgody jest dobrowolne. Możesz edytować zakres zgody, w tym 
wycofać ją całkowicie, klikając „Ustawienia zaawansowane” lub 
przechodząc na naszą stronę
<a href="https://polityka-prywatnosci.onet.pl/index.html" target="_blank">polityki prywatności</a>.</p>
            
           <p>Powyższa zgoda dotyczy przetwarzania Twoich danych 
osobowych w celach marketingowych Zaufanych Partnerów. Zaufani Partnerzy
 to firmy z obszaru e-commerce i reklamodawcy oraz działające w ich 
imieniu domy mediowe i podobne organizacje, z którymi Grupa RAS Polska 
współpracuje lub które polecane są przez międzynarodowe organizacje 
branżowe takie jak np. organizacja IAB (Interactive Advertising Bureau).</p>
		   
<p>Podmioty z Grupy RAS Polska w ramach udostępnianych przez siebie 
usług internetowych przetwarzają Twoje dane opisane na wstępie we 
własnych celach marketingowych w oparciu o prawnie uzasadniony, wspólny 
interes podmiotów Grupy RAS Polska. Przetwarzanie takie nie wymaga 
dodatkowej zgody z Twojej strony, ale możesz mu się w każdej chwili 
sprzeciwić. O ile nie zdecydujesz inaczej, dokonując stosownych zmian 
ustawień w Twojej przeglądarce, podmioty z Grupy RAS Polska będą również
 instalować na Twoich urządzeniach pliki cookies i podobne oraz 
odczytywać informacje z takich plików. Bliższe informacje o cookies 
znajdziesz w akapicie „Cookies” pod koniec tej informacji.</p>
<p></p>
    <p style="margin: 25px 0 10px 0; font-weight: 900">Administrator danych osobowych</p>
    <p> Administratorem Twoich danych osobowych jest podmiot z Grupy RAS
 Polska, z którego serwisu lub aplikacji korzystasz. Naszą nazwę 
znajdziesz zawsze na samym dole strony po prawej stronie, a logo na 
planszy zawierającej niniejszą informację. Informację o powołaniu przez 
nas inspektora ochrony danych i jego danych kontaktowych znajdziesz też 
na samym dole strony w polityce prywatności. Administratorami Twoich 
danych osobowych będą także pozostałe podmioty z Grupy RAS Polska, 
których pełne dane możesz sprawdzić <a href="https://polityka-prywatnosci.onet.pl/grupa-rasp.html" target="_blank">pod tym linkiem</a>.
 Jeżeli wyrazisz zgodę, o którą wyżej prosimy, administratorami Twoich 
danych osobowych będą także nasi Zaufani Partnerzy. Listę Zaufanych 
Partnerów możesz sprawdzić w każdym momencie na stronie naszej <a href="https://polityka-prywatnosci.onet.pl/index.html" target="_blank">polityki prywatności</a> i tam też zmodyfikować lub cofnąć swoje zgody.</p>
        
		<p style="margin: 25px 0 10px 0; font-weight: 900">Podstawa i cel przetwarzania</p>
       
	   <p> Twoje dane przetwarzamy w następujących celach:</p>
        <br>
        <ul style="list-style-position: inside; list-style-type: disc;">
		
            <li style="margin-bottom: 20px">1. Jeśli zawieramy z Tobą 
umowę o realizację danej usługi (np. usługi zapewniającej Ci możliwość 
zapoznania się z jednym z naszych serwisów w oparciu o treść regulaminu 
tego serwisu), to możemy przetwarzać Twoje dane w zakresie niezbędnym do
 realizacji tej umowy. Gdy zakładasz konto poczty elektronicznej, to 
umowa o dostarczenie tego konta upoważnia nas do przetwarzania danych 
niezbędnych do jego zapewnienia (np. danych podanych przez Ciebie w 
profilu tego konta). Bez tego nie bylibyśmy w stanie zapewnić Ci usługi,
 a Ty nie mógłbyś z niej korzystać. Niepodanie takich danych uniemożliwi
 nam zawarcie i wykonanie umowy.</li>
			
            <li style="margin-bottom: 20px">2. Zapewnianie 
bezpieczeństwa usługi (np. sprawdzenie, czy do Twojego konta nie loguje 
się nieuprawniona osoba), dokonanie pomiarów statystycznych, ulepszanie 
naszych usług i dopasowanie ich do potrzeb i wygody użytkowników (np. 
personalizowanie treści w usługach), jak również prowadzenie marketingu i
 promocji własnych usług (np. jeśli interesujesz się historią i oglądasz
 materiały historyczne w portalu Onet lub na innych stronach 
internetowych, to możemy Ci wyświetlić reklamę dotyczącą artykułu w 
serwisie Onet Podróże o historycznych trasach krajoznawczych). Takie 
przetwarzanie danych to realizacja naszych prawnie uzasadnionych 
interesów.  </li>
			
            <li>3. Za Twoją zgodą usługi marketingowe dostarczą Ci nasi 
Zaufani Partnerzy oraz my dla podmiotów trzecich. Aby móc pokazać 
interesujące Cię reklamy (np. produktu, którego możesz potrzebować) 
reklamodawcy i ich przedstawiciele chcieliby mieć możliwość 
przetwarzania Twoich danych związanych z odwiedzanymi przez Ciebie 
stronami internetowymi. Udzielenie takiej zgody jest dobrowolne, nie 
musisz jej udzielać, nie pozbawi Cię to dostępu do naszych usług. Masz 
również możliwość ograniczenia zakresu lub zmiany zgody w dowolnym 
momencie.</li>
        </ul>
        
		<br>
        <p> Twoje dane przetwarzane będą do czasu istnienia podstawy do 
ich przetwarzania, czyli w przypadku udzielenia zgody do momentu jej 
cofnięcia, ograniczenia lub innych działań z Twojej strony 
ograniczających tę zgodę, w przypadku niezbędności danych do wykonania 
umowy, przez czas jej wykonywania i ewentualnie okres przedawnienia 
roszczeń z niej (zwykle nie więcej niż 3 lata, a maksymalnie 6 lat), a w
 przypadku, gdy podstawą przetwarzania danych jest uzasadniony interes 
administratora, do czasu zgłoszenia przez Ciebie skutecznego sprzeciwu.</p>
      
	  <p style="margin: 25px 0 10px 0; font-weight: 900">Przekazywanie danych</p>
		
        <p> Administratorzy danych mogą powierzać Twoje dane 
podwykonawcom IT, księgowym, agencjom marketingowym etc. Zrobią to 
jedynie w niezbędnym zakresie i na podstawie umowy o powierzenie 
przetwarzania danych zobowiązującej taki podmiot do odpowiedniego 
zabezpieczenia danych i niekorzystania z nich do własnych celów.</p>
		
        <p style="margin: 25px 0 10px 0; font-weight: 900">Cookies</p>
		
        <p> Na naszych stronach i w aplikacjach używamy znaczników 
internetowych takich jak pliki np. cookie lub local storage do zbierania
 i przetwarzania danych osobowych w celu personalizowania treści i 
reklam oraz analizowania ruchu na stronach, aplikacjach i w Internecie. W
 ten sposób technologię tę wykorzystują również podmioty z Grupy RAS 
Polska oraz nasi Zaufani Partnerzy, którzy także chcą dopasowywać 
reklamy do Twoich preferencji. Cookies to dane informatyczne zapisywane w
 plikach i przechowywane na Twoim urządzeniu końcowym (tj. twój 
komputer, tablet, smartphone itp.), które przeglądarka wysyła do serwera
 przy każdorazowym wejściu na stronę z tego urządzenia, podczas gdy 
odwiedzasz strony w Internecie. Szczegółową informację na temat plików 
cookie i ich funkcjonowania znajdziesz <a href="https://polityka-prywatnosci.onet.pl/grupa-rasp.html" target="_blank">pod tym linkiem</a>.
 Pod tym linkiem znajdziesz także informację o tym jak zmienić 
ustawienia przeglądarki, aby ograniczyć lub wyłączyć funkcjonowanie 
plików cookies itp. oraz jak usunąć takie pliki z Twojego urządzenia.</p>
		
             
		<p style="margin: 25px 0 10px 0; font-weight: 900">Twoje uprawnienia</p>
        <p> Przysługują Ci następujące uprawnienia wobec Twoich danych i
 ich przetwarzania przez nas, inne podmioty z Grupy RAS Polska i 
Zaufanych Partnerów:</p>
		<br>
             <p>1. Jeśli udzieliłeś zgody na przetwarzanie danych możesz
 ją w każdej chwili wycofać (cofnięcie zgody oczywiście nie uchyli 
zgodności z prawem przetwarzania już dokonanego na jej podstawie);</p>
       <p> 2. Masz również prawo żądania dostępu do Twoich danych 
osobowych, ich sprostowania, usunięcia lub ograniczenia przetwarzania, 
prawo do przeniesienia danych, wyrażenia sprzeciwu wobec przetwarzania 
danych oraz prawo do wniesienia skargi do organu nadzorczego, którym w 
Polsce jest Prezes Urzędu Ochrony Danych Osobowych. <a href="https://polityka-prywatnosci.onet.pl/index.html" target="_blank">Pod tym adresem</a> znajdziesz dodatkowe informacje dotyczące przetwarzania danych i Twoich uprawnień.
        </p></span></div><div class="cmp-intro_options"><button class="cmp-button_button cmp-intro_rejectAll cmp-button_invert"><span class="">Ustawienia zaawansowane</span></button><button class="cmp-button_button cmp-intro_acceptAll "><span class="">Przejdź do serwisu</span></button></div></div></div></div><div class="cmp-footer_footer" style="display: none;"><span class="cmp-closebutton_closeButton  cmp-footer_close"><svg width="30" height="30" viewBox="0 0 16 16" preserveAspectRatio="xMidYMid meet"><path d="M6.837 8l-2.45-2.464 1.17-1.17 2.45 2.464 2.465-2.465 1.17 1.17L9.162 8l2.48 2.464-1.167 1.17-2.467-2.48-2.48 2.48-1.17-1.17L6.838 8z"></path></svg></span><span><span class="">Zmień swoje ustawienia prywatności klikając</span><a class="cmp-footer_openConsent"><span class="">tutaj</span></a></span></div></div>
<script type="text/javascript" id="">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version="2.0",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,"script","https://connect.facebook.net/en_US/fbevents.js");fbq("init","1023614747809903");fbq("track","PageView");</script>
<noscript><img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=1023614747809903&amp;ev=PageView&amp;noscript=1"></noscript>
<div alt="" src="https://googleads.g.doubleclick.net/pagead/viewthroughconversion/972452827/?value=0&amp;amp;label=AT7fCI3luQIQ2-fZzwM&amp;amp;guid=ON&amp;amp;script=0"></div></body></html>